<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress.com" created="2018-10-09 14:41"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Xavki</title>
	<link>http://xavki.blog</link>
	<description>De simples lignes de code dans son bloc note</description>
	<pubDate>Tue, 09 Oct 2018 14:41:04 +0000</pubDate>
	<language></language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
	<wp:base_blog_url>http://xavki.blog</wp:base_blog_url>

	<wp:author><wp:author_id>130948697</wp:author_id><wp:author_login><![CDATA[xavki]]></wp:author_login><wp:author_email><![CDATA[xavier.pestel@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[xavki]]></wp:author_display_name><wp:author_first_name><![CDATA[Xav]]></wp:author_first_name><wp:author_last_name><![CDATA[Ki]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>4011177</wp:term_id><wp:category_nicename>ansible</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Ansible]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>37292</wp:term_id><wp:category_nicename>awk</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[AWK]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>2674</wp:term_id><wp:category_nicename>bash</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Bash]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>4504191</wp:term_id><wp:category_nicename>docker</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Docker]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>645626092</wp:term_id><wp:category_nicename>extrageek</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Extrageek]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>209196</wp:term_id><wp:category_nicename>git</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>4419</wp:term_id><wp:category_nicename>mysql</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Mysql]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>3766</wp:term_id><wp:category_nicename>oracle</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Oracle]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>5226</wp:term_id><wp:category_nicename>perl</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Perl]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>15989</wp:term_id><wp:category_nicename>postgresql</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Postgresql]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>832</wp:term_id><wp:category_nicename>python</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Python]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>111945</wp:term_id><wp:category_nicename>securite</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Sécurité]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>37293</wp:term_id><wp:category_nicename>sed</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Sed]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>21246928</wp:term_id><wp:category_nicename>serveurs-web</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Serveurs web]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>13433817</wp:term_id><wp:category_nicename>sites-outils</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Sites &amp; Outils]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>740</wp:term_id><wp:category_nicename>system</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[System]]></wp:cat_name>
</wp:category>
	<wp:category><wp:term_id>386281</wp:term_id><wp:category_nicename>trucs-et-astuces</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Trucs et astuces]]></wp:cat_name>
</wp:category>
	<wp:term><wp:term_id>6326</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[primary]]></wp:term_slug><wp:term_name><![CDATA[Primary]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>6327</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[reseaux-sociaux]]></wp:term_slug><wp:term_name><![CDATA[Réseaux sociaux]]></wp:term_name>
</wp:term>

	<generator>http://wordpress.com/</generator>

<image>
	<url>https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-818563.jpeg?w=32</url>
	<title>Xavki</title>
	<link>http://xavki.blog</link>
	<width>32</width>
	<height>32</height>
</image> 
	
	<item>
		<title>Home</title>
		<link>http://xavki.blog/2017/11/17/home/</link>
		<pubDate>Fri, 17 Nov 2017 13:24:58 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2017/11/17/home/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2017-11-17 14:24:58</wp:post_date>
		<wp:post_date_gmt>2017-11-17 13:24:58</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter</title>
		<link>http://xavki.blog/2017/11/17/twitter/</link>
		<pubDate>Fri, 17 Nov 2017 13:24:58 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2017/11/17/twitter/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2017-11-17 14:24:58</wp:post_date>
		<wp:post_date_gmt>2017-11-17 13:24:58</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>twitter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="reseaux-sociaux"><![CDATA[Réseaux sociaux]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://twitter.com/Priximmo]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Placeholder Image</title>
		<link>http://xavki.blog/placeholder-image/</link>
		<pubDate>Fri, 17 Nov 2017 13:24:59 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2017/11/pexels-photo-30732.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2017-11-17 14:24:59</wp:post_date>
		<wp:post_date_gmt>2017-11-17 13:24:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>placeholder-image</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2017/11/pexels-photo-30732.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2017/11/pexels-photo-30732.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:900;s:6:"height";i:536;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2017/11/pexels-photo-30732.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"1.8";s:6:"credit";s:0:"";s:6:"camera";s:12:"Canon EOS 6D";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1415049140";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"35";s:3:"iso";s:4:"4000";s:13:"shutter_speed";s:4:"0.05";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:45637;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Python - Créer un socket d&#039;exploration</title>
		<link>http://xavki.blog/2017/11/25/python-creer-un-socket-dexploration/</link>
		<pubDate>Sat, 25 Nov 2017 17:42:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[Créer un socket qui permettra de parcourir un répertoire avec une récurrence.

Pour l'utiliser en tant que client :  nc -p 1234
<pre>#!/usr/bin/python
import socket,time,os,re
host=''
port=1234
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
s.bind((host,port))
s.listen(5)

client,adresse=s.accept()
print adresse
print "Une connexion efectuee depuis "
print client.getpeername()
client.send('Welcome Xavier !')
while 1:
data=client.recv(1024)
if data=="fin\n":
break
rep = re.search("(/.*/)",data)
client.send(rep.group(1))
if rep:
for path, dirs, files in os.walk(rep.group(1)):
client.send(path)
for f in files:
f=f+"\n"
client.send(f)
client.close()
s.close()</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2017-11-25 18:42:41</wp:post_date>
		<wp:post_date_gmt>2017-11-25 17:42:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-creer-un-socket-dexploration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[11823328644]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Mysql] [Docker] : Sauvegarde mysql pour conteneurs Docker</title>
		<link>http://xavki.blog/2018/06/14/sauvegarde-mysql-de-conteneurs-docker/</link>
		<pubDate>Thu, 14 Jun 2018 15:26:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[Je publie ce code car je le trouve bien pratique. Le raisonnement me semble logique et j'ai apprécié le rédiger alors cela peut surement vous inspirer. Si vous êtes curieux, vous pouvez retrouver <a href="https://xavki.blog/docker/">mes commandes docker sur cette page</a>.

Alors je vous dresse les points essentiels du code car le mien fait intègre aussi postgres et mariadb (identique à mysql exactement).

Premièrement on liste les ID, les noms et les images des conteneurs. Comme on log tout cela cela permet de recréer aussi très rapidement un conteneur Docker identique. Et puis cela permet aussi de tester le dump facilement.
<pre>docker ps --format "{{ .ID }}|\
{{ .Names }}|\
{{.Image}}" |\
while IFS="|" read var1 var2 var3;\
do</pre>
Ensuite on nettoie le nom du conteneur car Docker ajoute un sha pour le rendre unique et c'est pas très causant. et on peut se créer un répertoire local de backup (mais cela peut aussi être un point de montage.
<pre>var2=$(echo $var2 | sed -e 's/\(.*\)\..*$/\1/g')
BACKUP_DIR="/dir_export/"
DUMP_DIR=${BACKUP_DIR}${var2}/
DUMP=BACKUP_DIR="/export/sgbd-dumps/"
DATEDUMP=$(date +%Y-%m-%d)
DUMP=${DATEDUMP}.${var2}</pre>
et on commence par logger quelques infos :
<pre>echo "---- ${DATEDUMP} /  Dump du container ${var2}    -----" &gt; ${DUMP_DIR}${DUMP}.log
 echo ${DATEDUMP}"-name &gt;&gt;"$var2 &gt;&gt; ${DUMP_DIR}${DUMP}.log
 echo ${DATEDUMP}"-image &gt;&gt;"$var3 &gt;&gt; ${DUMP_DIR}${DUMP}.log
 echo ${DATEDUMP}"-dump &gt;&gt;"${DUMP_DIR} &gt;&gt; ${DUMP_DIR}${DUMP}.log</pre>
Et c'est parti on lance la sauvegarde mysqldump en lancant un docker exec sur l'ID du conteneur recueilli.
<pre>echo ""
echo "---- ${DATEDUMP} /  Dump du container ${var2}    -----"
docker exec ${var1} mysqldump -u  --password= --all-databases  &gt; ${DUMP_DIR}${DUMP}.sql</pre>
Alors on aurait pu ajouter un gzip directement dessus et ne sauvegarder qu'une seule base. Personnellement on ne sait on part sur un truc complet. Et pui savant de gzippé on vérifie le boulot ;)

Alors comment on fait pour tester notre dump ???

C'est simple. On créé un conteneur identique et ensuite on importe notre dump dedans. N'ayez pas peur c'est hyper facile.
<pre>docker run --name testsgbd -e MYSQL_ROOT_PASSWORD= -tid $var3 | grep -vi warning</pre>
<pre>sleep 40</pre>
On voit que $var3 nous permet de lancer la même image que dans le conteneur sauvegardé. Et on met tout cela en pause durant 40 secondes. C'est beaucoup mais on s'assure que le conteneur est bien lancé (ou au moins à eu le temps).

Et la on importe mais pas n'importe comment. On fait un test (un if) sur la commande d'import mysql lancée à travers docker. Si aucun message d'erreur on à ainsi un dump conforme sinon KO. Et si OK on gzip
<pre>if [ -n "$(docker exec -i testsgbd mysql -uroot -ppassRoot &lt;${DUMP_DIR}${DUMP}.sql 2&gt;&amp;1 | grep -vi Warning )" ];then
                       echo " &gt;&gt;&gt; ${DATEDUMP} : [Error]" &gt;&gt; ${DUMP_DIR}${DUMP}.log
                      echo "[Pb import]"
                        rm -f ${DUMP_DIR}${DUMP}
                else
                        echo " &gt;&gt;&gt; ${DATEDUMP} : [OK]" &gt;&gt; ${DUMP_DIR}${DUMP}.log
                        echo "[Import OK]"
                        echo "Gzip..."
                        gzip ${DUMP_DIR}${DUMP}*.sql
                        echo "fin"
                fi</pre>
et surtout on oublie pas de nettoyer en supprimant l'image créée.
<pre>docker rm -f testsgbd</pre>
Alors c'est pas simple tout cela ?

Je trouve que si et que ça mérite d'être partagé, c'est pour cela que cela valait bien un article.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2018-06-14 16:26:05</wp:post_date>
		<wp:post_date_gmt>2018-06-14 15:26:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sauvegarde-mysql-de-conteneurs-docker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[18963852714]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1528989968]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1007283051045498881";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Docker : Sauvegarde d’un conteneur postgres</title>
		<link>http://xavki.blog/?p=29</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2018-06-14 17:53:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>Mysql : lister les volumes des bases d’un conteneur</title>
		<link>http://xavki.blog/?p=30</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2018-06-14 17:54:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>Docker : se promener dans le swarm en ssh</title>
		<link>http://xavki.blog/?p=31</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2018-06-14 17:55:04</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>[TIPS] : Passer une variable dans ssh</title>
		<link>http://xavki.blog/2018/06/18/tips-passer-une-variable-dans-ssh/</link>
		<pubDate>Mon, 18 Jun 2018 13:17:38 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[Facile certains diront mais bon il existe différentes méthode de faire. Perso je suis adepte de la méthode par export de la variable d'environnement. Mais encore il y a quelques subtilités.

Alors comme c'est mon sujet du moment, voici comment passer une commande docker en ssh :
<pre>export LC_VALEUR=$VALEUR;
export LC_DATE=$DATE;

ssh -t ${IP_WORKER} -o SendEnv=LC_VALEUR -o SendEnv=LC_DATE 
-C "echo $LC_VALEUR;
CONTENEUR_ID=\$(docker ps --filter 'name=$LC_VALEUR' 
--format '{{ .ID }}');
docker exec -i \$CONTENEUR_ID mysql -u&lt;user&gt; -p&lt;password&gt; 
&lt; /dumps/$LC_VALEUR/$LC_DATE.$LC_VALEUR.sql;" 
| tee -a ${LOGFILE}
</pre>
Alors dans cette petite ligne de commande on trouve :
<ul>
	<li>le passage des variables d'environnements VALEUR et DATE grâce à "-o SendEnv=xxx"</li>
	<li>l'utilisation de variables locales qui nécessitent du coup d'échapper le caractère $</li>
	<li>on combine un docker ps avec un docker exec via ssh et ça marche bien</li>
	<li>et bien sûr le -C pour exécuter une commande en ssh</li>
</ul>
Mais comment faire pour logger tout cela? Pas si simple de récupérer la sortie d'erreur ou la stdout car il faut passer par la commande tee -a (option append pour ajouter la ligne dans le fichier.

N'oublions pas l'option -t pour préciser tty sinon on génère unne erreur ssh.

Vous le voyez ce petit bout de ligne verrait bien sa place dans un script de restauration dans un cluster swarm.... on reviendra sur cela un autre jour.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2018-06-18 14:17:38</wp:post_date>
		<wp:post_date_gmt>2018-06-18 13:17:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-passer-une-variable-dans-ssh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1529327863]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19089553184]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1008700287836672002";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[TIPS] - Tabuler ou indenter plusieurs lignes sur VIM</title>
		<link>http://xavki.blog/2018/06/15/tips-tabuler-ou-indenter-plusieurs-ligne-sur-vim/</link>
		<pubDate>Fri, 15 Jun 2018 11:38:36 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[Certains savent le faire certainement mais perso je ne savais pas quel raccourcis utiliser. C'est vrai que tabuler à la main c'est bin mais lorsqu'il faut le faire pour une centaine de ligne... c'est chiant faut bien le dire.

Du coup voici comment faire :

On tape le chiffre du nombre de ligne à indenter suivi de &gt;&gt; soit deux fois la touche '&gt;'.

Pour le faire avec les numéros de ligne c'est aussi simple :
<pre>:34,36&gt;&gt;</pre>
Et on tabule de la ligne 34 à la ligne 36.

C'est aussi valable pour les suppression avec la touche d ou avec y pour copier.

Vim c'est vraiment bien.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2018-06-15 12:38:36</wp:post_date>
		<wp:post_date_gmt>2018-06-15 11:38:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-tabuler-ou-indenter-plusieurs-ligne-sur-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[18992320629]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1529062724]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1007588211026284544";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Docker] : Swarm - lister les services et les nodes en 1 ligne</title>
		<link>http://xavki.blog/2018/06/15/swarm-lister-les-services-et-les-nodes-en-1-ligne/</link>
		<pubDate>Fri, 15 Jun 2018 15:59:01 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Là c'est pas bien compliqué. Mais bon comme j'en ai marre de commencer par chercher les ID des service pour pouvoir faire un docker ps dessus, je me suis créé un alias qui fait le taff.

Vous êtes pas obligé d'ajouter ça dans votre bashrc mais je vous le recommande pour plus de faciliter.

En gros on combine un docker service ls et un docker service ps :
<pre>alias dserv='for id in $(docker service ls --format "{{.ID}}");do docker service ps $id;done'
</pre>
Je pense que vous devez avoir aussi vos petites astuces de ce genre. N'hésitez pas à les laisser en commentaire.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2018-06-15 16:59:01</wp:post_date>
		<wp:post_date_gmt>2018-06-15 15:59:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>swarm-lister-les-services-et-les-nodes-en-1-ligne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[18999499323]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1007653745210126337";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1529078349]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[tuto] - Formation ansible avec Grafikart</title>
		<link>http://xavki.blog/?p=46</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2018-06-18 14:22:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>Crud : mise en place d&#039;un webservice en php</title>
		<link>http://xavki.blog/?p=47</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2018-06-18 14:24:32</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>[Oracle] : suivre l&#039;utilisation du tablepace temporaire</title>
		<link>http://xavki.blog/2018/06/19/oracle-utilisation-tablepace-temporaire/</link>
		<pubDate>Tue, 19 Jun 2018 10:36:35 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[Hé ! un petit coup de DBA pour ce nouvel article, penchons nous sur oracle. Si vous voulez découvrir mes autres articles oracle, <a href="https://xavki.blog/databases/">rendez-vous sur cette page</a>. Le tablespace temporaire permet de faire des opération volumineuse principalement les tris. Le problème c'est de <strong>dimensionner ce TEMP</strong> de manière suffisament importante sans trop que celui-ci ne prenne de place. Si celui-ci est trop important cela peut aussi signifier une mauvaise utilisation du moteur (mauvais modèle de base de données par exemple ou mauvaises requêtes).

Un élément important pour savoir si celui-ci est assez grand c'est de connaître son utilisation. Le problème c'est que si on réalise une qequête standard pour suivre les tablespaces on tombe sur le <strong>HWM "High Water Mark"</strong>. Et comme souvent son utilisation a déjà atteint 100%, on ne sait pas son utilisation réelle.

Donc voici la requête qui vous permet de connaître son niveau à un instant T :
<pre>echo '
set lines 120;
set pages 999;
set FEEDBACK OFF;
set HEADING OFF;
SELECT   A.tablespace_name tablespace, D.mb_total,
SUM (A.used_blocks * D.block_size) / 1024 / 1024 mb_used,
D.mb_total - SUM (A.used_blocks * D.block_size) / 1024 / 1024 mb_free
FROM     v$sort_segment A,
(
SELECT   B.name, C.block_size, SUM (C.bytes) / 1024 / 1024 mb_total
FROM     v$tablespace B, v$tempfile C
WHERE    B.ts#= C.ts#
GROUP BY B.name, C.block_size
) D
WHERE    A.tablespace_name = D.name
GROUP by A.tablespace_name, D.mb_total;
'|sqlplus -S '/ as sysdba'
</pre>
Vous pouvez ensuite placer ce code et le logger dans un cron ou encore mettre un watch et manger du pop-corn lol !

Pour être plus complet sur le suivi de cette thématique, voici ci-dessous un ensemble de requêtes très utiles :
<ul>
	<li>utilisation du tablespace TEMP,</li>
	<li>users et requête dans le TEMP,</li>
	<li>requête en cours sur le moteur</li>
</ul>
<pre>col sid_serial format a10
col username format a17
col osuser format a15
col spid format 99999
col module format a15
col program format a30
col mb_used format 999999.999
col mb_total format 999999.999
col tablespace format a15
col statements format 999
col hash_value format 99999999999
col sql_text format a50
col service_name format a15

prompt 
prompt #####################################################################
prompt #######################LOCAL TEMP USAGE#############################
prompt #####################################################################
prompt 

 SELECT   A.tablespace_name tablespace, D.mb_total,
SUM (A.used_blocks * D.block_size) / 1024 / 1024 mb_used,
D.mb_total - SUM (A.used_blocks * D.block_size) / 1024 / 1024 mb_free
FROM     v$sort_segment A,
(
SELECT   B.name, C.block_size, SUM (C.bytes) / 1024 / 1024 mb_total
FROM     v$tablespace B, v$tempfile C
WHERE    B.ts#= C.ts#
GROUP BY B.name, C.block_size
) D
WHERE    A.tablespace_name = D.name
GROUP by A.tablespace_name, D.mb_total;

prompt 
prompt #####################################################################
prompt #######################LOCAL TEMP USERS#############################
prompt #####################################################################
prompt 

SELECT   S.sid || ',' || S.serial# sid_serial, S.username, S.osuser, P.spid, 
--S.module,
--P.program,
s.service_name,
SUM (T.blocks) * TBS.block_size / 1024 / 1024 mb_used, T.tablespace,
COUNT(*) statements
FROM     v$tempseg_usage T, v$session S, dba_tablespaces TBS, v$process P
WHERE    T.session_addr = S.saddr
AND      S.paddr = P.addr
AND      T.tablespace = TBS.tablespace_name
GROUP BY S.sid, S.serial#, S.username, S.osuser, P.spid, 
S.module,
P.program,
s.service_name,TBS.block_size, T.tablespace
ORDER BY mb_used;

--prompt 
--prompt #####################################################################
--prompt #######################LOCAL ACTIVE SQLS ############################
--prompt #####################################################################
--prompt 
--
SELECT sysdate "TIME_STAMP", vsu.username, vs.sid, vp.spid, vs.sql_id, vst.sql_text,vsu.segtype, vsu.tablespace,vs.service_name,
        sum_blocks*dt.block_size/1024/1024 usage_mb
    FROM
    (
            SELECT username, sqladdr, sqlhash, sql_id, tablespace, segtype,session_addr,
                 sum(blocks) sum_blocks
            FROM v$tempseg_usage
        group by  username, sqladdr, sqlhash, sql_id, tablespace, segtype,session_addr
    ) "VSU",
    v$sqltext vst,
    v$session vs,
    v$process vp,
    dba_tablespaces dt
 WHERE vs.sql_id = vst.sql_id
    AND vsu.session_addr = vs.saddr
    AND vs.paddr = vp.addr
    AND vst.piece = 0
    AND vs.status='ACTIVE'
    AND dt.tablespace_name = vsu.tablespace
 order by usage_mb;
--
--prompt 
--prompt #####################################################################
--prompt #######################LOCAL TEMP SQLS##############################
--prompt #####################################################################
--prompt 
SELECT  S.sid || ',' || S.serial# sid_serial, S.username, Q.sql_id, Q.sql_text,
T.blocks * TBS.block_size / 1024 / 1024 mb_used, T.tablespace
FROM    v$tempseg_usage T, v$session S, v$sqlarea Q, dba_tablespaces TBS
WHERE   T.session_addr = S.saddr
AND     T.sqladdr = Q.address
AND     T.tablespace = TBS.tablespace_name
ORDER BY mb_used;
--
--
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2018-06-19 11:36:35</wp:post_date>
		<wp:post_date_gmt>2018-06-19 10:36:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-utilisation-tablepace-temporaire</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19122488856]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1529404605]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1009022166522847232";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[oracle-suivre-lutilisation-du-tablepace-temporaire]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Ansible] : Find lister des fichiers et réaliser une action dessus</title>
		<link>http://xavki.blog/2018/06/26/ansible-find-fichiers-action-liens-symboliques/</link>
		<pubDate>Tue, 26 Jun 2018 09:25:13 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">Ansible est nouveau pour moi donc vous devriez trouver dans les prochains jours pas mal de tips pour réaliser de petites actions.</p>
<p style="text-align:justify;">Aujourd'hui je cherche à lister les fichier d'un répertoire et à réaliser dessus une action. Dans mon cas je vais créer des liens symboliques pour faire en sorte que les binaires oracle soient directement accessible via /usr/bin (dans le path des users). On aurait aussi pu supprimer des fichiers ou autres.</p>

<pre>tasks:
  - name: Liste les binaires oracle
    find:
      paths: /usr/lib/oracle/12.2/client64/bin/
    register: result
  - name: Création des liens symboliques
    file:
      src: "{{ item.path }}" 
      dest: /usr/bin/{{ item.path | basename }}
      state: link
    with_items: "{{ result.files }}" 
</pre>
<p style="text-align:justify;">On met donc la liste des fichiers dans la variable "result". Il s'agit d'un tableau. Si vous voulez aller plus loin vous pouvez vous référer à la doc sur <a href="https://docs.ansible.com/ansible/devel/modules/find_module.html">le module find</a> pour utiliser d'autres éléments du tableau.</p>
<p style="text-align:justify;">Ensuite, on parcourt chaque file avec le <strong>with_items</strong>. On utilise alors <strong>item.path</strong> pour récupérer le chemin en dur. Pour la destination on lui applique la commande basename pour récupérer uniquement le nom de fichier.</p>
Au passage j'ai découvert <a href="http://www.mydailytutorials.com/">un blog ansible sympa</a>... mais peut être un peu court.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2018-06-26 10:25:13</wp:post_date>
		<wp:post_date_gmt>2018-06-26 09:25:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-find-fichiers-action-liens-symboliques</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19367107414]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530005115]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1011540885924925440";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[TIPS] : Ubuntu - boot plein</title>
		<link>http://xavki.blog/2018/06/26/tips-ubuntu-boot-plein/</link>
		<pubDate>Tue, 26 Jun 2018 16:12:01 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[Si /boot est plein sur votre ubuntu c'est que vous devez avoir quelques images de kernel inutiles. Pour les supprimer :

<pre>
sudo apt-get autoremove --purge
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2018-06-26 17:12:01</wp:post_date>
		<wp:post_date_gmt>2018-06-26 16:12:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-ubuntu-boot-plein</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530029524]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19378782809]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1011643264921931777";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[TIPS] : Linux - générer un hash de mot de passe</title>
		<link>http://xavki.blog/2018/06/26/tips-linux-generer-un-hash-de-mot-de-passe/</link>
		<pubDate>Tue, 26 Jun 2018 16:13:52 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[Très brièvement, pour générer un hash en 512 :

<pre>
mkpasswd -m sha-512
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2018-06-26 17:13:52</wp:post_date>
		<wp:post_date_gmt>2018-06-26 16:13:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-linux-generer-un-hash-de-mot-de-passe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530029635]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19378841388]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1011643733081776128";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : Lister nombre de connexion/processus pour une instance</title>
		<link>http://xavki.blog/2018/06/26/oracle-processus-instance/</link>
		<pubDate>Tue, 26 Jun 2018 16:19:51 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[Comment lister le nombre de connexion via le nombre de processus ? c'est assez simple si l'on est hors pooler de connexion. Pour le suivre dans le temps (par exemple toutes les 5 minutes).
<pre>#!/bin/bash

while true
do
t=$(date)
ps=$(ps auxwww | grep nominstance |grep -v ora_ | wc -l)
echo $ps
echo $t' --&gt; '$ps &gt;&gt; verif.log
sleep 5m
done
</pre>
Vous remarquerez que par la boucle while = true on se passe de faire un cron en donnant par exemple un sleep de 5 minutes (on attend 5 minutes pour relancer le script).

Si vous voulez le lancer indéfiniment, il suffit de le mettre dans un fichier qui sera lancé via un nohup.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2018-06-26 17:19:51</wp:post_date>
		<wp:post_date_gmt>2018-06-26 16:19:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-processus-instance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530029993]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19379037546]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1011645231685689345";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[TIPS] : Remplacer un pattern dans plusieurs fichiers</title>
		<link>http://xavki.blog/2018/06/26/remplacer-pattern-dans-plusieurs-fichiers/</link>
		<pubDate>Tue, 26 Jun 2018 16:49:24 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[Cela arrive souvent sur Linux on vous file un tar.gz avec des chemins à modifier mais qui ne sont pas passés par une variable. Résultat il faut se palucher plusieurs fichier à modifier à la main.

Ben non bien sûr ! sur linux on peut faire cela plus facilement !

Un bon grep suivi d'un xargs et le tour est joué :
<pre>grep -Rl '/home/titi' * | xargs sed -i -e 's#/home/titi#/home/toto/appli1#g'
</pre>
Dans cet exemple, on liste tous les fichiers qui contiennent "/home/titi" et on leur applique un sed où on remplace "/home/titi" par "/home/toto/appli1". et voilà le tour est joué. L'option s de sed permet de remplacer et l'option g permet de ne pas limiter le remplacement à une substitution mais bien à l'ensemble du fichier.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2018-06-26 17:49:24</wp:post_date>
		<wp:post_date_gmt>2018-06-26 16:49:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>remplacer-pattern-dans-plusieurs-fichiers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530031766]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19379898374]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1011652670803898369";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #5 : vim, apropos, glances, gs, nl, sed /pattern/, timeout &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/27/top-commandes-linux-5-vim/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.249</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 08:50:57</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 07:50:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] remplacer un motif/pattern dans des fichiers situés sur votre machine en une commande [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535356258]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535356259.015569;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Python] : lancer un serveur web en une ligne</title>
		<link>http://xavki.blog/2018/06/28/python-serveur-web/</link>
		<pubDate>Thu, 28 Jun 2018 08:23:01 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=68</guid>
		<description></description>
		<content:encoded><![CDATA[Python comme quelques autres languages permettent de faire simplement des tâches qui peuvent paraître parfois "un peu lourdes". Attention quand je dis des tâches ce ne sont pas non plus des choses insurmontables mais plutôt des choses où on pense qu'il faut une trentaine de lignes pour faire ça.

[caption id="attachment_media-233" align="alignright" width="297"]<img class="alignnone  wp-image-80" src="https://xavki.files.wordpress.com/2018/06/pexels-photo-1181671.jpeg" alt="python book" width="297" height="198" /> Photo by Christina Morillo on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

Là aujourd'hui je découvre un truc tout simple, le lancement d'un serveur web. D'habitude il faut faire appelle à des sockets... Et bien là c'est simplement unte toute petite ligne.
<pre>#en python 3
python3 -m http.server

#en python 2
python -m SimpleHTTPServer 8000
</pre>
Et àla vous pouvez lancer votre navigateur sur localhost:8000 et vous découvrez le répertoire là où vous avez lancé la commande.

Ce n'est pas exceptionnel mais c'est tellement simple.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2018-06-28 09:23:01</wp:post_date>
		<wp:post_date_gmt>2018-06-28 08:23:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-serveur-web</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530174186]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19440773351]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1012250024607182849";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>#Devdocs.io : retrouver les docs des principaux outils et languages</title>
		<link>http://xavki.blog/2018/06/28/devdocs-io-docs-outils-languages/</link>
		<pubDate>Thu, 28 Jun 2018 10:10:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[Là c'est du lourd. C'est vrai que tout le monde rêve d'avoir un outil qui regroupe tous les languages et les outils du développeurs (web ou autres). Bon on en est pas loin du tout avec <a href="https://devdocs.io/">https://devdocs.io/</a>.

Sur ce site vous retrouverez de très nombreux languages :
<ul>
	<li>perl</li>
	<li>ruby</li>
	<li>python</li>
	<li>c</li>
	<li>c#</li>
	<li>etc...</li>
</ul>
Des docs sur des outils courants :
<ul>
	<li>postgres</li>
	<li>ansible</li>
	<li>http</li>
	<li>apache</li>
	<li>cake</li>
	<li>node.js</li>
	<li>...</li>
</ul>
En plus grâce à son usage du cache de navigateur, il permet de faire du offline.

[caption id="attachment_media-191" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-77" src="https://xavki.files.wordpress.com/2018/06/pexels-photo-357514.jpeg" alt="batch books document education" width="1880" height="1253" /> Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2018-06-28 11:10:05</wp:post_date>
		<wp:post_date_gmt>2018-06-28 10:10:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devdocs-io-docs-outils-languages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sites-outils"><![CDATA[Sites &amp; Outils]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/NgUkuaezYcY]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19443477591]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530180607]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1012276955390140417";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175335050915]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #4 : bash, factoriel, cut, md5sum, derniers arguments, dcfldd &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.145</wp:comment_author_IP>
			<wp:comment_date>2018-08-25 20:43:33</wp:comment_date>
			<wp:comment_date_gmt>2018-08-25 19:43:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] site devdocs.io pour retrouver toutes les documentations officielles des différents languages en un seul endroit [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535226214]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535226215.111773;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Ansible] : Récupérer un rôle de Galaxy</title>
		<link>http://xavki.blog/2018/06/29/ansible-recuperer-role-galaxy/</link>
		<pubDate>Fri, 29 Jun 2018 14:35:55 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[Petit à petit je me met à Ansible et ça commence à devenir sympa. Et pour bien avancer et pas réinventer les choses, je vous recommande de vous rendre <a href="https://galaxy.ansible.com/">sur le site Galaxy</a>. Il héberge les rôles partagés par la communauté.

[caption id="attachment_media-78" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-73" src="https://xavki.files.wordpress.com/2018/06/pexels-photo.jpg" alt="person sky silhouette night" width="1880" height="973" /> Photo by Snapwire on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

Bien sûr il y a à boire et à manger. Il faut faire le tri pour trouver une chaussure à votre pied. Trouver le bon OS, voir le nombre de téléchargement etc... Mais ça vaut le coup car il y a vraiment beaucoup de rôles disponibles.

Mais comment récupérer un rôle de galaxy ?

Dans un premier temps on aurait tendance à faire avec la commande :
<pre>ansible-galaxy install -p roles username.role_name
</pre>
L'option "p" permet d'indiquer le chemin où déposer le rôle.

Mais que se passe-til si vous devez retélécharger le rôle quelques moi splutard et que vous n'avez pas conservé votre ligne de commande ? plus rien

Donc le mieux, c'est de stocker ça dans un fichier pour relancer en tant que de besoin. Ne serait-ce que pour faire un upgrade.

Et là la commande idéale c'est :
<pre>ansible-galaxy install -v -p roles -r requirements.yml
</pre>
L'option "r" pointe vers le fichier qui contient l'auteur et le nom du rôle sous cette forme:
<pre>- src: geerlingguy.postgresql
  name: postgres_server
</pre>
Et voilà le tour est joué.

PS : n'oubliez pas d'exporter vos variables de proxy si vous êtes derrière un proxy.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2018-06-29 15:35:55</wp:post_date>
		<wp:post_date_gmt>2018-06-29 14:35:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-recuperer-role-galaxy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1012706247689187332";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530282957]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19486949432]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/7qoDtF6gpty]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175373328945]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person sky silhouette night</title>
		<link>http://xavki.blog/pexels-photo/</link>
		<pubDate>Fri, 29 Jun 2018 14:23:40 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/06/pexels-photo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Snapwire on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2018-06-29 15:23:40</wp:post_date>
		<wp:post_date_gmt>2018-06-29 14:23:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/06/pexels-photo.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:973;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:257902;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>batch books document education</title>
		<link>http://xavki.blog/pexels-photo-357514/</link>
		<pubDate>Fri, 29 Jun 2018 14:40:57 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/06/pexels-photo-357514.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2018-06-29 15:40:57</wp:post_date>
		<wp:post_date_gmt>2018-06-29 14:40:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-357514</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/06/pexels-photo-357514.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo-357514.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo-357514.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:196501;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>python book</title>
		<link>http://xavki.blog/pexels-photo-1181671/</link>
		<pubDate>Fri, 29 Jun 2018 14:41:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/06/pexels-photo-1181671.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Christina Morillo on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2018-06-29 15:41:41</wp:post_date>
		<wp:post_date_gmt>2018-06-29 14:41:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-1181671</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/06/pexels-photo-1181671.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo-1181671.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1255;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo-1181671.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:146260;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>business calligraphy close up composition</title>
		<link>http://xavki.blog/pexels-photo-261719/</link>
		<pubDate>Fri, 29 Jun 2018 14:43:22 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/06/pexels-photo-261719.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2018-06-29 15:43:22</wp:post_date>
		<wp:post_date_gmt>2018-06-29 14:43:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-261719</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/06/pexels-photo-261719.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo-261719.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1250;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/06/pexels-photo-261719.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:86268;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : combiner tableau boucle for et condition en une ligne</title>
		<link>http://xavki.blog/2018/07/01/python-tableau-boucle-for-condition-meme-ligne/</link>
		<pubDate>Sun, 01 Jul 2018 16:32:52 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[Python comme beaucoup d'autres langages possède des possibilités de combiner plusieurs actions au sein d'une même ligne.

Aujourd'hui, je vous propose de découvrir comment remplir une liste avec une boucle FOR au sein de laquelle on réalise des conditions et des opérations. Si vous vous intéressez à des jeux comme coding game vous en aurez l'utilité et les meilleurs ne peuvent pas s'en passer voir vont encore plus loin.
<pre>liste = [expression 
        for value in collection 
        if condition]
</pre>
C'est l'équivalent de
<pre>liste = []
for value in collection:
    if condition:
        vals.append(expression)
</pre>
Par exemple pour calculer ceci :
<pre>&gt;&gt;&gt; liste = [x * x for x in range(10) if not x % 2]
&gt;&gt;&gt; liste
[0, 4, 16, 36, 64]
</pre>
ça réduit le nombre de ligne non ?

[caption id="attachment_media-40" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-87" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-296878.jpeg?w=1880" alt="box business celebrate celebration" width="1880" height="1345" /> Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date>2018-07-01 17:32:52</wp:post_date>
		<wp:post_date_gmt>2018-07-01 16:32:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-tableau-boucle-for-condition-meme-ligne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1013460450774638594";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19554484991]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530462775]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/GansAndG1sZ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175441134985]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>box business celebrate celebration</title>
		<link>http://xavki.blog/pexels-photo-296878/</link>
		<pubDate>Sun, 01 Jul 2018 16:32:26 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-296878.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2018-07-01 17:32:26</wp:post_date>
		<wp:post_date_gmt>2018-07-01 16:32:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-296878</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-296878.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-296878.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1817;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-296878.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:298029;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : linux grapher un netstat (nombre de connexions)</title>
		<link>http://xavki.blog/2018/07/02/linux-grapher-netstat-connexions/</link>
		<pubDate>Mon, 02 Jul 2018 11:48:45 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[Hey, j'espère que vous allez bien ? Moi ça va pas mal. Aujourd'hui je vous propose une petite astuce linux ou plus précisémment bash à savoir grapher les résultats d'un comptage. En l'occurence, pour l'exemple, nous allons grapher le nombre de connexions de ma machine.

Voici la ligne de commande et je vous l'explique après :
<pre>netstat -an | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}'
| sort | uniq -c | awk '{ printf("%s\t%s\t",$2,$1) ;
for (i = 0; i &lt; $1; i++) {printf("*")}; print "" }'
</pre>
1. on fait un netstat -an : n pour voir les ip en numéric
2. on grep sur les connexions établies
3. on garde la colonne des ip et ports uniquement (colonne 5)
4. on vire le port
5. on ordonne tout ça
6. on fait le comptage pour chaque ip
7. on affiche l'ip puis le nombre d'occurence et ensuite on créé une boucle pour afficher autant de "*" que de connexions

[caption id="attachment_media-143" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-90" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-415779.jpeg" alt="blur chart check up curve" width="1880" height="1253" /> Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

et le tour est joué.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2018-07-02 12:48:45</wp:post_date>
		<wp:post_date_gmt>2018-07-02 11:48:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-grapher-netstat-connexions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1013751342303674368";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530532127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19581127319]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/aRe51g3NyVi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175469490510]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>blur chart check up curve</title>
		<link>http://xavki.blog/pexels-photo-415779/</link>
		<pubDate>Mon, 02 Jul 2018 11:47:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-415779.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2018-07-02 12:47:56</wp:post_date>
		<wp:post_date_gmt>2018-07-02 11:47:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-415779</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-415779.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-415779.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-415779.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:184626;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : ajouter des ip locales (127.0.0.2...)</title>
		<link>http://xavki.blog/2018/07/02/tips-ajouter-des-ip-locales-127-0-0-2/</link>
		<pubDate>Mon, 02 Jul 2018 13:06:51 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[Lorsque vous commencez à développer ou à tester des applications, vous utilisez souvent votre ip locale 127.0.0.1. Le problème c'est que vous n'en avez qu'une et donc vous ne pouvez avoir qu'une application à la fois sur cette ip.

Il est donc très intéressant d'ajouter d'autres ip locales pour faire tourner plus d'applis sans se prendre trop la tête sans galérer.

[caption id="attachment_95" align="aligncenter" width="300"]<img class="alignnone size-medium wp-image-95" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-442150.jpeg?w=300" alt="blur computer connection electronics" width="300" height="200" /> Photo by Field Engineer on Pexels.com[/caption]

Eh bien c'est simple :
<pre>sudo ifconfig lo0 alias 127.0.0.2 up
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2018-07-02 14:06:51</wp:post_date>
		<wp:post_date_gmt>2018-07-02 13:06:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-ajouter-des-ip-locales-127-0-0-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1013770995939803137";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[95]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19583306875]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530536813]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/Fs7QK7bvaV8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175471058610]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #4 : bash, factoriel, cut, md5sum, derniers arguments, dcfldd &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.145</wp:comment_author_IP>
			<wp:comment_date>2018-08-25 20:43:36</wp:comment_date>
			<wp:comment_date_gmt>2018-08-25 19:43:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] ajouter des ip locale 127.0.0.2 pour développer et tester plus facilement localement [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535226217]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535226218.065752;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>blur computer connection electronics</title>
		<link>http://xavki.blog/pexels-photo-442150/</link>
		<pubDate>Mon, 02 Jul 2018 13:06:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-442150.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Field Engineer on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2018-07-02 14:06:05</wp:post_date>
		<wp:post_date_gmt>2018-07-02 13:06:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-442150</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-442150.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-442150.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-442150.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:195373;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : supprimer user/schema et tablespace</title>
		<link>http://xavki.blog/2018/07/05/oracle-supprimer-user-schema-et-tablespace/</link>
		<pubDate>Thu, 05 Jul 2018 09:18:42 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[Comment supprimer un schéma oracle ?
<pre>SQL&gt; drop user TOTO cascade;</pre>
Et pour réaliser la suppression d'une liste de schémas (users), il suffit de faire une belle boucle for sur le fichier liste.schema contenant la liste suivi d'un echo puis d'un pipe avec sqlplus et le compte sysdba :
<pre>for i in $(cat liste.schema );do echo "drop user ${i} cascade;" | sqlplus '/ as sysdba'; done</pre>
Pour supprimer des tablespaces et leurs datafiles :
<pre>drop tablespace TABLESPACE_NOM including contents and datafiles ;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2018-07-05 10:18:42</wp:post_date>
		<wp:post_date_gmt>2018-07-05 09:18:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-supprimer-user-schema-et-tablespace</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1014800745441452033";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19687000002]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530782325]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/GKhphhjmdof]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175569234140]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>interior of office building</title>
		<link>http://xavki.blog/pexels-photo-325229/</link>
		<pubDate>Mon, 02 Jul 2018 13:43:47 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-325229.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Manuel Geissinger on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2018-07-02 14:43:47</wp:post_date>
		<wp:post_date_gmt>2018-07-02 13:43:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-325229</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-325229.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-325229.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:658;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-325229.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:71105;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : comprendre facilement Asyncio ou la différence entre IO-Bound ou CPU-Bound</title>
		<link>http://xavki.blog/?p=100</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

http://mathieu.agopian.info/blog/python-et-asyncio-la-recette-du-bonheur.html

https://zestedesavoir.com/articles/1568/decouvrons-la-programmation-asynchrone-en-python/

http://dotmobo.github.io/introduction-asyncio.html

&nbsp;

https://djangostars.com/blog/asynchronous-programming-in-python-asyncio/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2018-07-02 17:02:31</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_737b94594794a42406971d67b32f831c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_8c12287bc0e7ee219e7088961eaa5d03</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_fee3b26116d9bc2137d368d7f68ba07c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c3076a553edf067d91e5fe6e3291c780</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_c3076a553edf067d91e5fe6e3291c780</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>python book</title>
		<link>http://xavki.blog/pexels-photo-1181671-2/</link>
		<pubDate>Mon, 02 Jul 2018 16:25:12 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-1181671.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Christina Morillo on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2018-07-02 17:25:12</wp:post_date>
		<wp:post_date_gmt>2018-07-02 16:25:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-1181671-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-1181671.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1181671.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1255;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1181671.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:146260;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : Reconstruire les index d&#039;un user/schéma</title>
		<link>http://xavki.blog/2018/07/03/oracle-reconstruire-index-schema/</link>
		<pubDate>Tue, 03 Jul 2018 15:56:24 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:left;">Cela pourrait être classé dans la rubrique tips tellement c'est simple et court. Je vous propose de réaliser une reconstruction des index d'un schéma d'une instance oracle. Rien de bien compliqué mais plutôt que de rechercher toujours comment faire, voici la soluce une fois de plus présente sur le web lol.</p>
<p style="text-align:left;">Dans un premier temps, comment lister les index d'un schéma ?</p>

<pre>SELECT index_name FROM all_indexes WHERE OWNER='TOTO_OWNER';
</pre>
<p style="text-align:left;">Le mieux est bien sûr de créer un script sql qui listera tous les index et rédigera le SQL en même temps. Donc le voici :</p>

<pre>spool rebuild_all.sql;
SELECT 'ALTER INDEX ' || index_name || ' REBUILD;' FROM all_indexes WHERE OWNER='TOTO_OWNER';
spool off;
@rebuild_all.sql
</pre>
<p style="text-align:left;">Et voilà donc, on vient de générer un ficher rebuild_all.sql dans lequel on créera une ligne par index et on ordonne un rebuild au moteur. Et on peut lancer tout cela avec un petit sqlplus '/as sysdba'.</p>


[caption id="attachment_media-265" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-110" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-943101.jpeg" alt="black and red laptop computer beside white puma curve brim cap" width="1880" height="1253" /> Photo by Danny Meneses on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]
<p style="text-align:left;">Promis la prochaine fois on va taper plus haut. Je pense que dans un prochain article nous verrons comment suivre le switch des redo log. Notamment pour analyser combien de switch sont réalisées chaque heure de la journée. Un bon moyen de suivre les périodes où les écritures sont les plus importantes sur votre instance oracle.</p>
<p style="text-align:left;">Tiens et au passage faut que je pense à vous parler de comment intégrer ce genre de script sql dans un outil comme rundeck (en terme de rédaction... échappement de quote...).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2018-07-03 16:56:24</wp:post_date>
		<wp:post_date_gmt>2018-07-03 15:56:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-reconstruire-index-schema</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[110]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1014176052690681859";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530633386]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19625243401]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/GiekKyBf1eR]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175509507010]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>black and red laptop computer beside white puma curve brim cap</title>
		<link>http://xavki.blog/pexels-photo-943101/</link>
		<pubDate>Tue, 03 Jul 2018 15:46:22 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-943101.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Danny Meneses on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2018-07-03 16:46:22</wp:post_date>
		<wp:post_date_gmt>2018-07-03 15:46:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-943101</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-943101.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-943101.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-943101.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:126882;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>black and white hands mask bussinesman</title>
		<link>http://xavki.blog/pexels-photo-64699/</link>
		<pubDate>Thu, 05 Jul 2018 14:03:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-64699.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Vijay Putra on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2018-07-05 15:03:02</wp:post_date>
		<wp:post_date_gmt>2018-07-05 14:03:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-64699</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-64699.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-64699.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:96:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-64699.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:48170;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>blur business close up code</title>
		<link>http://xavki.blog/pexels-photo-270557/</link>
		<pubDate>Thu, 05 Jul 2018 15:58:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-270557.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date>2018-07-05 16:58:05</wp:post_date>
		<wp:post_date_gmt>2018-07-05 15:58:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-270557</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-270557.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-270557.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1252;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-270557.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:164485;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : créer sa barre de menu perso pour son OS</title>
		<link>http://xavki.blog/2018/07/08/python-creer-sa-barre-de-menu-perso/</link>
		<pubDate>Sun, 08 Jul 2018 11:25:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[Je ne suis pas un pro du python mais je suis en cours d'apprentissage. Ma dernière expérience a été la création d'une barre de menu personnalisée pour ajouter das son OS. Pourquoi se recréer une barre de menu ?
<ul>
	<li>pour l'appeler simplement en raccourci clavier et lancer vaut programme avec vos raccourci</li>
	<li>pour avoir tout sous le coude et ne pas chercher</li>
</ul>
Pour réaliser ce projet j'ai utilisé le module Tkinter de python parce qu'il est assez simple à utiliser.

J'ai créé une fonction par action à réaliser : ouverture d'application, ouverture de fichier ou autre.

Ensuite j''ai créé l'objet Tk dans lequel j'ai ajouté les éléments de menu 1 à 1.

Pour chaque élément je défini : le nom, le raccourci et la fonction à lancer.
<pre>#!/usr/bin/python
# -*-coding:Latin-1 -*
import os
import subprocess
from Tkinter import *
def donothing():
   filewin = Toplevel(root)
   button = Button(filewin, text="Do nothing button")
   button.pack()
def page_accueil(event=None):
	os.system('firefox google.fr')
def messagerie_int(event=None):
	os.system('rocketchat /dev/null &amp;')
def messagerie_ext(event=None):
	os.system('messagerie')
def wiki_perso(event=None):
	os.system('zim')
def terminal(event=None):
	os.system('terminator')
def atom(event=None):
	os.system('atom')
def virtualb(event=None):
	os.system('virtualbox')
def youtube(event=None):
	os.system('firefox -new-tab youtube.fr')
def google(event=None):
	os.system('firefox -new-tab google.fr')
def telechargement(event=None):
	os.system('xdg-open /home/oki/T\él\échargements')
root = Tk()
root.title('Xav\'s Bar')
root.bell()
root.maxsize(width=200, height=30)
root.lift()
menubar = Menu(root,background='#338cff',foreground='white',activebackground='#004c99', activeforeground='white')
totomenu = Menu(menubar, tearoff=0,background='#338cff',foreground='white',activebackground='#004c99',activeforeground='white')
totomenu.add_command(label="Firefox (tout)", command=page_accueil, accelerator="Ctrl+f")
root.bind('', page_accueil)
totomenu.add_command(label="Messagerie int", command=messagerie_int, accelerator="Ctrl+m")
root.bind('', messagerie_int)
totomenu.add_command(label="Messagerie ext", command=messagerie_ext, accelerator="Ctrl+c")
root.bind('', messagerie_ext)
totomenu.add_command(label="Wiki perso", command=wiki_perso, accelerator="Ctrl+w" )
root.bind('', wiki_perso)
totomenu.add_command(label="Terminal", command=terminal, accelerator="Ctrl+t")
root.bind('', terminal)
totomenu.add_command(label="Atom editeur", command=atom, accelerator="Ctrl+o")
root.bind('', atom)
totomenu.add_command(label="VirtualBox", command=virtualb, accelerator="Ctrl+u")
root.bind('', virtualb)
totomenu.add_separator()
totomenu.add_command(label="Exit", command=root.quit)
menubar.add_cascade(label="Basiques", menu=totomenu)
editmenu = Menu(menubar, tearoff=0,background='#338cff',foreground='white',activebackground='#004c99',activeforeground='white')
editmenu.add_command(label="Google", command=google)
editmenu.add_command(label="Youtube", command=youtube)
editmenu.add_command(label="Telechargements", command=telechargement)
editmenu.add_command(label="Delete", command=donothing)
editmenu.add_command(label="Select All", command=display)
menubar.add_cascade(label="Persos", menu=editmenu)
helpmenu = Menu(menubar, tearoff=0,background='#338cff',foreground='white',activebackground='#004c99',activeforeground='white')
helpmenu.add_command(label="Help Index", command=donothing)
helpmenu.add_command(label="About...", command=donothing)
menubar.add_cascade(label="Help", menu=helpmenu)
root.config(menu=menubar)
root.mainloop()
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2018-07-08 12:25:56</wp:post_date>
		<wp:post_date_gmt>2018-07-08 11:25:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-creer-sa-barre-de-menu-perso</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[105]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1015925185575378945";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19790440058]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531050412]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/PmYFSLoef9Y]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175671859570]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : killer les sessions d&#039;un user (déconnecter)</title>
		<link>http://xavki.blog/2018/07/06/oracle-killer-les-sessions-dun-user-deconnecter/</link>
		<pubDate>Fri, 06 Jul 2018 11:54:44 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[Un petit tips Oracle pour déconnecter un user/schéma oracle. Combien de fois on tente de passer un script ou de vider un schéma avec des connexions sui trainent encore sur l'instance.

Voici donc le sql qui génère le sql à lancer <strong>pour killer les sessions</strong> :
<pre>select 'alter system kill session ' || sid || ',' || serial# || ';'
 from v$session where username = '';
</pre>
[caption id="attachment_media-35" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-116" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-64699.jpeg" alt="black and white hands mask bussinesman" width="1880" height="1253" /> Photo by Vijay Putra on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date>2018-07-06 12:54:44</wp:post_date>
		<wp:post_date_gmt>2018-07-06 11:54:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-killer-les-sessions-dun-user-deconnecter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1015202402784481280";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19727235836]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530878087]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/EenkJPteosA]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175605397595]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : La condition IF en mode ternaire</title>
		<link>http://xavki.blog/2018/07/09/python-la-condition-if-en-mode-ternaire/</link>
		<pubDate>Mon, 09 Jul 2018 15:58:10 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[Le mode ternaire en python permet de simplifier grandement l'exécution d'opérations sous condition. Et même mieux vous pourrez le constater dans le deuxième exemple.

En gros sans ternaire on fait  :
<pre>if condition:
  print("Vrai")
else:
  print("Faux")
</pre>
Mais en mode ternaire cela donne sur une ligne :
<pre>print('Vrai') if condition else print('Faux')
</pre>
Pas trop compliqué non ? et facilement lisible malgré la rédaction oneliner.

Imaginez faire pareil avec l'application d'une classe. C'est à dire si la valeur vaut tant j'applique la class A sinon la classe B ? Cela donne ceci :
<pre>x = (classeChat if sexe == "M" else classeChienne)(taille, nom)
</pre>
Pas mal, on détermine la classe à appliquer par la variable "sexe". Si c'est un mal "M" on considère que c'est un chat et on passe à la classe les arguments taille et nom. Sinon on passe les mêmes arguments mais à la classe Chienne.

L'exemple est bizare mais c'est pluto pratique.

[caption id="attachment_media-35" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-119" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-270557.jpeg" alt="blur business close up code" width="1880" height="1252" /> Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2018-07-09 16:58:10</wp:post_date>
		<wp:post_date_gmt>2018-07-09 15:58:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-la-condition-if-en-mode-ternaire</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[119]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1016354230846836736";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19831385952]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531152704]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/GXhNkoximcd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175713069925]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : Lister les process utilisant du CPU</title>
		<link>http://xavki.blog/2018/07/10/tips-lister-les-process-utilisant-du-cpu/</link>
		<pubDate>Tue, 10 Jul 2018 11:17:52 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[Un petit tips rapide Linux pour éclaircir un top. En effet, top vous liste tous les process qui tournent mais bien souvent on ne cherche <strong>que les processus qui utilisent du CPU</strong>.
<pre>top -n 1 |awk '(($10+0) &gt; 0.0)'
</pre>
On fait donc un top avec option -n 1 (on supprime la première ligne). Puis on applique un awk qui fait un tri sur la dixième colonne. Dans notre cas on affiche uniquement les process dont la conso CPU est supérieure à 0. On aurait pu filtrer différement mais l'idée est là.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2018-07-10 12:17:52</wp:post_date>
		<wp:post_date_gmt>2018-07-10 11:17:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-lister-les-process-utilisant-du-cpu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1016642840963813376";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19859604346]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531221515]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/9zD7pXyq7KL]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175741400605]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : itération unique sans itertools</title>
		<link>http://xavki.blog/2018/07/12/python-iteration-sans-itertools/</link>
		<pubDate>Thu, 12 Jul 2018 11:28:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=123</guid>
		<description></description>
		<content:encoded><![CDATA[Que faire lorsque l'on cherche les itérations de deux liste. Mais attention, cette fois-ci on ne cherche pas toutes les combinaisons mais jsute à associer les éléments ayant le même index dans chaque liste.

La solution c'est la fonction zip de python3 :
<pre>&gt;&gt;&gt; data=[(1,2,3),('a','b','c')]
&gt;&gt;&gt; zipped=zip(*data)
&gt;&gt;&gt; list(zipped)
[(1, 'a'), (2, 'b'), (3, 'c')]
</pre>
Et si vous souhaitez revenir au premier tableau, il suffit d'appliquer un autre zip dessus ;)

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>123</wp:post_id>
		<wp:post_date>2018-07-12 12:28:06</wp:post_date>
		<wp:post_date_gmt>2018-07-12 11:28:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-iteration-sans-itertools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/3RQwZFapwrR]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19931666586]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531396191]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1017375484428992513";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175811266725]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>blue round plastic toy on a desk</title>
		<link>http://xavki.blog/pexels-photo-234171/</link>
		<pubDate>Fri, 06 Jul 2018 11:39:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-234171.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Asdii Wang on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2018-07-06 12:39:23</wp:post_date>
		<wp:post_date_gmt>2018-07-06 11:39:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-234171</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-234171.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-234171.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-234171.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:149855;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>blue round plastic toy on a desk</title>
		<link>http://xavki.blog/pexels-photo-2341711/</link>
		<pubDate>Fri, 06 Jul 2018 11:39:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-2341711.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Asdii Wang on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date>2018-07-06 12:39:41</wp:post_date>
		<wp:post_date_gmt>2018-07-06 11:39:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-2341711</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-2341711.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-2341711.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-2341711.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:149855;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sign slippery wet caution</title>
		<link>http://xavki.blog/sign-slippery-wet-caution/</link>
		<pubDate>Fri, 06 Jul 2018 11:53:51 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/sign-slippery-wet-caution.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Skitterphoto on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2018-07-06 12:53:51</wp:post_date>
		<wp:post_date_gmt>2018-07-06 11:53:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sign-slippery-wet-caution</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/sign-slippery-wet-caution.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/sign-slippery-wet-caution.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:102:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/sign-slippery-wet-caution.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:167703;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Python</title>
		<link>http://xavki.blog/codes-et-scripts-python/</link>
		<pubDate>Fri, 06 Jul 2018 11:56:09 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?page_id=133</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li><a href="https://xavki.wordpress.com/2018/06/28/python-serveur-web/">Lancer un serveur web en une ligne</a> : au coup par coup pour partager des fichiers</li>
	<li><a href="https://xavki.wordpress.com/2018/07/01/python-tableau-boucle-for-condition-meme-ligne/">Combiner tableau boucle for et condition en une ligne</a> : indispensable pour faire du coding game</li>
	<li><a href="https://xavki.blog/2018/09/13/python-comment-lire-les-lignes-dun-fichier-tout-simplement-read-et-readline/">Les bases de la lecture de fichiers</a> avec read et readline</li>
	<li><a href="https://xavki.blog/2018/09/18/python-un-mot-sur-les-listes-boucles-for/">Une note sur les boucles For</a> (pour les raccourcir)</li>
	<li><a href="https://xavki.blog/2018/09/04/python-comment-creer-une-fonction-pour-lancer-vos-regex-exemple-capture-dune-ip/">Modèle de fonction regex</a> pour faciliter l'utilisation de regex</li>
	<li><a href="https://xavki.blog/2018/08/29/python-lire-et-ecrire-facilement-dans-un-fichier-avec-pathlib/">Lire et écrire dans un fichier</a> avec le module PATHLIB</li>
	<li><a href="https://xavki.blog/2018/08/23/python-le-point-sur-les-dictionnaires-et-ne-pas-confondre-avec-liste/">Dictionnaires vs listes</a> : quelques exemples et différences entre les deux objets</li>
	<li><a href="https://xavki.blog/2018/09/11/python-comment-logger-dans-vos-scripts-avec-logging/">Comment logger proprement</a> avec la librairie logging ?</li>
	<li><a href="https://xavki.wordpress.com/2018/07/08/python-creer-sa-barre-de-menu-perso/">Créer sa barre d'outil perso </a>: avoir sous la main tous les outilssite que l'on préfère en se créant sa propre barre d'outil</li>
	<li><a href="https://xavki.wordpress.com/2018/07/09/python-la-condition-if-en-mode-ternaire/">IF, la condition en mode ternaire</a> : une manière utlra courte de faire du oneliner</li>
	<li><a href="https://xavki.wordpress.com/2018/07/12/python-iteration-sans-itertools/">Sans itertools faire des itérations</a> : un moyen de se passer du module itertools</li>
	<li><a href="https://xavki.wordpress.com/2018/07/13/python-convertir-un-csv-en-json-en-une-ligne/">CSV to json</a> : convertir des csv en json</li>
	<li> <a href="https://xavki.wordpress.com/2018/07/15/python-les-faux-amis-is-et-egal/">IS != "=="</a> : précision sur l'utilisation de IS</li>
	<li><a href="https://xavki.wordpress.com/2018/07/16/python-fpdf-generer-pdf/">Générer un pdf en Python</a> : utiliser le module fpdf</li>
	<li><a href="https://xavki.wordpress.com/2018/07/18/python-variable-locale-nonlocal-et-globale/">Les différents types de variables</a> : locales, globales ou non-locales</li>
	<li><a href="https://xavki.wordpress.com/2018/07/22/tipspython-mettre-a-jour-automatiquement-tous-les-packages/">Mettre à jour automatiquement tous les packages</a></li>
	<li><a href="https://xavki.wordpress.com/2018/07/25/python-decouvrir-le-module-collections-et-sa-classe-counter/">Collections </a>: découvrir le module</li>
	<li><a href="https://xavki.blog/2018/09/06/python-bash-comment-piper-combiner-du-bash-dans-du-python-c-en-une-ligne/">Piper du bash</a> dans du python</li>
</ul>
Sites et liens pratiques :
<ul>
	<li style="list-style-type:none;">
<ul>
	<li><a href="http://python101.pythonlibrary.org/">http://python101.pythonlibrary.org/</a> : très bon wiki python</li>
</ul>
<ul>
	<li><a href="https://wiki.wxpython.org/">https://wiki.wxpython.org/</a> : wxpython project</li>
	<li><a href="http://python101.pythonlibrary.org/chapter1_idle.html">http://python101.pythonlibrary.org</a> : tuto ultra complet</li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date>2018-07-06 12:56:09</wp:post_date>
		<wp:post_date_gmt>2018-07-06 11:56:09</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>codes-et-scripts-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/07/06/136/</link>
		<pubDate>Fri, 06 Jul 2018 11:57:48 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2018/07/06/136/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2018-07-06 12:57:48</wp:post_date>
		<wp:post_date_gmt>2018-07-06 11:57:48</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>136</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[133]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : lister vos adresses ip</title>
		<link>http://xavki.blog/2018/07/06/linux-lister-adresses-ip/</link>
		<pubDate>Fri, 06 Jul 2018 13:21:25 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[Très court : comment lister les adresses ip présentent sur une machine linux ?
<pre>ifconfig | awk '/inet / {print $2}'
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2018-07-06 14:21:25</wp:post_date>
		<wp:post_date_gmt>2018-07-06 13:21:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-lister-adresses-ip</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1015224213802770435";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[145]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19729567859]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1530883287]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/E77SJwadEp4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175607076185]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>emperor penguin with wings sapread</title>
		<link>http://xavki.blog/pexels-photo-60088/</link>
		<pubDate>Fri, 06 Jul 2018 13:20:55 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-60088.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Uncoated on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2018-07-06 14:20:55</wp:post_date>
		<wp:post_date_gmt>2018-07-06 13:20:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-60088</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-60088.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-60088.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:96:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-60088.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:143460;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>desk office pen ruler</title>
		<link>http://xavki.blog/desk-office-pen-ruler/</link>
		<pubDate>Fri, 06 Jul 2018 14:10:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/desk-office-pen-ruler.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2018-07-06 15:10:56</wp:post_date>
		<wp:post_date_gmt>2018-07-06 14:10:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>desk-office-pen-ruler</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/desk-office-pen-ruler.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/desk-office-pen-ruler.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/desk-office-pen-ruler.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:99592;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person pinpointing pen on calendar</title>
		<link>http://xavki.blog/pexels-photo-862731/</link>
		<pubDate>Fri, 06 Jul 2018 15:08:44 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-862731.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2018-07-06 16:08:44</wp:post_date>
		<wp:post_date_gmt>2018-07-06 15:08:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-862731</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-862731.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-862731.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-862731.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:122437;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gaming cards on hands</title>
		<link>http://xavki.blog/pexels-photo-800767/</link>
		<pubDate>Mon, 09 Jul 2018 12:55:19 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-800767.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Midhun Joy on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2018-07-09 13:55:19</wp:post_date>
		<wp:post_date_gmt>2018-07-09 12:55:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-800767</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-800767.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-800767.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1733;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-800767.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:180385;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[AWK][Tips] : calculer le cumul d&#039;une colonne</title>
		<link>http://xavki.blog/2018/07/11/awk-calculer-cumul/</link>
		<pubDate>Wed, 11 Jul 2018 12:02:46 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[Awk est un très bon outil. On peut l'utiliser soit de manière peu développée (oneliner) ou plus élaborée comme un vrai language de programmation. Généralement on l'utilise pour son côté conci sur une ligne.

Aujourd'hui je vous propose <strong>un classique de AWK à savoir calculer le cumul d'une colonne</strong>. Rien de bien sorcier et en plus ça permet de bien entrer dans le sujet. Je reviendrai plus tard sur les séparateurs mais on va se limiter à FS pour commencer. FS pour Fields Separator. Par exemple pour un fichier de type csv -FS=";". Ensuite on peut appeler les colonnes en fonction de leur ordre $1 = première colonne. Et $0 représente toute la ligne.

Ainsi avec un fichier contenant :
<pre>└─ $ ▶ cat fichier.txt 
toto;1;2;url
xxx;2;5;url2
yyy;2;6;url3
</pre>
On a donc 3 lignes de 4 colonnes. On cherche à calculer la somme de la troisème colonne. Rien de plus simple :
<pre># afficher le contenu du fichier
awk '{print $0} fichier.txt'

# pour afficher la troisième colonne uniquement
awk -FS ";" '{print $3}' fichier.txt

# pour calculer le cumul de la colonne 3
awk -FS ";" '{CUMUL += $3} END {print CUMUL}' fichier.txt
</pre>
Donc là on y est :
<ul>
	<li>on défini le séparateur de champs</li>
	<li>on créé une variable CUMUL dans laquel on ajoute la valeur de la colonne 3 à chaque ligne</li>
	<li>et en dernière ligne on affiche le contenu de la variable CUMUL</li>
</ul>
C'est simple non ?

Le gros intérêt c'est de pouvoir "piper" tout cela en appliquant avant des commandes bash, sed....

Promis dans pas longtemps on va revenir sur les FS, OFS, NR, ONR...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2018-07-11 13:02:46</wp:post_date>
		<wp:post_date_gmt>2018-07-11 12:02:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awk-calculer-cumul</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1017016356057833472";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19896726312]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531310568]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/WeuHXWWb8w8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175776996215]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person hands on assorted color plastic lid lot</title>
		<link>http://xavki.blog/pexels-photo-761297/</link>
		<pubDate>Wed, 11 Jul 2018 12:36:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-761297.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Krizjohn Rosales on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2018-07-11 13:36:43</wp:post_date>
		<wp:post_date_gmt>2018-07-11 12:36:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-761297</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-761297.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-761297.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1268;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-761297.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:423485;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : comparer un fichier/répertoire de deux serveurs différents avec ssh</title>
		<link>http://xavki.blog/2018/07/12/bash-comparer-un-fichier-repertoire-de-deux-serveurs-differents-avec-ssh/</link>
		<pubDate>Thu, 12 Jul 2018 13:12:25 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[Pour les sysadmin c'est un besoin récurrent : comment comparer deux fichiers de conf sur deux serveurs différents ?

Pour réaliser cela on va associer ssh et la commande diff. C'est vrai que diff est assez magique pour comparer deux fichiers et voir rapidement où sont les différences.

Par exemple nous sommes sur le serveur n°2 et nous voulons comparer sa conf avec le serveur n°1 :
<pre>diff -y &lt;(ssh utilisateur@serveur1 cat /etc/monfichier) &lt;(cat /etc/monfichier)
</pre>
Donc :
<ul>
	<li>on utilise diff -y pour comparer ligne à ligne</li>
	<li>on fait un ssh pour ouvrir le fichier distant</li>
</ul>
Et si nous voulions comparer le contenu de deux répertoires de la même manière ?
<pre>diff -y &lt;(ssh utilisateur@serveur1 find /etc/monrepertoire | sort) &lt;(find /etc/monrepertoire | sort)
</pre>
Là on ajoute donc un find pour lister les fichiers du répertoire puis on classe la sortie dufind grâce à un sort.

[caption id="attachment_media-50" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-172" src="https://xavki.files.wordpress.com/2018/07/man-person-legs-grass1.jpg" alt="man person legs grass" width="1880" height="1253" /> Photo by Gratisography on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2018-07-12 14:12:25</wp:post_date>
		<wp:post_date_gmt>2018-07-12 13:12:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-comparer-un-fichier-repertoire-de-deux-serveurs-differents-avec-ssh</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[171]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19933900503]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531401146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1017396272536391680";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/dtJph9kwMiu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175813009610]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>man person legs grass</title>
		<link>http://xavki.blog/man-person-legs-grass/</link>
		<pubDate>Thu, 12 Jul 2018 13:11:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/man-person-legs-grass.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Gratisography on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2018-07-12 14:11:05</wp:post_date>
		<wp:post_date_gmt>2018-07-12 13:11:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>man-person-legs-grass</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/man-person-legs-grass.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/man-person-legs-grass.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/man-person-legs-grass.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:792692;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>man person legs grass</title>
		<link>http://xavki.blog/man-person-legs-grass1/</link>
		<pubDate>Thu, 12 Jul 2018 13:11:26 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/man-person-legs-grass1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Gratisography on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2018-07-12 14:11:26</wp:post_date>
		<wp:post_date_gmt>2018-07-12 13:11:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>man-person-legs-grass1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/man-person-legs-grass1.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/man-person-legs-grass1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:99:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/man-person-legs-grass1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:792692;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : convertir un csv en json en une ligne</title>
		<link>http://xavki.blog/2018/07/13/python-convertir-un-csv-en-json-en-une-ligne/</link>
		<pubDate>Fri, 13 Jul 2018 11:37:34 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[Le csv et le json sont assez proches en terme de format. Pourtant parfois on veut pas à avoir à chercher comment convertir l'un dans l'autre. Je vous propose un oneline sur la transformation du csv en json.
<pre>python -c "import csv,json;
print json.dumps(list(csv.reader(open('fichier.csv'))))"
</pre>
En gros dans l'ordre des choses :
1- on ouvre le fichier
2- on lit le lit en csv
3- on met tout ca sous forme de liste
4- et enfin on dump tout ça en json
...
et on affiche

[caption id="attachment_media-120" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-127" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-2341711.jpeg" alt="blue round plastic toy on a desk" width="1880" height="1253" /> Photo by Asdii Wang on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2018-07-13 12:37:34</wp:post_date>
		<wp:post_date_gmt>2018-07-13 11:37:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-convertir-un-csv-en-json-en-une-ligne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[126]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1017736994296868866";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19966198021]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531482381]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/dzdPy99SXNr]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175845249710]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : /!\ les faux amis &quot;is&quot; et &quot;==&quot;</title>
		<link>http://xavki.blog/2018/07/15/python-les-faux-amis-is-et-egal/</link>
		<pubDate>Sun, 15 Jul 2018 11:52:20 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[Ah il fallait que l'on arrive vers ce genre d'article. Il s'agit d'attirer notre attention sur de petites subtilités. Dans le cas présent je considère cela comme un faux ami.

Parfois on a tendance à faire des raccourcis ou des abus de langage en perdant de vue l'origine des choses. Et pourtant jamais, un code propose 2 fonctions qui font la même chose. On ne clone pas le fonction par plaisir.C'est le cas avec "==" et "is". Je l'avoue "is" est heureusement pas si souvent que cela détourné de sa vocation première.

Quelques lignes de code pour comprendre :
<pre>&gt;&gt;&gt; list1 = [1, 2, 3]
&gt;&gt;&gt; list2 = list1

&gt;&gt;&gt; list1 is list2
True
&gt;&gt;&gt; list1 == list2
True
</pre>
Jusque là tout va bien.

[caption id="attachment_131" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-131" src="https://xavki.files.wordpress.com/2018/07/sign-slippery-wet-caution.jpg" alt="sign slippery wet caution" width="1880" height="1253" /> Photo by Skitterphoto on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

Mais :
<pre>&gt;&gt;&gt; list3 = list(list1)

&gt;&gt;&gt; list1 == list3
True
&gt;&gt;&gt; list1 is list3
False
</pre>
Ahah que se passe-t-il ?

Forcément ils ne font pas la même chose.

"is" vérifie les objets. Si on pointe vers le même il retourne True.

"==" vérifie que le contenu des objets sont bien identiques.

Et voilà !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2018-07-15 12:52:20</wp:post_date>
		<wp:post_date_gmt>2018-07-15 11:52:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-les-faux-amis-is-et-egal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[131]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1018475781289381889";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20030074995]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531658522]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/122PKmrMd5F]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175913341635]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : fpdf, générer un pdf</title>
		<link>http://xavki.blog/2018/07/16/python-fpdf-generer-pdf/</link>
		<pubDate>Mon, 16 Jul 2018 14:47:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[Je viens de découvrir un petit outil bien sympa pour faire des pdf en python. Alors il y en a d'autres qui trainent mais celui-ci est facile à scripter. Ce module s'appelle fpdf.

Tout d'abord il faut l'installer avec notre pip préféré :
<pre>pip install fpdf</pre>
puis on se lance dans le script :
<pre>#!/usr/lib/python
from fpdf import FPDF
monPdf = FPDF()
monPdf.add_page()
monPdf.set_font("Arial", size=10)
monPdf.cell(200, 10, txt="Bonjour les visiteurs", ln=1, align="C")
monPdf.output("mon_fichier.pdf")</pre>
et on peut faire aussi de l'impression d'un code Html basique :
<pre>#!/usr/bin/python
from fpdf import FPDF, HTMLMixin
class HTML2PDF(FPDF, HTMLMixin):
    pass
def htmlenpdf():
    html = '''
        Test de HTML pour voir
    '''
    monPdf = HTML2PDF()
    monPdf.add_page()
    monPdf.write_html(html)
    monPdf.output('mon_fichier.pdf')
if __name__ == '__main__':
    htmlenpdf()</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2018-07-16 15:47:06</wp:post_date>
		<wp:post_date_gmt>2018-07-16 14:47:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-fpdf-generer-pdf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[149]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1018869698669268992";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20067163485]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531752438]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/j47jtE69Tvf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175951997690]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[MySql] : vider toutes les tables d&#039;une base</title>
		<link>http://xavki.blog/2018/07/17/mysql-vider-toutes-les-tables-dune-base/</link>
		<pubDate>Tue, 17 Jul 2018 08:54:33 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[On a pas tous une âme de DBA mais ces dernières années les sgbd ce sont tellement simplifiés que finalement les actions restent assez accessibles pour tous. Alors on cherche toujours à aller un peu plus loin.

Mysql est très facile à utiliser en ligne de commande. Du coup cela permet aussi de manipuler ses output dans une ligne bash ou awk.

Vider toutes les tables d'une base de données en une ligne c'est possible voici comment :
<pre>MYSQL_CONNECT="mysql -h hostname -u username -ppassword -D database";
$MYSQL_CONNECT -Bne "show tables;" | awk '{print "set foreign_key_checks=0; drop table `" $1 "`;"}' | $MYSQL_CONNECT unset MYSQL 
</pre>
Donc :
<ul>
	<li>on créé une variable permettant de lancer le binaire mysql avec les éléments de connexions</li>
	<li>on lance le binaire avec l'option -Bne ( n : flush du cache , B : tabulation comme séparateur , e : sql entre quotes )</li>
	<li>on génère le sql pour dropper la table mais on set le fait de ne pas s'occuper des clés étrangères</li>
	<li>on unset les variables</li>
</ul>
[caption id="attachment_media-119" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-164" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-761297.jpeg" alt="person hands on assorted color plastic lid lot" width="1880" height="1268" /> Photo by Krizjohn Rosales on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2018-07-17 09:54:33</wp:post_date>
		<wp:post_date_gmt>2018-07-17 08:54:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-vider-toutes-les-tables-dune-base</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[164]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20094375744]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531817676]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1019143320054976512";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/253708252028062";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/cNq4zTEYE7r]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175980456745]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6424909038684901376]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[AWK][Tips] : supprimer les lignes en doublon</title>
		<link>http://xavki.blog/2018/07/14/awktips-supprimer-les-lignes-en-doublon/</link>
		<pubDate>Sat, 14 Jul 2018 13:32:24 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[Celle-là elle est facile me diront certains mais bon c'est parfois utile de le rappeler. Awk est un outil bien pratique pas toujours plus court que les autres mais tellement facile à pipper.

Comment supprimer les lignes en doublons d'un fichier ? qu'elles soient à la suite ou non d'ailleurs.

Autant qu'en bash si on utilise le binaire sort cela va vite avec cat monfichier | sort -u ... mais avec awk on peut se creuser la tête.

Voici donc la solution :
<pre>awk '! a[$0]++' fichier.txt 
</pre>
Donc on créé un tableau (array) avec pour clé $0 soit le contenu de la ligne. Et on affiche le contenu dès lors que la ligne suivante est différente (on incrémente de 1 avec le ++.

En un peu plus long il y avait :

<pre>
awk '!($0 in a) {a[$0];print}' fichier.txt 
</pre>

Que dire de plus plus ? pas grand chose car le but est de faire court.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2018-07-14 14:32:24</wp:post_date>
		<wp:post_date_gmt>2018-07-14 13:32:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awktips-supprimer-les-lignes-en-doublon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[126]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1018130838712614912";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20001936302]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531576282]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/H6Ek4XdgDUe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175881062600]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : Killer les process qui écoutent sur le port 80</title>
		<link>http://xavki.blog/2018/07/13/killer-les-process-sur-le-port-80/</link>
		<pubDate>Fri, 13 Jul 2018 19:28:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[kill et pkill permettent de couvrir assez large en matière de fermeture de processus. Mais ils ont encore quelques manques notamment si on cherche à fermer en fonction des ports d'écoute.

Dans notre cas, on se dit que l'on aimerait bien ne plus écouter sur un port souvent utilisé : le 80. Ce n'est pas si évident on peut utiliser du netstat ou du lsof et lister les process puis fair en sorte de killer les résultats.

C'est ce que nous allons faire, de la manière suivante :
<pre>lsof -i :80 | awk 'NR&gt;1 {print $2}' | xargs kill </pre>Donc :
<ul>
 	<li>lsof -i : pour lister les fichiers ouverts sur le port 80</li>
 	<li>awk : on récupère la deuxième colonne où il y a le PID</li>
 	<li>tail : pour virer l'entête de résultat</li>
 	<li>xargs : pour killer tous les PID listés</li>
</ul>

[caption id="attachment_116" align="alignnone" width="1880" height="1253" alt="black and white hands mask bussinesman"]<img src="https://xavki.files.wordpress.com/2018/07/pexels-photo-64699.jpeg" class="alignnone size-full wp-image-116" height="1253" alt="black and white hands mask bussinesman" width="1880"> Photo by Vijay Putra on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2018-07-13 20:28:56</wp:post_date>
		<wp:post_date_gmt>2018-07-13 19:28:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>killer-les-process-sur-le-port-80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1017853415299407874";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[19979009753]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531510140]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/ZyjRCHiY9Ma]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175856173490]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #5 : vim, apropos, glances, gs, nl, sed /pattern/, timeout &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/27/top-commandes-linux-5-vim/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.249</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 08:50:54</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 07:50:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] tuer les processus en écoute sur un port particulier par example sur le port 80 par sécurité si vous avez des doutes à un moment donné [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535356255]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535356256.074452;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>arrows box business chalk</title>
		<link>http://xavki.blog/pexels-photo-533189/</link>
		<pubDate>Fri, 13 Jul 2018 19:35:49 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-533189.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date>2018-07-13 20:35:49</wp:post_date>
		<wp:post_date_gmt>2018-07-13 19:35:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-533189</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-533189.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-533189.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1733;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-533189.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:74518;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>aged aging background bark</title>
		<link>http://xavki.blog/pexels-photo-542347/</link>
		<pubDate>Sun, 15 Jul 2018 09:12:09 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-542347.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Fancycrave.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2018-07-15 10:12:09</wp:post_date>
		<wp:post_date_gmt>2018-07-15 09:12:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-542347</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-542347.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:975;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-542347.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:269274;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-542347.jpeg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>animal on tree brunch</title>
		<link>http://xavki.blog/pexels-photo-1231708/</link>
		<pubDate>Sun, 15 Jul 2018 09:12:14 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-1231708.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Kristin Faye on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date>2018-07-15 10:12:14</wp:post_date>
		<wp:post_date_gmt>2018-07-15 09:12:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-1231708</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-1231708.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1231708.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1231708.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:415527;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>abstract alone art black</title>
		<link>http://xavki.blog/pexels-photo-413268/</link>
		<pubDate>Sun, 15 Jul 2018 09:25:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-413268.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Raine Nectar on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2018-07-15 10:25:00</wp:post_date>
		<wp:post_date_gmt>2018-07-15 09:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-413268</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-413268.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-413268.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-413268.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:734935;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person writing on notebook</title>
		<link>http://xavki.blog/pexels-photo-669615/</link>
		<pubDate>Mon, 16 Jul 2018 10:13:45 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-669615.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Lukas on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2018-07-16 11:13:45</wp:post_date>
		<wp:post_date_gmt>2018-07-16 10:13:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-669615</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-669615.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-669615.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1245;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-669615.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:206651;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>#explainshell.com : se faire expliquer une ligne de commande bash</title>
		<link>http://xavki.blog/2018/07/16/explainshell-com-se-faire-expliquer-une-ligne-de-commande-bash/</link>
		<pubDate>Mon, 16 Jul 2018 19:27:54 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[Pour les regex il existe de nombreux sites qui permettent de se faire expliquer ce qui est fait dans le code. D'un simple copier/coller, le site propose l'explication de chaque groupe ou élément important.

Explainshell.com propose exactement la même chose pour le language shell. C'est fort car autant les regex le champs est large mais ça va un peu. Mais pour le shell l'étendu est immense. Bon je n'ai pas testé le périmètre de cet outil. En tout cas il gagne à être connu.

Testez : <a href="https://explainshell.com/">explainshell</a>

Pour chaque commande, ce site reprend le man pour vous apporter une explication.

N'hésitez pas à le partager autour de vous vous ferez des heureux je pense.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2018-07-16 20:27:54</wp:post_date>
		<wp:post_date_gmt>2018-07-16 19:27:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>explainshell-com-se-faire-expliquer-une-ligne-de-commande-bash</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sites-outils"><![CDATA[Sites &amp; Outils]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1018940314067890176";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[196]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20075393877]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531769276]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/SQ8jy5ZAuvx]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/175959393960]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #4 : bash, factoriel, cut, md5sum, derniers arguments, dcfldd &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.145</wp:comment_author_IP>
			<wp:comment_date>2018-08-25 20:43:42</wp:comment_date>
			<wp:comment_date_gmt>2018-08-25 19:43:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] site explainshell.com pour se faire expliquer des lignes de shell comme certains sites le proposent pour les regex [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535226223]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535226224.011133;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>apps blur button close up</title>
		<link>http://xavki.blog/pexels-photo-267350/</link>
		<pubDate>Mon, 16 Jul 2018 19:25:42 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-267350.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2018-07-16 20:25:42</wp:post_date>
		<wp:post_date_gmt>2018-07-16 19:25:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-267350</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-267350.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-267350.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1792;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-267350.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:151221;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person holding white ceramic teacup with black coffee</title>
		<link>http://xavki.blog/pexels-photo-997719/</link>
		<pubDate>Mon, 16 Jul 2018 19:47:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-997719.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2018-07-16 20:47:06</wp:post_date>
		<wp:post_date_gmt>2018-07-16 19:47:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-997719</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-997719.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-997719.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1261;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-997719.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:207412;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>python book</title>
		<link>http://xavki.blog/pexels-photo-11816711/</link>
		<pubDate>Tue, 17 Jul 2018 09:10:10 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-11816711.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Christina Morillo on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2018-07-17 10:10:10</wp:post_date>
		<wp:post_date_gmt>2018-07-17 09:10:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-11816711</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-11816711.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-11816711.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1255;s:4:"file";s:99:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-11816711.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:146260;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : variable locale, &quot;nonlocal&quot; et globale</title>
		<link>http://xavki.blog/2018/07/18/python-variable-locale-nonlocal-et-globale/</link>
		<pubDate>Wed, 18 Jul 2018 08:27:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=209</guid>
		<description></description>
		<content:encoded><![CDATA[L'univers des variables est impitoyable. On peut s'y perdre surtout en reprennant le code d'un autre développeur. En effet, Python comme beaucoup d'autres languages permet de disposer de variables :
<ul>
	<li>local : spécifique à une fonction (et n'en sors pas)</li>
	<li>nonlocal : peut sortir mais n'est pas globale (donc reste interne à la fonction mère)</li>
	<li>global : là c'est disponible pour tout votre script ou code.</li>
</ul>
Petite démo :
<pre>#!/usr/bin/python3

x=0

def externe():
        x = 1
        def interne():
                nonlocal x
                x=2
                print("interne:",x)

        interne()
        print("externe:",x)
externe()
print("globale:",x)
</pre>
Rien de très compliqué donc :
<pre>interne: 2
externe: 2
globale: 0
</pre>
Amusez-vous vous aussi à faire des tests de manière à bien assimiler le concept si vous ne le connaissez pas déjà.

[caption id="attachment_media-104" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-211" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-8938951.jpeg" alt="notebook with dollar sign outline" width="1880" height="1134" /> Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date>2018-07-18 09:27:02</wp:post_date>
		<wp:post_date_gmt>2018-07-18 08:27:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-variable-locale-nonlocal-et-globale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[210]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20130651770]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531902425]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1019498783481180160";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/254545445277676";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/SNcay37xACb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176015262570]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6425264504103407616]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>notebook with dollar sign outline</title>
		<link>http://xavki.blog/pexels-photo-893895/</link>
		<pubDate>Wed, 18 Jul 2018 08:23:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-893895.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2018-07-18 09:23:43</wp:post_date>
		<wp:post_date_gmt>2018-07-18 08:23:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-893895</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-893895.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-893895.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1134;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-893895.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:122174;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>notebook with dollar sign outline</title>
		<link>http://xavki.blog/pexels-photo-8938951/</link>
		<pubDate>Wed, 18 Jul 2018 08:24:30 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-8938951.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date>2018-07-18 09:24:30</wp:post_date>
		<wp:post_date_gmt>2018-07-18 08:24:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-8938951</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-8938951.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-8938951.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1134;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-8938951.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:122174;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>animal big elephant endangered</title>
		<link>http://xavki.blog/pexels-photo-133394/</link>
		<pubDate>Wed, 18 Jul 2018 08:40:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-133394.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Anthony on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2018-07-18 09:40:07</wp:post_date>
		<wp:post_date_gmt>2018-07-18 08:40:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-133394</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-133394.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-133394.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1876;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-133394.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:361047;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hacker screen</title>
		<link>http://xavki.blog/pexels-photo-193349/</link>
		<pubDate>Wed, 18 Jul 2018 08:56:40 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-193349.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Markus Spiske freeforcommercialuse.net on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2018-07-18 09:56:40</wp:post_date>
		<wp:post_date_gmt>2018-07-18 08:56:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-193349</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-193349.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-193349.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:867;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-193349.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:94267;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : logger dans les logs system (syslog)</title>
		<link>http://xavki.blog/2018/07/18/bash-logger-logs-system-syslog/</link>
		<pubDate>Wed, 18 Jul 2018 15:09:48 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[Pour éviter d'éparpiller des logs un peu partout, l'idéal est d'écrire les logs dans les logs système (syslog). Je dis l'idéal mais ce n'est pas forcément l'idéal. Parfois vaut mieux un répertoire spécifique par exemple si ca log trop. En tout cas, on peut logger les éléments de bases dans syslog pour faciliter la recherche en cas d'incident.

Pour faire cela c'est facile vous avez le binaire logger :
<pre>logger -t Toto "pas de pb"</pre>
Donc là, on vient de créer une ligne pour l'application "Toto" en indiquant pas de pb.

On retrouve donc dans /var/log/syslog
<pre>Jul  6 16:48:14 doki Toto: pas de pb
</pre>
[caption id="attachment_153" align="aligncenter" width="300"]<img class="alignnone size-medium wp-image-153" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-862731.jpeg?w=300" alt="person pinpointing pen on calendar" width="300" height="200" /> Photo by rawpixel.com on Pexels.com[/caption]

Généralement pour rendre ce genre de tache universelle on utilise $0 qui contient le nom du fichier.

Donc :
<pre>logger -t $0 "Début du script"
</pre>
Et vous l'avez vu l'avantage de logger c'est le format du log qui rentre dans les standards des logs système avec le jour, l'heure et le user à l'origine du déclenchement.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2018-07-18 16:09:48</wp:post_date>
		<wp:post_date_gmt>2018-07-18 15:09:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-logger-logs-system-syslog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[153]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1019625333753073665";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/254861715246049";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20144845452]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1531932596]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/8esuAQKew5Z]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176025580105]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6425391051737038848]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[AWK][Linux] : Supprimer les doublons de votre PATH... RS FS et ORS OFS</title>
		<link>http://xavki.blog/2018/07/19/awk-linux-supprimer-doublons-path/</link>
		<pubDate>Thu, 19 Jul 2018 12:56:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[Un truc typique sur linux c'est d'ajouter des chemins à votre PATH pour accéder à des binaires mais sans vérifier que ce chemin existe déjà. Du coup on perd un peu en perf et c'est très moche.

Je ne vous propose pas de commande pour vérifier si un chemin existe déjà mais plutôt une commande qui vous permettra de recréer votre variable $PATH sans les doublons. Ainsi vous pouvez ajouter cela au moment du chargement de vos variables d'environnement.
<pre>export PATH=`echo -n $PATH | awk -v RS=":" '{ if (!x[$0]++){printf s $0 ; s=":"}}'`
</pre>
<strong>L'option RS de awk</strong> s'appelle record separator. Il permet de définir les séparateur de ligne.
<p style="text-align:left;">L'autre option souvent utilisée avec awk c'est FS pour fiels separator. On défini alors les séparateur de champs comme par exemple le ";" pour les fichiers de type csv.</p>


[caption id="attachment_158" align="aligncenter" width="300"]<img class="alignnone size-medium wp-image-158" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-800767.jpeg?w=300" alt="gaming cards on hands" width="300" height="225" /> Photo by Midhun Joy on Pexels.com[/caption]

Ensuite pour aller un petit peu plus loin on peut aussi utiliser les output de ces options à savoir OFS ou ORS. Ainsi c'est l'inverse on définit comment on souhaite afficher les spérateur de champs ou de ligne.

Par exemple :
<pre>awk -F':' 'BEGIN{OFS="&gt;";} {print $3,$4;}' /etc/passwd
1001&gt;1001
1002&gt;1002
1003&gt;1003
</pre>
En gros on parcours le passwd en définissant les champs par un FS valant ":". Puis pour la sortie du résultat on redéfinie un séparateur de champ avec un OFS valant "&gt;".

Il y a aussi dans les options courantes pour les oneliner :
<ul>
	<li>NR (number rows) : affiche le nombre de ligne</li>
	<li>NF (number fields) : nombre de champs</li>
</ul>
Ainsi on pourrait afficher le nombre de ligne dont le nombre de champs vaut une certaine valeur.

AWK est un vrai couteau suisse pour qui sait l'utiliser.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2018-07-19 13:56:06</wp:post_date>
		<wp:post_date_gmt>2018-07-19 12:56:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awk-linux-supprimer-doublons-path</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[158]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1019931073545953280";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/255573578508196";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20174654002]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532005490]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/AQ7t1UCMN8X]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176054518825]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6425696790372323328]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Docker] : supprimer les images non taggées</title>
		<link>http://xavki.blog/2018/07/20/docker-supprimer-les-images-non-taggees/</link>
		<pubDate>Fri, 20 Jul 2018 11:39:57 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[Ah cela m'est arrivé plusieurs fois, on créé des images sans faire gaffe. Au bout d'un moment ça devient le boxon et il est temps de faire le ménage. Mais lorsque l'on fait le ménage dans les images docker, on se retrouve avec une tripoté d'images sans tag. Que faire ? les supprimer car c'est moche et ça ne sert à rien.

Mais comment supprimer des images qui ne sont pas taggées ?

Pas si compliqué :
<pre>docker rmi $(docker images -f "dangling=true" -q)</pre>Donc :
<ul>
 	<li>docker images : on liste les images en filtrant sur les "non-taggées" soit dangling = true</li>
 	<li>docker rmi : on applique une suppression d'image par l'ID</li>
</ul>

[caption id="attachment_181" height="1410" align="alignnone" alt="arrows box business chalk" width="1880"]<img src="https://xavki.files.wordpress.com/2018/07/pexels-photo-533189.jpeg?w=1880" class="alignnone size-full wp-image-181" height="1410" alt="arrows box business chalk" width="1880"> Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2018-07-20 12:39:57</wp:post_date>
		<wp:post_date_gmt>2018-07-20 11:39:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-supprimer-les-images-non-taggees</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[181]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1020272132734013441";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/256411398424414";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20208442998]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532086805]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/RsSQWHPwrjB]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176087267390]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6426037851523289088]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash][AWK] : Lister les commandes le top de vos commandes</title>
		<link>http://xavki.blog/2018/07/23/bashawk-lister-les-commandes-le-top-de-vos-commandes/</link>
		<pubDate>Mon, 23 Jul 2018 10:13:49 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[L'historique de Linux est utilisable via le binaire "history" ou avec un simple vi de ".bash_history". Mais on l'utilise plus régulièrement à l'aide de la commande ctrl+r en tapant les mots à rechercher dans votre historique. Un bon moyen pour relancer une commande déjà utilisée.

Mais on peut faire d'autres choses avec notamment avoir un vrai système de log de l'historique avec la mise en place d'un archivage de vos commandes. On reverra cela plus tard.

[caption id="attachment_media-67" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-192" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-669615.jpeg" alt="person writing on notebook" width="1880" height="1245" /> Photo by Lukas on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

Utiliser les statistiques de votre historique c'est aussi un bon moyen de voir ce que vous faites le plus souvent. Et du coup vous pouvez y trouver de bonnes idées pour créer les alias les plus adéquates pour gagner en performance devant votre clavier.

Un bon moyen pour faire ces statistiques :
<pre>history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head
</pre>
Donc :
<ul>
	<li>on lance history pour travailler dessus</li>
	<li>on utilise awk pour dresser la liste des top commandes</li>
	<li>on ordonne le tout avec un sort</li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date>2018-07-23 11:13:49</wp:post_date>
		<wp:post_date_gmt>2018-07-23 10:13:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bashawk-lister-les-commandes-le-top-de-vos-commandes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[192]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1021342977761906688";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/259080688157485";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20301731768]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532342114]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/65Ai3pf4FR4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176190219680]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6427108695448125440]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #7 : git, bgplot, pacvim, loop/useradd, ln -s à la volée &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/10/top-commandes-linux-7/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.91.170</wp:comment_author_IP>
			<wp:comment_date>2018-09-10 08:06:07</wp:comment_date>
			<wp:comment_date_gmt>2018-09-10 07:06:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Lister les commandes que vous utilisez le plus avec awk [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1536563167]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536563167.240817;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Sed] : ajouter une ligne vide avant et après chaque ligne de commentaires</title>
		<link>http://xavki.blog/2018/07/24/sed-ajouter-une-ligne-vide-avant-et-apres-chaque-ligne-de-commentaires/</link>
		<pubDate>Tue, 24 Jul 2018 11:46:01 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=198</guid>
		<description></description>
		<content:encoded><![CDATA[Sed est un bonne outil que l'on limite parfois à des actions basiques. Mais qu'est-ce qu'il fait bien ces actions "basiques". Aujourd'hui, je vous propose un truc tout simple pour rendre vos scripts plus lisible : ajouter un espace avant et après chaque ligne de commentaire.

Pour cela il suffit de faire :

<pre>
cat monfichier.sh | sed '/#/{x;p;x;G;}'
</pre>

Plus généralement pour ajouter une ligne avant et après une ligne contenant un pattern :

<pre>
sed '/regex/{x;p;x;G;}'
</pre>

Facile non ? et pourtant tellement efficace ce bon vieux sed.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date>2018-07-24 12:46:01</wp:post_date>
		<wp:post_date_gmt>2018-07-24 11:46:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sed-ajouter-une-ligne-vide-avant-et-apres-chaque-ligne-de-commentaires</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sed"><![CDATA[Sed]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[199]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1021723855004557312";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/260051904727030";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532432922]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20339622807]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/gtLfVdpjJad]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176227411920]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6427489565845655552]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>grey scale photography of three camels on desert</title>
		<link>http://xavki.blog/pexels-photo-911956/</link>
		<pubDate>Wed, 18 Jul 2018 12:47:14 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-911956.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Danilo Ugaddan on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2018-07-18 13:47:14</wp:post_date>
		<wp:post_date_gmt>2018-07-18 12:47:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-911956</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-911956.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-911956.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-911956.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:359016;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>close up code coding computer</title>
		<link>http://xavki.blog/pexels-photo-374559/</link>
		<pubDate>Thu, 19 Jul 2018 13:26:18 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-374559.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Digital Buggu on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2018-07-19 14:26:18</wp:post_date>
		<wp:post_date_gmt>2018-07-19 13:26:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-374559</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-374559.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-374559.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1733;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-374559.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:264982;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>figure_1</title>
		<link>http://xavki.blog/2018/09/14/linux-grapher-lutilisation-de-la-memoire-machine/figure_1/</link>
		<pubDate>Thu, 19 Jul 2018 13:35:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/figure_1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2018-07-19 14:35:23</wp:post_date>
		<wp:post_date_gmt>2018-07-19 13:35:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>figure_1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/figure_1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/figure_1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:600;s:6:"height";i:600;s:4:"file";s:85:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/figure_1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:56388;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>woman holding laptop beside glass wall</title>
		<link>http://xavki.blog/pexels-photo-1181316/</link>
		<pubDate>Thu, 19 Jul 2018 13:36:34 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-1181316.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Christina Morillo on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2018-07-19 14:36:34</wp:post_date>
		<wp:post_date_gmt>2018-07-19 13:36:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-1181316</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-1181316.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1181316.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1255;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1181316.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:261883;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>photo of person holding h cutout decor</title>
		<link>http://xavki.blog/pexels-photo-968243/</link>
		<pubDate>Thu, 19 Jul 2018 14:07:33 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-968243.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>232</wp:post_id>
		<wp:post_date>2018-07-19 15:07:33</wp:post_date>
		<wp:post_date_gmt>2018-07-19 14:07:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-968243</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-968243.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-968243.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1854;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-968243.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:106638;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>photo of golden gautama buddha</title>
		<link>http://xavki.blog/pexels-photo-937465/</link>
		<pubDate>Thu, 19 Jul 2018 19:59:03 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-937465.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Suraphat Nuea-on on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2018-07-19 20:59:03</wp:post_date>
		<wp:post_date_gmt>2018-07-19 19:59:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-937465</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-937465.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-937465.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-937465.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:139129;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips][Linux] : Infos complètes sur votre distribution sans uname</title>
		<link>http://xavki.blog/2018/07/21/linux-infos-completes-sur-votre-distribution-sans-uname/</link>
		<pubDate>Sat, 21 Jul 2018 20:24:59 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[Uname vous connaissez surement, ce binaire qui vous permet de vous fournir des infos sur votre distribution et votre noyau.

Aujourd'hui, je vous propose une autre manière de faire pour avoir des infos similaires (pas tout à fait).
<pre>cat /etc/*-release
</pre>
Le résultat est assez complet même si vous n'avez pas d'info sur le noyau comme uname -a. Vous avez quelques choses de plus complet concernant la distribution sur laquelle vous êtes :
<pre>22:17:15 - oki @ doki ~ 
└─ $ ▶ cat /etc/*-release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=16.04
DISTRIB_CODENAME=xenial
DISTRIB_DESCRIPTION="Ubuntu 16.04.4 LTS"
NAME="Ubuntu"
VERSION="16.04.4 LTS (Xenial Xerus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 16.04.4 LTS"
VERSION_ID="16.04"
HOME_URL="http://www.ubuntu.com/"
SUPPORT_URL="http://help.ubuntu.com/"
BUG_REPORT_URL="http://bugs.launchpad.net/ubuntu/"
VERSION_CODENAME=xenial
UBUNTU_CODENAME=xenial

</pre>
&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2018-07-21 21:24:59</wp:post_date>
		<wp:post_date_gmt>2018-07-21 20:24:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-infos-completes-sur-votre-distribution-sans-uname</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[199]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1020766639925727233";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/257678424964378";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/Ht8NMkSbPtV]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532204703]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20253303978]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176133584195]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6426532356882079744]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips][Python] : mettre à jour automatiquement tous les packages</title>
		<link>http://xavki.blog/2018/07/22/tipspython-mettre-a-jour-automatiquement-tous-les-packages/</link>
		<pubDate>Sun, 22 Jul 2018 17:39:08 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=241</guid>
		<description></description>
		<content:encoded><![CDATA[Est-ce que l'on est à jour sous Python ? c'est une question que l'on se pose régulièrement pour les packages python accessible via pip.

En une seule commande, vous pouvez rapidement lancer une mise à jour de tous les paquets. Voici comment faire :
<pre>pip freeze --local | awk -F "=" '{print "pip install -U "$1}' | sh
</pre>
Donc :
<ul>
	<li>on liste les paquets accessibles localement via pip avec la commande pip freeze</li>
	<li>ensuite avec un awk on met en forme un pip install -U pour chaque package</li>
	<li>puis on l'exécute en shell (sh)</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date>2018-07-22 18:39:08</wp:post_date>
		<wp:post_date_gmt>2018-07-22 17:39:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tipspython-mettre-a-jour-automatiquement-tous-les-packages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532281151]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20279521579]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1021087282210562048";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/258462288219325";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/hE32ZX17wBy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176163788295]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6426853002786799616]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #4 : bash, factoriel, cut, md5sum, derniers arguments, dcfldd &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.145</wp:comment_author_IP>
			<wp:comment_date>2018-08-25 20:43:39</wp:comment_date>
			<wp:comment_date_gmt>2018-08-25 19:43:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] python &#8211; mettre à jour tous les packages très facilement en une commande [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535226220]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535226221.054799;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>building metal house architecture</title>
		<link>http://xavki.blog/pexels-photo-101808/</link>
		<pubDate>Tue, 24 Jul 2018 07:46:03 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-101808.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by PhotoMIX Ltd. on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>266</wp:post_id>
		<wp:post_date>2018-07-24 08:46:03</wp:post_date>
		<wp:post_date_gmt>2018-07-24 07:46:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-101808</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-101808.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-101808.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-101808.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:125902;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>silhouette photo of a man in a tunnel</title>
		<link>http://xavki.blog/pexels-photo-169978/</link>
		<pubDate>Tue, 24 Jul 2018 08:05:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-169978.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by lalesh aldarwish on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2018-07-24 09:05:43</wp:post_date>
		<wp:post_date_gmt>2018-07-24 08:05:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-169978</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-169978.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-169978.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1234;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-169978.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:169152;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>announcement bulletin empty letter</title>
		<link>http://xavki.blog/pexels-photo-260645/</link>
		<pubDate>Tue, 24 Jul 2018 11:05:36 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-260645.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date>2018-07-24 12:05:36</wp:post_date>
		<wp:post_date_gmt>2018-07-24 11:05:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-260645</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-260645.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-260645.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:975;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-260645.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:125903;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : supprimer les répertoires vides avec find</title>
		<link>http://xavki.blog/2018/07/24/tips-supprimer-les-repertoires-vides-avec-find/</link>
		<pubDate>Tue, 24 Jul 2018 11:21:27 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=275</guid>
		<description></description>
		<content:encoded><![CDATA[On créé et on créé mais on fait pas toujours le ménage. C'est le cas notamment des répertoires. Avec find, vous pouvez rapidement lister les répertoires vides. Attention, vide ne veut pas dire non utilisé mais c'est possible.

Dans un premier temps dressez la liste des répertoires avant d'appliquer la suppression :

<pre>
find . -type d -empty
</pre>

Puis si cela vous convient appliquez la suppression :

<pre>
find . -type d -empty -delete
</pre>

Et si vous voulez simplement ignorer quelques répertoires vous devez utiliser -not -path :

<pre>
find . -type d -empty -not -path "./chemin_vers_répertoire/"
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2018-07-24 12:21:27</wp:post_date>
		<wp:post_date_gmt>2018-07-24 11:21:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-supprimer-les-repertoires-vides-avec-find</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1021717011309764608";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/260031664729054";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532431290]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20338907157]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/Ty6cq7ZwKyY]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176226914820]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6427482722494742528]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>notebook with dollar sign outline</title>
		<link>http://xavki.blog/pexels-photo-8938952/</link>
		<pubDate>Tue, 24 Jul 2018 11:45:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-8938952.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2018-07-24 12:45:41</wp:post_date>
		<wp:post_date_gmt>2018-07-24 11:45:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-8938952</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-8938952.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-8938952.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1134;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-8938952.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:122174;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot from 2018-07-24 14-46-15</title>
		<link>http://xavki.blog/2018/08/28/bash-template-de-script-avec-parsage-arguments/screenshot-from-2018-07-24-14-46-15/</link>
		<pubDate>Tue, 24 Jul 2018 12:47:48 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/screenshot-from-2018-07-24-14-46-15.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2018-07-24 13:47:48</wp:post_date>
		<wp:post_date_gmt>2018-07-24 12:47:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-from-2018-07-24-14-46-15</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>280</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/screenshot-from-2018-07-24-14-46-15.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/screenshot-from-2018-07-24-14-46-15.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:570;s:6:"height";i:525;s:4:"file";s:112:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/screenshot-from-2018-07-24-14-46-15.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:25677;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>color palette colors colours paint</title>
		<link>http://xavki.blog/pexels-photo-259714/</link>
		<pubDate>Tue, 24 Jul 2018 12:48:49 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-259714.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>282</wp:post_id>
		<wp:post_date>2018-07-24 13:48:49</wp:post_date>
		<wp:post_date_gmt>2018-07-24 12:48:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-259714</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-259714.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-259714.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-259714.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:112767;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Git] : afficher le status de tous les dépôts</title>
		<link>http://xavki.blog/2018/07/26/git-afficher-le-status-de-tous-vos-depots/</link>
		<pubDate>Thu, 26 Jul 2018 09:12:26 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=183</guid>
		<description></description>
		<content:encoded><![CDATA[Git c'est bien mais parfois on peut s'y perdre. Comment se rappeler de tous les dépôts utilisés ?

Mieux comment vérifier que vous êtes à jour (up to date) de tous les dépôts. Et encore plus ? ne pas le faire dépôt par dépôt mais bien en une seule fois.

C'est possible tout ça ? OUI

Voici la commande :
<pre>find ~ -name ".git" 2&gt; /dev/null |
sed 's/\/.git/\//g' |
awk '{print "-------------------------\n\033[1;32mGit Repo:\033[0m " $1; system("git --git-dir="$1".git --work-tree="$1" status")}'
</pre>
Donc :
<ul>
	<li>le find pour trouver sur votre home tous les .git</li>
	<li>un sed pour nettoyer le résultat</li>
	<li>et ensuite le awk chaud bouillant pour balancer un git status (au final) sur chacun des dépôts</li>
</ul>
[caption id="attachment_184" align="alignnone" width="975"]<img class="alignnone size-full wp-image-184" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-542347.jpeg" alt="aged aging background bark" width="975" height="1300" /> Photo by Fancycrave.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>183</wp:post_id>
		<wp:post_date>2018-07-26 10:12:26</wp:post_date>
		<wp:post_date_gmt>2018-07-26 09:12:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-afficher-le-status-de-tous-vos-depots</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[185]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1022414522651496448";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/261800877885466";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20409542874]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532597590]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/PVCe2nTrvLh]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176295839080]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6428180233882468352]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : un arbre sans tree avec ls et sed</title>
		<link>http://xavki.blog/2018/07/27/bash-un-arbre-sans-tree-avec-ls-et-sed/</link>
		<pubDate>Fri, 27 Jul 2018 09:25:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=188</guid>
		<description></description>
		<content:encoded><![CDATA[Tree est un bon outil pour pouvoir lister les directories et avoir une bonne vision d'ensemble grâce à la mise en forme d'arbre. Mais tree n'est pas installé sur toutes les machines et on ne peut pas toujours le faire ou on ne veut pas s'amuser à le faire (sur des noeuds distants...). Bref on préfère se passer de tree parfois.

Vous vous doutez bien que l'on peut le faire à coup de ls -R. Mais il faut encore le remettre en forme. Alors si on vous le propose en oneline vos prenez ? moi oui.

Voici donc la ligne de commande correspondante :
<pre>ls -R | grep ":$" |
sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
</pre>
Donc :
<ul>
	<li>un ls option récursive</li>
	<li>ensuite un grep pour ne récupérer que les lignes se terminant par ":"</li>
	<li>puis un sed pour faire du nettoyage et de la mise en forme (faire les branches de l'arbre)</li>
</ul>
[caption id="attachment_media-354" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-189" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-413268.jpeg" alt="abstract alone art black" width="1880" height="1253" /> Photo by Raine Nectar on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2018-07-27 10:25:07</wp:post_date>
		<wp:post_date_gmt>2018-07-27 09:25:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-un-arbre-sans-tree-avec-ls-et-sed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[189]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1022789924658077696";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/262719694460251";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20447108585]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532687093]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/ND1R3S9MqkH]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176332839510]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6428555638078480384]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : Découvrir le module collections et sa classe counter</title>
		<link>http://xavki.blog/2018/07/25/python-decouvrir-le-module-collections-et-sa-classe-counter/</link>
		<pubDate>Wed, 25 Jul 2018 09:10:14 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[Cet article s'adresse plus au novice de Python et c'est une bonne entrée en matière pour découvrir le module collections. Sa classe counter a tendance à tomber dans les oubliettes et pourtant elle est bien pratique.

Brève démonstration à partager autour dans la sphère des newbies de Python :
<pre>&gt;&gt;&gt; import collections
&gt;&gt;&gt; moncompteur = collections.Counter('saluttoutlemonde')
&gt;&gt;&gt; moncompteur
Counter({'t': 3, 'o': 2, 'e': 2, 'u': 2, 'l': 2, 's': 1, 'n': 1, 'm': 1, 'a': 1, 'd': 1})
&gt;&gt;&gt; moncompteur.most_common(2)
[('t', 3), ('o', 2)]
</pre>
Donc :
<ul>
	<li>on lance python3</li>
	<li>on importe le module collections</li>
	<li>on complète la variable moncompteur avec la classe Counter</li>
	<li>on affiche le contenu de  notre dictionnaire</li>
	<li>on utilise par exemple la fonction most_common (les lettres les plus communes, en l'occurence les 2 plus communes)</li>
</ul>
Voilà simple et efficace.

[caption id="attachment_media-109" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-203" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-11816711.jpeg" alt="python book" width="1880" height="1255" /> Photo by Christina Morillo on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2018-07-25 10:10:14</wp:post_date>
		<wp:post_date_gmt>2018-07-25 09:10:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-decouvrir-le-module-collections-et-sa-classe-counter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[203]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1022046480478162949";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/260894797976074";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532509842]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20372134115]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/5RgNAmMAtS7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176260016895]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6427812202576642048]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>beige wooden chest trunk on white surface</title>
		<link>http://xavki.blog/pexels-photo-220994/</link>
		<pubDate>Wed, 25 Jul 2018 11:52:04 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-220994.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/photo/beige-wooden-chest-trunk-on-white-surface-220994/">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2018-07-25 12:52:04</wp:post_date>
		<wp:post_date_gmt>2018-07-25 11:52:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-220994</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-220994.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-220994.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-220994.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:68262;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vignette_docker</title>
		<link>http://xavki.blog/?attachment_id=293</link>
		<pubDate>Wed, 25 Jul 2018 13:05:28 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/vignette_docker.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2018-07-25 14:05:28</wp:post_date>
		<wp:post_date_gmt>2018-07-25 13:05:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vignette_docker</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>292</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/vignette_docker.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/vignette_docker.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:702;s:6:"height";i:336;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/vignette_docker.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}s:8:"filesize";i:69397;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>images</title>
		<link>http://xavki.blog/2018/08/24/bash-calculer-frequences-erreurs-apache-logs-seo/images/</link>
		<pubDate>Thu, 26 Jul 2018 07:53:38 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/images.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2018-07-26 08:53:38</wp:post_date>
		<wp:post_date_gmt>2018-07-26 07:53:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>images</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>295</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/images.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/images.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:348;s:6:"height";i:145;s:4:"file";s:84:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/images.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:5669;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : iptables les principales commandes à retenir pour votre firewall</title>
		<link>http://xavki.blog/2018/07/29/linux-iptables-les-principales-commandes-a-retenir-pour-votre-firewall/</link>
		<pubDate>Sun, 29 Jul 2018 15:33:12 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[La sécurité revient à la mode en ce moment sur les machines. ipTables est un des principaux firewall sur Linux. Voici quelques commandes essentielles à connaître :

1- Lister les règles de filtrage (entrées ou sorties)
<pre>iptables -L -n -v
</pre>
Un classique qui permet de lister les règles aussi bien sortantes que entrantes. L pour lister, n pour afficher les ip numériques et v pour verbeux.

2- Supprimer toutes les règles (pas très conseillé)
<pre>iptables -F
</pre>
F : flush toutes les règles iptables

3- Lister avec les numéros de ligne
<pre>iptables -L --line-number
</pre>
Une bonne manière pour faciliter la lecture.

4- Supprimer la règle par son numéro de ligne
<pre>iptables -D INPUT 4
</pre>
On supprime la règles entrante numéro 4. Attention, les numéros sont identiques pour entrants et sortants.

5- Ajout d'une règle ACCEPT entrante
<pre>iptables -A INPUT -s 172.20.10.5 -j ACCEPT
</pre>
-A : pour ajouter une règle
-s : ip ou masque à appliquer
-j : type d'action
ACCEPT : autoriser

6- Drop sur l'interface publique
<pre>iptables -A INPUT -i eth1 -s 193.180.0.0/24 -j DROP
</pre>
Sous réserve que eth1 soit votre interface publique, on drop tout le lan ayant pour masque 193.180.0.0. (avec le slash 24)

Pour un port particulier, on peut ajouter --dport et le numéro du port

7- Sauvegarder les règles
<pre>service iptables save
</pre>
A réaliser pour que les règles soient permanentes.

7- Pour logger spécifiquement certains paquets
<pre>iptables -A INPUT -i eth1 -s 193.180.0.0/24 -j LOG --log-prefix "DROP de 193.180: "
</pre>
8- Limiter le nombre de connexions en parallèle
<pre>-m connlimit --connlimit-above 3
</pre>
Limite à 3 connexions (en spécifiant le port c'est préférable).

9- Faire de la redirection de port
<pre>--dport 80 -j REDIRECT --to-ports 8080
</pre>
On redirige le port 80 en 8080

[caption id="attachment_media-14" align="alignnone" width="1880"]<img class="alignnone size-full wp-image-301" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-143580.jpeg" alt="silhouette of a man in window" width="1880" height="1253" /> Photo by Donald Tong on <a href="https://www.pexels.com/photo/silhouette-of-a-man-in-window-143580/" rel="nofollow">Pexels.com</a>[/caption]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2018-07-29 16:33:12</wp:post_date>
		<wp:post_date_gmt>2018-07-29 15:33:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-iptables-les-principales-commandes-a-retenir-pour-votre-firewall</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[301]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1023592303238234113";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/264831967582357";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20519124051]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532878396]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/dJ7tD5ySNkz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176409700275]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6429358016667095040]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #5 : vim, apropos, glances, gs, nl, sed /pattern/, timeout &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/27/top-commandes-linux-5-vim/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.249</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 08:50:47</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 07:50:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] les principales commandes à retenir sur ipTables pour commencer à mettre en place votre parefeu [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535356248]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535356249.46851;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>silhouette of a man in window</title>
		<link>http://xavki.blog/pexels-photo-143580/</link>
		<pubDate>Sun, 29 Jul 2018 15:30:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-143580.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Donald Tong on <a href="https://www.pexels.com/photo/silhouette-of-a-man-in-window-143580/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>301</wp:post_id>
		<wp:post_date>2018-07-29 16:30:23</wp:post_date>
		<wp:post_date_gmt>2018-07-29 15:30:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-143580</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-143580.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-143580.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-143580.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:90556;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Commandes linux en vrac #1</title>
		<link>http://xavki.blog/2018/07/30/commandes-linux-en-vrac-1/</link>
		<pubDate>Mon, 30 Jul 2018 09:53:09 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[# Créer une ligne de commentaires dans votre historique
<pre>comment() { echo "" &gt;/dev/null; }</pre>
# Se rendre dans un répertoire et afficher son contenu aussitôt
<pre>ct() {cd $1; tree -L 2}</pre>
# Etendre son historique à 10000 lignes
<pre>export HISTSIZE=10000</pre>
# Lancer la dernière commande en sudo
<pre>sudo !!</pre>
#Changer l'éditeur par défaut
<pre>update-alternatives --config editor</pre>
#Ouvrir rapidement un nouveau fichier
<pre>Ctrl+x +e</pre>
# Lancer une commande à minuit
<pre>echo "ls -larth" | at midnight</pre>
# Monter un filesystem derrière un ssh
<pre>sshfs user@serveur:/rep/source/ /rep/dest/</pre>
# Fermer votre shell et laisser tous les processus tourner
<pre>disown -a &amp;&amp; exit</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2018-07-30 10:53:09</wp:post_date>
		<wp:post_date_gmt>2018-07-30 09:53:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>commandes-linux-en-vrac-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[305]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20543829256]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532944389]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1023869101381365760";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/265550677510486";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/1mccFFeu4iS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176439489835]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6429634823995822080]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>man riding a yellow forklift with boxes</title>
		<link>http://xavki.blog/pexels-photo-1267324/</link>
		<pubDate>Sun, 29 Jul 2018 16:11:47 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-1267324.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by ELEVATE on <a href="https://www.pexels.com/photo/man-riding-a-yellow-forklift-with-boxes-1267324/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>305</wp:post_id>
		<wp:post_date>2018-07-29 17:11:47</wp:post_date>
		<wp:post_date_gmt>2018-07-29 16:11:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-1267324</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-1267324.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1267324.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1254;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-1267324.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:326463;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Databases</title>
		<link>http://xavki.blog/databases/</link>
		<pubDate>Sun, 29 Jul 2018 16:56:36 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?page_id=308</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Principes &amp; généralités :</h2>
<ul>
	<li><a href="https://vladmihalcea.com/how-does-mvcc-multi-version-concurrency-control-work/">MVCC</a> : multi version concurrency control ou comment les moteurs de bases de données font pour gérer la concurrence entre les transactions (un select durant un update...)</li>
</ul>
<h2>Les tips ORACLE</h2>
Suivez <a href="https://xavki.blog/databases/tutos-admin-de-base-oracle/">cette page</a> pour découvrir la formation vidéo pour devenir administrateur d'une base de données oracle (source : les teachers du web).
<ul>
	<li><a href="https://xavki.blog/databases/tutos-admin-de-base-oracle/">Devenir administrateur de base oracle</a> : attention ceci est pour les débutants, il s'agit d'administrer une base (non DBA)</li>
	<li><a href="https://xavki.wordpress.com/2018/06/19/oracle-utilisation-tablepace-temporaire/">Tablespace temporaire</a> : qu'est-ce que c'est  et comment suivre son utilisation ?</li>
	<li><a href="https://xavki.wordpress.com/2018/06/26/oracle-processus-instance/">Suivre les processus d'une instance</a> : comment suivre les process et indirectement les connexions à une instance</li>
	<li><a href="https://xavki.blog/2018/09/27/oracle-comment-realiser-un-explain-plan/">Comment réaliser un explain plan ?</a></li>
	<li><a href="https://xavki.wordpress.com/2018/07/03/oracle-reconstruire-index-schema/">Comment rebuilder tous les index d'un schéma ?</a></li>
	<li><a href="https://xavki.blog/2018/08/14/oracle-recuperer-les-ddl-ou-le-sql-des-index-dun-schema/">Récupérer les sql d'un index</a> : comment récupérer les ddl d'un index pour le recréer</li>
	<li><a href="https://xavki.wordpress.com/2018/07/05/oracle-supprimer-user-schema-et-tablespace/">Comment supprimer des schémas facilement ? des tablespaces ?</a></li>
	<li><a href="https://xavki.wordpress.com/2018/07/06/oracle-killer-les-sessions-dun-user-deconnecter/">Déconnecter ou killer les sessions d'un schéma/user ?</a></li>
	<li><a href="https://xavki.blog/2018/08/08/oracle-lister-les-synonymes-et-connaitre-le-owner-et-la-source/">Lister les synonymes</a> : liste de synonymes, de leurs owners et leurs sources</li>
	<li><a href="https://www.youtube.com/watch?v=WhuufIeGefE">Comment analyser un explain plan ?</a> : Une très bonne vidéo de Maria Colgan, experte oracle</li>
</ul>
<h4 style="text-align:right;">Liens Oracle sympas</h4>
<ul>
	<li><a href="https://oracle-base.com/articles/sql/articles-sql#getting-started">Oracle-base.com</a> : des articles sur les évolutions d'oracle depuis la 9i</li>
	<li><a href="https://www.youtube.com/channel/UCpJpLMRm452kVcie3RpINPw">Youtube PL/SQL</a> :  pour développeurs oracle</li>
	<li><a href="https://www.youtube.com/channel/UCVN7PnJnuKQ65QLmWjFvhiw">Youtube dba oracle</a> : des explications simples sur le fonctionnement du moteur oracle(de débutant à expert)</li>
	<li><a href="https://richardfoote.wordpress.com/">Indexation oracle</a> : du pointu sur l'indexation pour oracle</li>
</ul>
<h2>Les tips PostgreSQL</h2>
<ul>
	<li><a href="https://xavki.blog/2018/07/31/postgresql-changer-des-tables-de-schemas/">Tables/schéma</a> : changer les tables de schéma</li>
	<li><a href="https://xavki.blog/2018/08/30/postgresql-appliquer-un-grant-a-toutes-les-sequences-dune-base/">Granter les séquences</a> d'une base</li>
</ul>
<h4 style="text-align:right;">Liens PostgreSql sympas</h4>
<ul>
	<li><a href="https://www.postgresql.fr/">Officiel Postgresql fr</a> : le site francophone qui vou permettra de suivre l'activité de la communauté</li>
</ul>
<h2>Les tips Mysql MariaDB</h2>
<ul>
	<li><a href="https://xavki.blog/databases/tutos-admin-de-base-mysql/">Devenir administrateur de base mysql</a> : une formation pour les débutants pour administrer une base et installer un moteur (non DBA)</li>
	<li><a href="https://xavki.blog/2018/08/01/mysql-mariadb-reinitialiser-le-mot-de-passe-root-faut-pas-le-dire/">Mot de passe root</a> : changer le mot de passe root après oubli</li>
	<li><a href="https://xavki.blog/2018/09/20/mysql-diagnostiquer-optimiser-base-et-moteur-mysqltuner/">MysqlTuner</a> : optimiser et tuner le moteur mysql</li>
	<li><a href="https://xavki.blog/2018/07/17/mysql-vider-toutes-les-tables-dune-base/">Truncate tables</a> : vider toutes les tables</li>
	<li><a href="https://xavki.blog/2018/06/14/sauvegarde-mysql-de-conteneurs-docker/">Spécial Docker sauvegarde mysql</a> : petit script de sauvegarde de bases mysql portées par des conteneurs docker</li>
</ul>
<h4 style="text-align:right;">Liens Mysql sympas :</h4>
<ul>
	<li><a href="https://github.com/major/MySQLTuner-perl/blob/master/README.fr.md">MySql Tuner</a> : outil en perl permettant d'optimiser votre moteur mysql ou mariadb</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>308</wp:post_id>
		<wp:post_date>2018-07-29 17:56:36</wp:post_date>
		<wp:post_date_gmt>2018-07-29 16:56:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>databases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_42ef4041be143e8349792bd8d11078fb</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_33c1cc0fab95e5c5a2f11dacbea04c4b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/07/29/309/</link>
		<pubDate>Sun, 29 Jul 2018 16:56:36 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2018/07/29/309/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date>2018-07-29 17:56:36</wp:post_date>
		<wp:post_date_gmt>2018-07-29 16:56:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>309</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[308]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>python-logo</title>
		<link>http://xavki.blog/2018/08/29/python-lire-et-ecrire-facilement-dans-un-fichier-avec-pathlib/python-logo/</link>
		<pubDate>Sun, 29 Jul 2018 19:49:46 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/python-logo.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2018-07-29 20:49:46</wp:post_date>
		<wp:post_date_gmt>2018-07-29 19:49:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>python-logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>313</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/python-logo.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/python-logo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:680;s:6:"height";i:459;s:4:"file";s:88:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/python-logo.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:46623;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>python</title>
		<link>http://xavki.blog/2018/08/29/python-lire-et-ecrire-facilement-dans-un-fichier-avec-pathlib/python/</link>
		<pubDate>Sun, 29 Jul 2018 19:49:52 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/python.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>315</wp:post_id>
		<wp:post_date>2018-07-29 20:49:52</wp:post_date>
		<wp:post_date_gmt>2018-07-29 19:49:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>python</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>313</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/python.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/python.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:480;s:6:"height";i:271;s:4:"file";s:83:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/python.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:10637;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>images</title>
		<link>http://xavki.blog/?attachment_id=318</link>
		<pubDate>Sun, 29 Jul 2018 20:23:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/images.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>318</wp:post_id>
		<wp:post_date>2018-07-29 21:23:43</wp:post_date>
		<wp:post_date_gmt>2018-07-29 20:23:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>images-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>317</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/images.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/images.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:225;s:6:"height";i:225;s:4:"file";s:83:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/images.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:1714;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Extra] - L&#039;intelligence artificielle bat l&#039;homme dans un concours de diagnostic du cancer du cerveau !</title>
		<link>http://xavki.blog/2018/07/30/extra-lintelligence-artificielle-bat-lhomme-dans-un-concours-de-diagnostic-du-cancer-du-cerveau/</link>
		<pubDate>Mon, 30 Jul 2018 09:40:25 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=328</guid>
		<description></description>
		<content:encoded><![CDATA[Impressionant !
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">This AI system has scored 2-0 against a group of Chinese elite doctors in a tumour diagnosis competition <a href="https://t.co/71OK3xJiME">pic.twitter.com/71OK3xJiME</a></p>&mdash; TRT World (@trtworld) <a href="https://twitter.com/trtworld/status/1014841327454904320?ref_src=twsrc%5Etfw">5 juillet 2018</a></blockquote>
<a href="https://platform.twitter.com/widgets.js">https://platform.twitter.com/widgets.js</a>

 ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>328</wp:post_id>
		<wp:post_date>2018-07-30 10:40:25</wp:post_date>
		<wp:post_date_gmt>2018-07-30 09:40:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>extra-lintelligence-artificielle-bat-lhomme-dans-un-concours-de-diagnostic-du-cancer-du-cerveau</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="extrageek"><![CDATA[Extrageek]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[329]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20543519485]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1532943626]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1023865897646211074";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/265543137511240";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/99wwK4dF7Yx]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176439252865]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6429631610521415681]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person holding string lights photo</title>
		<link>http://xavki.blog/pexels-photo-818563/</link>
		<pubDate>Mon, 30 Jul 2018 09:39:19 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-818563.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by David Cassolato on <a href="https://www.pexels.com/photo/person-holding-string-lights-photo-818563/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>329</wp:post_id>
		<wp:post_date>2018-07-30 10:39:19</wp:post_date>
		<wp:post_date_gmt>2018-07-30 09:39:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-818563</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-818563.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-818563.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1058;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-818563.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:123343;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>accident action adult blaze</title>
		<link>http://xavki.blog/pexels-photo-280076/</link>
		<pubDate>Mon, 30 Jul 2018 09:43:21 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-280076.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/photo/accident-action-adult-blaze-280076/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date>2018-07-30 10:43:21</wp:post_date>
		<wp:post_date_gmt>2018-07-30 09:43:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-280076</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-280076.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-280076.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:981;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-280076.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:154331;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Firefox-on-Fire-TV-announcement-1400x770</title>
		<link>http://xavki.blog/2018/10/02/tips-booster-votre-firefox/firefox-on-fire-tv-announcement-1400x770/</link>
		<pubDate>Mon, 30 Jul 2018 13:35:16 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/firefox-on-fire-tv-announcement-1400x770.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2018-07-30 14:35:16</wp:post_date>
		<wp:post_date_gmt>2018-07-30 13:35:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>firefox-on-fire-tv-announcement-1400x770</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>324</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/firefox-on-fire-tv-announcement-1400x770.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/firefox-on-fire-tv-announcement-1400x770.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1400;s:6:"height";i:770;s:4:"file";s:117:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/firefox-on-fire-tv-announcement-1400x770.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:361193;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/07/30/341/</link>
		<pubDate>Mon, 30 Jul 2018 13:50:30 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2018/07/30/341/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>341</wp:post_id>
		<wp:post_date>2018-07-30 14:50:30</wp:post_date>
		<wp:post_date_gmt>2018-07-30 13:50:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>341</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[340]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Postgresql] : changer des tables de schéma</title>
		<link>http://xavki.blog/2018/07/31/postgresql-changer-des-tables-de-schemas/</link>
		<pubDate>Tue, 31 Jul 2018 08:40:11 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=215</guid>
		<description></description>
		<content:encoded><![CDATA[Les imports de bases se passent plus ou moins comme l'on veut. Par exemple, si on restaure des datas dans une base différente ou si on créé la base morceau par morceau (structure, user...), vous pouvez vous retrouver avec les tables de votre applis situées dans le schéma "public". Pas forcément ce que l'on recherche. Bien souvent on créé un schéma spécifique pour chaque application.

Comment réaffecter toutes les tables du schéma "public" dans un autre schéma ?

Pas très compliqué, pour une table :
<pre>ALTER TABLE public.nommatable SET SCHEMA monschema; </pre>Pour une seule table pas de problème. Mais pour toutes les tables ?
<pre>DO $$ DECLARE 	row record; BEGIN 	FOR row IN SELECT tablename FROM pg_tables WHERE schemaname = 'public' -- and other conditions, if needed 	LOOP 		EXECUTE 'ALTER TABLE public.' || quote_ident(row.tablename) || ' SET SCHEMA monschema;'; 	END LOOP; END; $$;</pre>

[caption id="attachment_216" align="alignnone" width="1880" height="1303" alt="animal big elephant endangered"]<img src="https://xavki.files.wordpress.com/2018/07/pexels-photo-133394.jpeg?w=1880" class="alignnone size-full wp-image-216" height="1303" alt="animal big elephant endangered" width="1880"> Photo by Anthony on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

Cette fonction/procédure permet donc de lister toutes les tables puis de lancer une boucle sur celle-ci en faisant le ALTER TABLE SET SCHEMA.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>215</wp:post_id>
		<wp:post_date>2018-07-31 09:40:11</wp:post_date>
		<wp:post_date_gmt>2018-07-31 08:40:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>postgresql-changer-des-tables-de-schemas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="postgresql"><![CDATA[Postgresql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[216]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1024225439546585089";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/266535054078715";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20579666284]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533029347]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/GWBnCxS3TKt]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176476292220]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6429991150576246784]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Mysql] [Mariadb] : réinitialiser le mot de passe root (faut pas le dire)</title>
		<link>http://xavki.blog/2018/08/01/mysql-mariadb-reinitialiser-le-mot-de-passe-root-faut-pas-le-dire/</link>
		<pubDate>Wed, 01 Aug 2018 08:56:44 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[Les DBA ne sont pas des personnes parfaites, au même titre que d'autres. Cela arrive de perdre un mot de passe et même si le mot de passe est celui du user root. Bon c'est quand même bien embêtant je l'avoue, ça fait pas très pro.

Réinitialiser le mot de passe est souvent la seule solution. Voici une des solutions possible :
<pre>sudo /etc/init.d/mysql stop

sudo mysqld_safe --skip-grant-tables &amp;

mysql&gt; use mysql;

mysql&gt; update user set authentication_string=password('monnouveaumotdepasse') where user='root';
</pre>
[caption id="attachment_media-441" align="alignnone" width="867"]<img class="alignnone size-full wp-image-219" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-193349.jpeg" alt="hacker screen" width="867" height="1300" /> Photo by Markus Spiske freeforcommercialuse.net on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

Une autre solution en passant par systemd :
<pre># on relance mysql sans les GRANTS sur les tables
systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"
systemctl restart mysql

# puis on set le nouveau mot de passe
UPDATE mysql.user SET password=PASSWORD('monouveaumotdepasse') WHERE User='root' AND Host = 'localhost';
FLUSH PRIVILEGES;

#et surtout sinon tu es mort tu remets les permissions en place merci !
systemctl unset-environment MYSQLD_OPTS
systemctl restart mysql
</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2018-08-01 09:56:44</wp:post_date>
		<wp:post_date_gmt>2018-08-01 08:56:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-mariadb-reinitialiser-le-mot-de-passe-root-faut-pas-le-dire</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[219]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1024590324285562885";}s:8:"facebook";a:1:{i:20642923;s:36:"https://facebook.com/267519437313610";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533116341]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20616269402]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/JVyNRbmXWFo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176512848330]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6430356039018835969]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Perl] : passer une simple regex</title>
		<link>http://xavki.blog/2018/08/02/perl-passer-une-simple-regex/</link>
		<pubDate>Thu, 02 Aug 2018 12:44:58 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=221</guid>
		<description></description>
		<content:encoded><![CDATA[Perl est super pratique pour fair en une ligne ce que d'autres mettraient plusieurs ligne à faire. En plus Perl se comprend relativement bien je le trouve assez intuitif.

Comment appliquer une regex en Perl et afficher directement le résultat ?
<pre>echo "12:30:58" | perl -nle '$_ =~ /(..):(..):(..)/ ; print "Heures:$1\nMinutes:$2\nSecondes:$3"'
</pre>
Résultat :
<pre>Heures:12
Minutes:30
Secondes:58
</pre>
Donc :
<ul>
	<li>$_ : permet de récupérer l'entrée standard</li>
	<li>=~ / / : permet d'appliquer une regex</li>
	<li>() : parenthèses capturantes</li>
	<li>$1 : première parenthèse capturante</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date>2018-08-02 13:44:58</wp:post_date>
		<wp:post_date_gmt>2018-08-02 12:44:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-passer-une-simple-regex</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[222]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1025001535477039105";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20658763815]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533214382]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/CgZcbdnA8RV]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176552147545]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6430767251636383744]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";s:1:"*";s:11:"x-app-usage";s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";s:25:"strict-transport-security";s:25:"max-age=15552000; preload";s:13:"x-fb-trace-id";s:11:"B0suPsCplwQ";s:8:"x-fb-rev";s:7:"4167511";s:12:"content-type";s:31:"application/json; charset=UTF-8";s:20:"facebook-api-version";s:4:"v2.7";s:13:"cache-control";s:8:"no-store";s:6:"pragma";s:8:"no-cache";s:7:"expires";s:29:"Sat, 01 Jan 2000 00:00:00 GMT";s:16:"www-authenticate";s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";s:4:"vary";s:15:"Accept-Encoding";s:16:"content-encoding";s:4:"gzip";s:10:"x-fb-debug";s:88:"293QmVy3FuQICy9ubaS+OFOhslSWziLf3oUCe+RaHgPbdnMjpcD62B28wDY5lPCd0lRU2uPLrCcI8ox9uGSqxA==";s:4:"date";s:29:"Thu, 02 Aug 2018 12:53:11 GMT";s:14:"content-length";s:3:"195";}}s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"B0suPsCplwQ"}}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:0:{}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"B0suPsCplwQ"}}";s:3:"raw";s:1038:"HTTP/1.1 403 Forbidden
Access-Control-Allow-Origin: *
x-app-usage: {"call_count":0,"total_cputime":0,"total_time":0}
Strict-Transport-Security: max-age=15552000; preload
x-fb-trace-id: B0suPsCplwQ
x-fb-rev: 4167511
Content-Type: application/json; charset=UTF-8
facebook-api-version: v2.7
Cache-Control: no-store
Pragma: no-cache
Expires: Sat, 01 Jan 2000 00:00:00 GMT
WWW-Authenticate: OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"
Vary: Accept-Encoding
Content-Encoding: gzip
X-FB-Debug: 293QmVy3FuQICy9ubaS+OFOhslSWziLf3oUCe+RaHgPbdnMjpcD62B28wDY5lPCd0lRU2uPLrCcI8ox9uGSqxA==
Date: Thu, 02 Aug 2018 12:53:11 GMT
Connection: close
Content-Length: 195

{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"B0suPsCplwQ"}}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";a:1:{i:0;s:1:"*";}s:11:"x-app-usage";a:1:{i:0;s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";}s:25:"strict-transport-security";a:1:{i:0;s:25:"max-age=15552000; preload";}s:13:"x-fb-trace-id";a:1:{i:0;s:11:"B0suPsCplwQ";}s:8:"x-fb-rev";a:1:{i:0;s:7:"4167511";}s:12:"content-type";a:1:{i:0;s:31:"application/json; charset=UTF-8";}s:20:"facebook-api-version";a:1:{i:0;s:4:"v2.7";}s:13:"cache-control";a:1:{i:0;s:8:"no-store";}s:6:"pragma";a:1:{i:0;s:8:"no-cache";}s:7:"expires";a:1:{i:0;s:29:"Sat, 01 Jan 2000 00:00:00 GMT";}s:16:"www-authenticate";a:1:{i:0;s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";}s:4:"vary";a:1:{i:0;s:15:"Accept-Encoding";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:10:"x-fb-debug";a:1:{i:0;s:88:"293QmVy3FuQICy9ubaS+OFOhslSWziLf3oUCe+RaHgPbdnMjpcD62B28wDY5lPCd0lRU2uPLrCcI8ox9uGSqxA==";}s:4:"date";a:1:{i:0;s:29:"Thu, 02 Aug 2018 12:53:11 GMT";}s:14:"content-length";a:1:{i:0;s:3:"195";}}}s:11:"status_code";i:403;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:123:"https://graph.facebook.com/v2.2/me/publish?appsecret_proof=66ba5d3c7d9eb1554fcd226a07d3c37d86d4ae1933038df8a06d0c8e0378ebec";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:0:{}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : archiver et historiser son historique de commandes</title>
		<link>http://xavki.blog/2018/08/03/bash-archiver-et-historiser-son-historique-de-commandes/</link>
		<pubDate>Fri, 03 Aug 2018 11:22:17 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[Quand on a une petite tête il vaut mieux savoir s'organiser et faire en sorte de retrouver les choses. Pour cela il existe l'historique de votre bash accessible via "history" ou encore ctrl+r pour la recherche de commande.

C'est déjà pas mal mais parfois un peu court même en augmentant la taille de l'historique via :
<pre>export HISTSIZE=10000 </pre>Dans mon cas ma tête est tellement petite que j'ai mis en place un système d'archivage de l'historique bash. Comme ce n'est pas complqiué ça coûte rien et je vous rassure ça ne prend pas trop de place.

J'ai donc créé un répertoire dans mon home qui s'intitule ".logs" et on y trouve :
<pre>15:11:57 - oki @ doki ~  └─ $ ▶ tree .logs .logs ├── bash-history-04-25.log ├── bash-history-18-04.log ├── bash-history-18-05.log ├── bash-history-18-06.log └── bash-history-18-07.log </pre>Un fichier par mois avec toutes les commandes passées (on peut aussi filtrer les commandes pour ne pas prendre en compte les LS ou autres CD mais je trouve que c'est pas l'idée).

Pour faire cela j'ai ajouté dans mon .bash_profile les lignes ci-dessous :
<pre>PROMPT_COMMAND='if [ "$(id -u)" -ne 0 ];\ then echo "$(date "+%Y-%m-%d.%H:%M:%S")\ $(pwd) $(history 1)" &gt;&gt; ~/.logs/bash-history-$(date "+%y-%m").log; fi' </pre>Donc :
<ul>
 	<li>on créé une commande qui si uid ne vaut pas 0 s'exécute</li>
 	<li>on commance par un echo de la date</li>
 	<li>puis le répertoire courant</li>
 	<li>puis la commande passée</li>
 	<li>et on édite tout cela dans le fichier de logs</li>
</ul>

[caption id="attachment_225" align="alignnone" width="1880" height="1410" alt="close up code coding computer"]<img src="https://xavki.files.wordpress.com/2018/07/pexels-photo-374559.jpeg?w=1880" class="alignnone wp-image-225 size-full" height="1410" alt="close up code coding computer" width="1880"> Photo by Digital Buggu on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2018-08-03 12:22:17</wp:post_date>
		<wp:post_date_gmt>2018-08-03 11:22:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-archiver-et-historiser-son-historique-de-commandes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[225]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20692551681]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533295341]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1025341106526081024";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/akuAmtmXyRz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176585809775]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6431106819019538432]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";s:1:"*";s:11:"x-app-usage";s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";s:25:"strict-transport-security";s:25:"max-age=15552000; preload";s:13:"x-fb-trace-id";s:11:"GHx410X0ILU";s:8:"x-fb-rev";s:7:"4172455";s:12:"content-type";s:31:"application/json; charset=UTF-8";s:20:"facebook-api-version";s:4:"v2.7";s:13:"cache-control";s:8:"no-store";s:6:"pragma";s:8:"no-cache";s:7:"expires";s:29:"Sat, 01 Jan 2000 00:00:00 GMT";s:16:"www-authenticate";s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";s:4:"vary";s:15:"Accept-Encoding";s:16:"content-encoding";s:4:"gzip";s:10:"x-fb-debug";s:88:"8GPRTdi6gc9nudYzvdCRY/mkfmDrC39ku9nD+AMJnbHDCpCQtEKDfq3IeuvLySPdKIZMaMIjUhjZClL9laXECg==";s:4:"date";s:29:"Fri, 03 Aug 2018 11:22:30 GMT";s:14:"content-length";s:3:"199";}}s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"GHx410X0ILU"}}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:0:{}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"GHx410X0ILU"}}";s:3:"raw";s:1038:"HTTP/1.1 403 Forbidden
Access-Control-Allow-Origin: *
x-app-usage: {"call_count":0,"total_cputime":0,"total_time":0}
Strict-Transport-Security: max-age=15552000; preload
x-fb-trace-id: GHx410X0ILU
x-fb-rev: 4172455
Content-Type: application/json; charset=UTF-8
facebook-api-version: v2.7
Cache-Control: no-store
Pragma: no-cache
Expires: Sat, 01 Jan 2000 00:00:00 GMT
WWW-Authenticate: OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"
Vary: Accept-Encoding
Content-Encoding: gzip
X-FB-Debug: 8GPRTdi6gc9nudYzvdCRY/mkfmDrC39ku9nD+AMJnbHDCpCQtEKDfq3IeuvLySPdKIZMaMIjUhjZClL9laXECg==
Date: Fri, 03 Aug 2018 11:22:30 GMT
Connection: close
Content-Length: 199

{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"GHx410X0ILU"}}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";a:1:{i:0;s:1:"*";}s:11:"x-app-usage";a:1:{i:0;s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";}s:25:"strict-transport-security";a:1:{i:0;s:25:"max-age=15552000; preload";}s:13:"x-fb-trace-id";a:1:{i:0;s:11:"GHx410X0ILU";}s:8:"x-fb-rev";a:1:{i:0;s:7:"4172455";}s:12:"content-type";a:1:{i:0;s:31:"application/json; charset=UTF-8";}s:20:"facebook-api-version";a:1:{i:0;s:4:"v2.7";}s:13:"cache-control";a:1:{i:0;s:8:"no-store";}s:6:"pragma";a:1:{i:0;s:8:"no-cache";}s:7:"expires";a:1:{i:0;s:29:"Sat, 01 Jan 2000 00:00:00 GMT";}s:16:"www-authenticate";a:1:{i:0;s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";}s:4:"vary";a:1:{i:0;s:15:"Accept-Encoding";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:10:"x-fb-debug";a:1:{i:0;s:88:"8GPRTdi6gc9nudYzvdCRY/mkfmDrC39ku9nD+AMJnbHDCpCQtEKDfq3IeuvLySPdKIZMaMIjUhjZClL9laXECg==";}s:4:"date";a:1:{i:0;s:29:"Fri, 03 Aug 2018 11:22:30 GMT";}s:14:"content-length";a:1:{i:0;s:3:"199";}}}s:11:"status_code";i:403;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:123:"https://graph.facebook.com/v2.2/me/publish?appsecret_proof=66ba5d3c7d9eb1554fcd226a07d3c37d86d4ae1933038df8a06d0c8e0378ebec";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:0:{}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #4 : bash, factoriel, cut, md5sum, derniers arguments, dcfldd &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.145</wp:comment_author_IP>
			<wp:comment_date>2018-08-25 20:43:29</wp:comment_date>
			<wp:comment_date_gmt>2018-08-25 19:43:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] loguer son historique de commande au fur et à mesure des mois pour ne jamais les perdre [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535226211]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535226211.912118;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Émission #158 du 23 août 2018 – Stupidification irritante &#8211; blogueLinux.ca]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.bloguelinux.ca/emission-158-du-23-aout-2018-stupidification-irritante/</wp:comment_author_url>
			<wp:comment_author_IP>162.243.107.170</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 23:52:50</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 22:52:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] https://xavki.blog/2018/08/03/bash-archiver-et-historiser-son-historique-de-commandes/ [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535410371.543918;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535441202]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535415671.417027;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535441203.148185;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #7 : git, bgplot, pacvim, loop/useradd, ln -s à la volée &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/10/top-commandes-linux-7/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.91.170</wp:comment_author_IP>
			<wp:comment_date>2018-09-10 08:05:59</wp:comment_date>
			<wp:comment_date_gmt>2018-09-10 07:05:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Historiser son historique de commande : il est toujours en tête des lectures [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536563159.664443;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1536563159]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #5 : vim, apropos, glances, gs, nl, sed /pattern/, timeout &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/27/top-commandes-linux-5-vim/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.249</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 08:50:51</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 07:50:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] archiver son historique de commandes pour ne pas perdre tout ce que vous avez tapé dans votre terminal [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535356252]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535356252.667542;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Top commandes linux #2 :lftp, sqlite/firefox, convert, liste ports/services, BMon</title>
		<link>http://xavki.blog/2018/08/06/commandes-linux-en-vrac-2/</link>
		<pubDate>Mon, 06 Aug 2018 08:14:54 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=322</guid>
		<description></description>
		<content:encoded><![CDATA[C'est lundi et c'est le jour de l'article des commandes linux un peu en vrac. N'hésitez à faire suivre et retweeter. Et vous quelles sont vos commandes du moment ?

<strong># Calendrier commentés par des évènements</strong>
<pre>calendar</pre>
<strong># Pour tout connaitre sur les wildcards linux</strong>
<a href="https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt">https://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt</a>
<strong># tester votre débit internet</strong>
<pre>lftp -e 'pget https://google.com;exit;'</pre>
<strong># Récupérer les cookies de Firefox sur la base sqlite</strong>
<pre>echo "
.mode tabs select host, case when host glob '.*' then
'TRUE' else 'FALSE' end,
path, case when isSecure then
'TRUE' else 'FALSE' end,
expiry, name, value from moz_cookies;
" | sqlite3 ~/.mozilla/firefox/*.default/cookies.sqlite
</pre>
<strong># Générer 100 images avec convert</strong>
<pre>for i in {1..100}; do \
convert -size 200x200 xc:#000000 -font Arial \
-pointsize 22 -fill white -gravity center \
-draw "text 0,0 '$i'" $i.png; \
done
</pre>
<strong># Liste des ports et services Linux</strong>
<pre>cat /etc/services

#consultatble aussi via
getent services ssh
</pre>
<strong># Supprimer les fichiers dupliqués dans un répertoire</strong>
<pre> md5sum * | sort | rev | uniq -df1 | rev | cut -d" " -f3 | xargs rm</pre>
<strong># Découverte de BMon</strong>
Et en bonus un article de mon petit nuage qui fait une belle présentation de l'outils BMon permettant la surveillance de bande passante : <a href="https://monptitnuage.wordpress.com/2018/08/02/bmon-outil-de-surveillance-de-bande-passante-en-temps-reel-sous-gnu-linux/">lien</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>322</wp:post_id>
		<wp:post_date>2018-08-06 09:14:54</wp:post_date>
		<wp:post_date_gmt>2018-08-06 08:14:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>commandes-linux-en-vrac-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20784281060]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0ae8e120bbd2eb30149bd01acf6cd35d</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[145]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533543299]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1026381117795000320";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/fnDGYhUSPVm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176689700955]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6432146831886680065]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";s:1:"*";s:11:"x-app-usage";s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";s:25:"strict-transport-security";s:25:"max-age=15552000; preload";s:13:"x-fb-trace-id";s:11:"Fch3eJv0IbK";s:8:"x-fb-rev";s:7:"4177419";s:12:"content-type";s:31:"application/json; charset=UTF-8";s:20:"facebook-api-version";s:4:"v2.7";s:13:"cache-control";s:8:"no-store";s:6:"pragma";s:8:"no-cache";s:7:"expires";s:29:"Sat, 01 Jan 2000 00:00:00 GMT";s:16:"www-authenticate";s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";s:4:"vary";s:15:"Accept-Encoding";s:16:"content-encoding";s:4:"gzip";s:10:"x-fb-debug";s:88:"DkOZZyUm7eEfp6+nYUl2+40KTH+GU5emhqN2Y+DS2996xuamuBXrZle31BSLzpMhmZAG0TA4sFWgOaHOH8HjyQ==";s:4:"date";s:29:"Mon, 06 Aug 2018 08:15:09 GMT";s:14:"content-length";s:3:"196";}}s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"Fch3eJv0IbK"}}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:0:{}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"Fch3eJv0IbK"}}";s:3:"raw";s:1038:"HTTP/1.1 403 Forbidden
Access-Control-Allow-Origin: *
x-app-usage: {"call_count":0,"total_cputime":0,"total_time":0}
Strict-Transport-Security: max-age=15552000; preload
x-fb-trace-id: Fch3eJv0IbK
x-fb-rev: 4177419
Content-Type: application/json; charset=UTF-8
facebook-api-version: v2.7
Cache-Control: no-store
Pragma: no-cache
Expires: Sat, 01 Jan 2000 00:00:00 GMT
WWW-Authenticate: OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"
Vary: Accept-Encoding
Content-Encoding: gzip
X-FB-Debug: DkOZZyUm7eEfp6+nYUl2+40KTH+GU5emhqN2Y+DS2996xuamuBXrZle31BSLzpMhmZAG0TA4sFWgOaHOH8HjyQ==
Date: Mon, 06 Aug 2018 08:15:09 GMT
Connection: close
Content-Length: 196

{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"Fch3eJv0IbK"}}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";a:1:{i:0;s:1:"*";}s:11:"x-app-usage";a:1:{i:0;s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";}s:25:"strict-transport-security";a:1:{i:0;s:25:"max-age=15552000; preload";}s:13:"x-fb-trace-id";a:1:{i:0;s:11:"Fch3eJv0IbK";}s:8:"x-fb-rev";a:1:{i:0;s:7:"4177419";}s:12:"content-type";a:1:{i:0;s:31:"application/json; charset=UTF-8";}s:20:"facebook-api-version";a:1:{i:0;s:4:"v2.7";}s:13:"cache-control";a:1:{i:0;s:8:"no-store";}s:6:"pragma";a:1:{i:0;s:8:"no-cache";}s:7:"expires";a:1:{i:0;s:29:"Sat, 01 Jan 2000 00:00:00 GMT";}s:16:"www-authenticate";a:1:{i:0;s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";}s:4:"vary";a:1:{i:0;s:15:"Accept-Encoding";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:10:"x-fb-debug";a:1:{i:0;s:88:"DkOZZyUm7eEfp6+nYUl2+40KTH+GU5emhqN2Y+DS2996xuamuBXrZle31BSLzpMhmZAG0TA4sFWgOaHOH8HjyQ==";}s:4:"date";a:1:{i:0;s:29:"Mon, 06 Aug 2018 08:15:09 GMT";}s:14:"content-length";a:1:{i:0;s:3:"196";}}}s:11:"status_code";i:403;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:123:"https://graph.facebook.com/v2.2/me/publish?appsecret_proof=66ba5d3c7d9eb1554fcd226a07d3c37d86d4ae1933038df8a06d0c8e0378ebec";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:0:{}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AWK</title>
		<link>http://xavki.blog/awk/</link>
		<pubDate>Mon, 30 Jul 2018 13:50:30 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?page_id=340</guid>
		<description></description>
		<content:encoded><![CDATA[Pour les sysadmin, AWK est une petite merveille dès lors que l'on creuse un peu sur ces possibilités. Voici quelques articles qui vous permettront, j'espère, de franchir ce cap.
<ul>
	<li><a href="https://xavki.wordpress.com/2018/07/23/bashawk-lister-les-commandes-le-top-de-vos-commandes/">Lister les commandes que vous utilisez le plus</a> : en une ligne produisez des stats sur votre historique</li>
	<li><a href="https://xavki.blog/2018/08/21/interagir-utilisateur-prompt-awk/">Afficher un prompt</a> : demander à l'utilisateur une valeur</li>
	<li><a href="https://xavki.blog/2018/08/15/awk-comment-utiliser-une-variable-shell-dans-awk/">Variable bash et awk</a> : passer une variable shell dans awk</li>
	<li><a href="https://xavki.wordpress.com/2018/07/19/awk-linux-supprimer-doublons-path/">Découverte de FS RS OFS ORS</a> : exemple par la suppression de doublons dans votre PATH</li>
	<li><a href="https://xavki.wordpress.com/2018/07/17/mysql-vider-toutes-les-tables-dune-base/">Exemple dans une oneline mysql</a> : vider toutes les tables avec l'aide de awk</li>
	<li><a href="https://xavki.wordpress.com/2018/07/14/awktips-supprimer-les-lignes-en-doublon/">Comment supprimer les lignes en double dans un fichier ?</a></li>
	<li><a href="https://xavki.wordpress.com/2018/07/11/awk-calculer-cumul/">Cumuler les chiffres d'une colonne ?</a></li>
	<li><a href="https://xavki.blog/2018/08/10/awk-creer-un-serveur-web-minimaliste/">Serveur web</a> : créer un serveur web minimalist</li>
	<li><a href="https://xavki.blog/2018/09/05/awk-convertir-un-csv-en-sql/">Convertir du csv en sql</a> pour faire de l'insert into</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2018-07-30 14:50:30</wp:post_date>
		<wp:post_date_gmt>2018-07-30 13:50:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>awk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Docker</title>
		<link>http://xavki.blog/docker/</link>
		<pubDate>Mon, 30 Jul 2018 13:56:19 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?page_id=343</guid>
		<description></description>
		<content:encoded><![CDATA[Docker est un mode particulier de virtualisation. Cette petite merveille dispose d'une multitude de commandes bien documentées qu'il faut apprendre à manipuler et à combiner avec d'autres commandes bash/shell.

Voici quelques articles qui vous permettront d'aller plus loin dans ce domaine :
<ul>
	<li><a href="https://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/">Script création mini datacenter</a> : déploiement d'un ensemble de conteneurs</li>
	<li><a href="https://xavki.blog/2018/09/25/docker-comment-creer-une-image-a-partir-dun-conteneur-et-la-pousser/">Comment créer une image à partir d'un conteneur ?</a></li>
	<li><a href="https://xavki.blog/2018/10/02/docker-copier-un-fichier-de-votre-host-vers-un-container-avec-tar/">Copie d'un fichier tar du host vers le conteneur</a></li>
	<li><a href="https://xavki.wordpress.com/2018/07/20/docker-supprimer-les-images-non-taggees/">La suppression des images non taguées</a></li>
	<li><a href="https://xavki.wordpress.com/2018/06/18/tips-passer-une-variable-dans-ssh/">Basculer une variable du host vers le conteneur dans un swarm</a></li>
	<li><a href="https://xavki.wordpress.com/2018/06/15/swarm-lister-les-services-et-les-nodes-en-1-ligne/">Combiner liste des nodes et des services dans un cluster swarm</a></li>
	<li><a href="https://xavki.wordpress.com/2018/06/14/sauvegarde-mysql-de-conteneurs-docker/">Script de sauvegarde de bases MYSQL dans des conteneurs</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2018-07-30 14:56:19</wp:post_date>
		<wp:post_date_gmt>2018-07-30 13:56:19</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>docker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/07/30/344/</link>
		<pubDate>Mon, 30 Jul 2018 13:56:20 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2018/07/30/344/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>344</wp:post_id>
		<wp:post_date>2018-07-30 14:56:20</wp:post_date>
		<wp:post_date_gmt>2018-07-30 13:56:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>344</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[343]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-pexels-photo-818563</title>
		<link>http://xavki.blog/cropped-pexels-photo-818563/</link>
		<pubDate>Tue, 31 Jul 2018 10:34:29 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/cropped-pexels-photo-818563.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>348</wp:post_id>
		<wp:post_date>2018-07-31 11:34:29</wp:post_date>
		<wp:post_date_gmt>2018-07-31 10:34:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cropped-pexels-photo-818563</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/cropped-pexels-photo-818563.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/cropped-pexels-photo-818563.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1057;s:6:"height";i:1057;s:4:"file";s:105:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/cropped-pexels-photo-818563.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:926127;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sql-logo</title>
		<link>http://xavki.blog/2018/09/05/awk-convertir-un-csv-en-sql/sql-logo/</link>
		<pubDate>Tue, 31 Jul 2018 10:56:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/sql-logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date>2018-07-31 11:56:23</wp:post_date>
		<wp:post_date_gmt>2018-07-31 10:56:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sql-logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/sql-logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/sql-logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:290;s:6:"height";i:290;s:4:"file";s:85:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/sql-logo.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:10395;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>person holding phone taking picture of served food</title>
		<link>http://xavki.blog/pexels-photo-693267/</link>
		<pubDate>Tue, 31 Jul 2018 11:23:40 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/07/pexels-photo-693267.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Helena Lopes on <a href="https://www.pexels.com/photo/person-holding-phone-taking-picture-of-served-food-693267/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>354</wp:post_id>
		<wp:post_date>2018-07-31 12:23:40</wp:post_date>
		<wp:post_date_gmt>2018-07-31 11:23:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-693267</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/pexels-photo-693267.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-693267.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/pexels-photo-693267.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:129389;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>#devhints.io : le top des cheat sheets ! pour sysadmin, devops, developper...</title>
		<link>http://xavki.blog/2018/08/02/devhints-io-le-top-des-cheat-sheets-pour-sysadmin-devops-developper/</link>
		<pubDate>Thu, 02 Aug 2018 09:01:15 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=356</guid>
		<description></description>
		<content:encoded><![CDATA[Très très pratique pour retrouver les petites astuces et en découvrir de nouvelles, le site devhints.io recense de très nombreux astuces ou cheat sheets (en anglais). Ces feuilles de triches si on traduit texto sont bien utile quand on fait du dev ou du sysadmin.

Vous retrouverez des languages courants, des outils, des binaires... :
<ul>
	<li>vim</li>
	<li>python</li>
	<li>javascript</li>
	<li>docker</li>
	<li>bash</li>
	<li>sass</li>
	<li>go</li>
	<li>analytics</li>
	<li>atom</li>
	<li>sublim text</li>
	<li>curl</li>
	<li>css</li>
	<li>git</li>
	<li>...</li>
</ul>
Si vous avez d'autres sites de ce genre partagez les en commentaire, je ferai un article pour regrouper tout ça. Bonne journée à tous !

Découvrez : <a href="https://devhints.io/">devhints.io</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>356</wp:post_id>
		<wp:post_date>2018-08-02 10:01:15</wp:post_date>
		<wp:post_date_gmt>2018-08-02 09:01:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devhints-io-le-top-des-cheat-sheets-pour-sysadmin-devops-developper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sites-outils"><![CDATA[Sites &amp; Outils]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[357]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_20642923</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533200478]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20652498695]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1024943222144024576";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/gDvPffXsZ1k]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176547986660]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6430708936315269121]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>apps blur button close up</title>
		<link>http://xavki.blog/pexels-photo-267350-2/</link>
		<pubDate>Thu, 02 Aug 2018 08:55:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/pexels-photo-267350.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/photo/apps-blur-button-close-up-267350/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>357</wp:post_id>
		<wp:post_date>2018-08-02 09:55:43</wp:post_date>
		<wp:post_date_gmt>2018-08-02 08:55:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-267350-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/pexels-photo-267350.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-267350.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1792;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-267350.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:151221;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>git-log</title>
		<link>http://xavki.blog/2018/10/04/git-un-git-log-en-couleur-avec-date-user-et-commit/git-log/</link>
		<pubDate>Thu, 02 Aug 2018 12:48:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/git-log.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2018-08-02 13:48:06</wp:post_date>
		<wp:post_date_gmt>2018-08-02 12:48:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>git-log</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>346</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/git-log.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/git-log.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:563;s:6:"height";i:70;s:4:"file";s:84:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/git-log.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:9224;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>git-graph</title>
		<link>http://xavki.blog/2018/10/04/git-un-git-log-en-couleur-avec-date-user-et-commit/git-graph/</link>
		<pubDate>Thu, 02 Aug 2018 12:49:17 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/git-graph.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>361</wp:post_id>
		<wp:post_date>2018-08-02 13:49:17</wp:post_date>
		<wp:post_date_gmt>2018-08-02 12:49:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>git-graph</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>346</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/git-graph.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/git-graph.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:511;s:6:"height";i:192;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/git-graph.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:21775;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : principaux rappels de commandes à connaître</title>
		<link>http://xavki.blog/?p=386</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=386</guid>
		<description></description>
		<content:encoded><![CDATA[!^ first argument
!$ last argument
!* all arguments
!:2 second argument

!:2-3 second to third arguments
!:2-$ second to last arguments
!:2* second to last arguments
!:2- second to next to last arguments

!:0 the command
!! repeat the previous line]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>386</wp:post_id>
		<wp:post_date>2018-08-03 22:18:19</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>[Perl] : récupérer un pattern présent une ou plusieurs fois par ligne</title>
		<link>http://xavki.blog/2018/08/04/perl-recuperer-un-pattern-present-une-ou-plusieurs-fois-par-ligne/</link>
		<pubDate>Sat, 04 Aug 2018 21:06:52 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=389</guid>
		<description></description>
		<content:encoded><![CDATA[Perl n'est pas forcément mon language préféré mais pour faire du oneline il est plutôt génial.

Aujourd'hui un truc tout simple une fois de plus. Récupérer un pattern par une regex mais en récupérant toutes les occurances. Cela sous entend que l'on récupère également les patterns même si ils sont présents plusieurs fois par ligne.

Voici le fichier de départ :
<pre>└─ $ ▶ cat file.txt 
vert gris
jaune
bleu
orange b
rouge blanc beige
</pre>
Je cherche à récupérer les mots commençant par un b soit le pattern\bb\w+
<pre>perl -ne 'while(/\bb\w+/g){print "$&amp;\n";}' file.txt
</pre>
Donc :
<ul>
	<li>-e : ligne de commande</li>
	<li>-n : évite de faire un while, permet de faire une boucle</li>
	<li> while : pour chaque pattern</li>
	<li>$&amp; : récupère le pattern</li>
	<li>print : on affiche</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>389</wp:post_id>
		<wp:post_date>2018-08-04 22:06:52</wp:post_date>
		<wp:post_date_gmt>2018-08-04 21:06:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-recuperer-un-pattern-present-une-ou-plusieurs-fois-par-ligne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1025850665338380288";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533416815]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20739253323]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/AdUnDCNNVeJ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176634410700]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6431616377211232256]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";s:1:"*";s:11:"x-app-usage";s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";s:25:"strict-transport-security";s:25:"max-age=15552000; preload";s:13:"x-fb-trace-id";s:11:"DPbdicFwjP5";s:8:"x-fb-rev";s:7:"4176706";s:12:"content-type";s:31:"application/json; charset=UTF-8";s:20:"facebook-api-version";s:4:"v2.7";s:13:"cache-control";s:8:"no-store";s:6:"pragma";s:8:"no-cache";s:7:"expires";s:29:"Sat, 01 Jan 2000 00:00:00 GMT";s:16:"www-authenticate";s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";s:4:"vary";s:15:"Accept-Encoding";s:16:"content-encoding";s:4:"gzip";s:10:"x-fb-debug";s:88:"MlPpGN/F8OpCFxqhFm/QuZsQRW41bMGSJIgs4HLpyOUOIYnfNXZOYWkfq52GAx8fJ9arFbGzNglXM3t8HBr6uQ==";s:4:"date";s:29:"Sat, 04 Aug 2018 21:07:18 GMT";s:14:"content-length";s:3:"197";}}s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"DPbdicFwjP5"}}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:0:{}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"DPbdicFwjP5"}}";s:3:"raw";s:1038:"HTTP/1.1 403 Forbidden
Access-Control-Allow-Origin: *
x-app-usage: {"call_count":0,"total_cputime":0,"total_time":0}
Strict-Transport-Security: max-age=15552000; preload
x-fb-trace-id: DPbdicFwjP5
x-fb-rev: 4176706
Content-Type: application/json; charset=UTF-8
facebook-api-version: v2.7
Cache-Control: no-store
Pragma: no-cache
Expires: Sat, 01 Jan 2000 00:00:00 GMT
WWW-Authenticate: OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"
Vary: Accept-Encoding
Content-Encoding: gzip
X-FB-Debug: MlPpGN/F8OpCFxqhFm/QuZsQRW41bMGSJIgs4HLpyOUOIYnfNXZOYWkfq52GAx8fJ9arFbGzNglXM3t8HBr6uQ==
Date: Sat, 04 Aug 2018 21:07:18 GMT
Connection: close
Content-Length: 197

{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"DPbdicFwjP5"}}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";a:1:{i:0;s:1:"*";}s:11:"x-app-usage";a:1:{i:0;s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";}s:25:"strict-transport-security";a:1:{i:0;s:25:"max-age=15552000; preload";}s:13:"x-fb-trace-id";a:1:{i:0;s:11:"DPbdicFwjP5";}s:8:"x-fb-rev";a:1:{i:0;s:7:"4176706";}s:12:"content-type";a:1:{i:0;s:31:"application/json; charset=UTF-8";}s:20:"facebook-api-version";a:1:{i:0;s:4:"v2.7";}s:13:"cache-control";a:1:{i:0;s:8:"no-store";}s:6:"pragma";a:1:{i:0;s:8:"no-cache";}s:7:"expires";a:1:{i:0;s:29:"Sat, 01 Jan 2000 00:00:00 GMT";}s:16:"www-authenticate";a:1:{i:0;s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";}s:4:"vary";a:1:{i:0;s:15:"Accept-Encoding";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:10:"x-fb-debug";a:1:{i:0;s:88:"MlPpGN/F8OpCFxqhFm/QuZsQRW41bMGSJIgs4HLpyOUOIYnfNXZOYWkfq52GAx8fJ9arFbGzNglXM3t8HBr6uQ==";}s:4:"date";a:1:{i:0;s:29:"Sat, 04 Aug 2018 21:07:18 GMT";}s:14:"content-length";a:1:{i:0;s:3:"197";}}}s:11:"status_code";i:403;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:123:"https://graph.facebook.com/v2.2/me/publish?appsecret_proof=66ba5d3c7d9eb1554fcd226a07d3c37d86d4ae1933038df8a06d0c8e0378ebec";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:0:{}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>six silver colored keys</title>
		<link>http://xavki.blog/pexels-photo-941947/</link>
		<pubDate>Sun, 05 Aug 2018 16:31:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/pexels-photo-941947.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Luka Siemionov on <a href="https://www.pexels.com/photo/six-silver-colored-keys-941947/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date>2018-08-05 17:31:23</wp:post_date>
		<wp:post_date_gmt>2018-08-05 16:31:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-941947</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/pexels-photo-941947.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-941947.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1250;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-941947.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:74218;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>black sd cardnear black android smartphone</title>
		<link>http://xavki.blog/digital-storage-media-flash-memory-the-memory-card-computer-accessories-159226/</link>
		<pubDate>Sun, 05 Aug 2018 20:10:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/digital-storage-media-flash-memory-the-memory-card-computer-accessories-159226.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/photo/black-sd-cardnear-black-android-smartphone-159226/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date>2018-08-05 21:10:43</wp:post_date>
		<wp:post_date_gmt>2018-08-05 20:10:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>digital-storage-media-flash-memory-the-memory-card-computer-accessories-159226</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/digital-storage-media-flash-memory-the-memory-card-computer-accessories-159226.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1255;s:4:"file";s:156:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/digital-storage-media-flash-memory-the-memory-card-computer-accessories-159226.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:59862;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/digital-storage-media-flash-memory-the-memory-card-computer-accessories-159226.jpeg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Outils et sites web</title>
		<link>http://xavki.blog/outils-et-site-web/</link>
		<pubDate>Mon, 06 Aug 2018 12:24:13 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?page_id=407</guid>
		<description></description>
		<content:encoded><![CDATA[Des sites à découvrir ou des binaires ou outils à installer :
<h2>Binaires:</h2>
<ul>
	<li><a href="https://xavki.blog/2018/07/16/python-fpdf-generer-pdf/">fpdf</a> : pour manipuler des pdf</li>
</ul>
<h2>Sites:</h2>
<ul>
	<li><a href="https://xavki.wordpress.com/2018/08/02/devhints-io-le-top-des-cheat-sheets-pour-sysadmin-devops-developper/">devhinst.io</a> : pour les fans de cheat sheets portant sur des languages, des binaires...</li>
	<li><a href="https://xavki.wordpress.com/2018/07/16/explainshell-com-se-faire-expliquer-une-ligne-de-commande-bash/">explainshell.com</a> : se faire expliquer un bout de shell en faisant le collant dans un site web c'est possible</li>
	<li><a href="https://xavki.wordpress.com/2018/06/28/devdocs-io-docs-outils-languages/">devdocs.io</a> : toutes les docs de la majorité des languages et des outils les plus connus</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2018-08-06 13:24:13</wp:post_date>
		<wp:post_date_gmt>2018-08-06 12:24:13</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>outils-et-site-web</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : récupérer les ddl ou le sql des index d&#039;un schéma</title>
		<link>http://xavki.blog/2018/08/14/oracle-recuperer-les-ddl-ou-le-sql-des-index-dun-schema/</link>
		<pubDate>Tue, 14 Aug 2018 07:35:47 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[Oracle est tellement performant mais pourtant pas si simple à administrer. En tout cas, ce moteur génère du boulot pour les DBA lol.

Comment récupérer les ddl des index d'un schéma ? ou plutôt en français comment récupérer les sql pour voir comment sont créés les index ?
<pre>sqlplus '/a sysdba'

SQL &gt; select dbms_metadata.get_ddl('INDEX', index_name, owner)
from all_indexes
where owner in ('NOM_SCHEMA'); 
</pre>
Et voilà c'est pas plus compliqué que cela avec le dbms qui va bien Oracle vous sort le sql sans problème. Avec cela vous allez pouvoir revoir, recréer vos index sans difficultés.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2018-08-14 08:35:47</wp:post_date>
		<wp:post_date_gmt>2018-08-14 07:35:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-recuperer-les-ddl-ou-le-sql-des-index-dun-schema</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[236]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534232150]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21064767118]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1029270366592663552";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/5EGMn6VdFZD]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6435036080118075392]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[AWK] : créer un serveur web minimaliste</title>
		<link>http://xavki.blog/2018/08/10/awk-creer-un-serveur-web-minimaliste/</link>
		<pubDate>Fri, 10 Aug 2018 07:55:45 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[Dans un post précédent, nous avions vu <a href="https://xavki.wordpress.com/2018/06/28/python-serveur-web/">comment lancer un serveur web en python</a>. Cela ne prenait qu'une seule ligne par les miracles de python.

Mais saviez vous qu'avec AWK vous pouviez faire pareil ? c'est fou non ? ben oui c'est possible mais attention cela ne se fait pas en une seule ligne (ou sinon elle sera bien loin du one-liner).
<pre>#!/usr/bin/gawk -f
BEGIN {
if (ARGC &lt; 2) { print "Usage: wwwawk  file.html"; exit 0 }
	Concnt = 1;
        while (1) {
        RS = ORS = "\r\n";
        HttpService = "/inet/tcp/8080/0/0";
        getline Dat &lt; ARGV[1];
        Datlen = length(Dat) + length(ORS);
        while (HttpService |&amp; getline ){
		if (ERRNO) { print "Connection error: " ERRNO; exit 1}
                print "client: " $0;
                if ( length($0) &lt; 1 ) break;
        }
        print "HTTP/1.1 200 OK"             |&amp; HttpService;
        print "Content-Type: text/html"     |&amp; HttpService;
        print "Server: wwwawk/1.0"          |&amp; HttpService;
        print "Connection: close"           |&amp; HttpService;
        print "Content-Length: " Datlen ORS |&amp; HttpService;
        print Dat                           |&amp; HttpService;
        close(HttpService);
        print "OK: served file " ARGV[1] ", count " Concnt;
        Concnt++;
      }
} 
</pre>
&nbsp;

Après avoir créé votre fichier donnez lui les droits qui vont bien (755) par exemple et créez une fichier file.html. Lancez le script et rendez vous sur votre localhost:8080 et le fichier sera servi.

Je trouve ça trop fort quand même. Pas vous ?

Source : <a href="http://tuxgraphics.org/~guido/scripts/awk-one-liner.html">bon article de tuxgraphics</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2018-08-10 08:55:45</wp:post_date>
		<wp:post_date_gmt>2018-08-10 07:55:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awk-creer-un-serveur-web-minimaliste</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/cXpDud3BJDP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20927834854]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533888571]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1027829284478636032";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6433594989397319680]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Perl] : le web server en quelques lignes</title>
		<link>http://xavki.blog/2018/08/13/perl-le-web-server-en-quelques-lignes/</link>
		<pubDate>Mon, 13 Aug 2018 10:00:50 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=260</guid>
		<description></description>
		<content:encoded><![CDATA[Après <a href="https://xavki.wordpress.com/2018/08/10/awk-creer-un-serveur-web-minimaliste/">AWK</a> et <a href="https://xavki.wordpress.com/2018/06/28/python-serveur-web/">python</a>, il fallait bien compléter notre petit tour de mise en place d'une socket d'écoute web (web serveur). C'est au tour de Perl de  nous permettre de réaliser cette petite opération.

Ce n'est pas moi qui suit à l'origine de ce code en Perl vous pouvez <a href="http://tuxgraphics.org/~guido/scripts/perlweb.txt">trouver la source ici</a>.  En tout cas une fois de plus ce n'est pas très long et ça fait le taff en affichant un résultat sur le localhost port 8000.
<pre>#!/usr/bin/perl -w # vim: set sw=4 ts=4 si et: # Simple single threaded web server, written by Guido Socher # copyright: freeware, do with it whatever you want. No warranty of any kind. # # Usage: perlweb.pl [portnumber] [ip-to-bind-to] # Example: ./perlweb.pl # The above example will answer http requests at port 8000  # on any interface that this machine has. # Try: # curl -v http://localhost:8000 # use strict; use Socket; # my $listenport = $ARGV[0] || 8000; socket (Server, PF_INET, SOCK_STREAM, 6) || die ("Error socket: $!"); # protocol 6 is tcp setsockopt(Server, SOL_SOCKET,SO_REUSEADDR,1) || die ("Error setsockopt: $!"); my $sockaddr = sockaddr_in($listenport, $ARGV[1] ? inet_aton($ARGV[1]) : INADDR_ANY) || die ("Error sockaddr_in: $!"); bind(Server,$sockaddr) || die ("Error bind: $!"); listen(Server,SOMAXCONN) || die ("Error listen: $!");  my $caddr; my $buffer; while ($caddr = accept(Client, Server)) {     recv(Client,$buffer,1000,0);     if ($buffer &amp;&amp; $buffer=~/^GET /){         print Client "HTTP/1.1 200 OK\r\n";         print Client "Content-Type: text/html\r\n";         print Client "Server: perlweb/1.0\r\n";         print Client "Connection: close\r\n";         print Client "\r\n";         # debug a bit:         #print "client:\n$buffer\n";         print Client "This web server works!\n"; } close Client; } # __END__ </pre>En plus court pour faire en une ligne mais moins complet :
<pre>$ cpan HTTP::Server::Brick   # install dependency $ perl -MHTTP::Server::Brick -e '$s=HTTP::Server::Brick-&gt;new(port=&gt;8000); $s-&gt;mount("/"=&gt;{path=&gt;"."}); $s-&gt;start' </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2018-08-13 11:00:50</wp:post_date>
		<wp:post_date_gmt>2018-08-13 10:00:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-le-web-server-en-quelques-lignes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[98]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1028944486737620992";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/9j65f2QXKj4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534154454]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21031361185]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6434710200669868032]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : convertir une page man en pdf</title>
		<link>http://xavki.blog/2018/08/17/bash-convertir-une-page-man-en-pdf/</link>
		<pubDate>Fri, 17 Aug 2018 11:10:31 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[Petite astuce qui peut être bien pratique pour lire ou mettre de côté des pages man que l'on survole parfois. En une ligne de commande vous pouvez imprimer une page de man dans un pdf.

Voici comment convertir un man en pdf :
<pre>man -t manpage | ps2pdf - filename.pdf </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2018-08-17 12:10:31</wp:post_date>
		<wp:post_date_gmt>2018-08-17 11:10:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-convertir-une-page-man-en-pdf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[273]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534504239]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21176738971]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1030411595296530433";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/WcLUZyHPwai]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6436177302765342720]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #5 : vim, apropos, glances, gs, nl, sed /pattern/, timeout &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/08/27/top-commandes-linux-5-vim/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.100.249</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 08:51:00</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 07:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] imprimer une page de man dans un fichier pdf pour l&#8217;emmener partout (y compris sur un os windos lol) [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535356261]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1535356261.992401;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[AWK] : comment utiliser une variable shell dans awk ?</title>
		<link>http://xavki.blog/2018/08/15/awk-comment-utiliser-une-variable-shell-dans-awk/</link>
		<pubDate>Wed, 15 Aug 2018 08:47:15 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[Awk est  un language bien sympa mais parfois on hésite à l'utiliser car il faut se prendre la tête à lui faire asser des variables. Du coup on tort le truc dans tous les sens alors qu'il suffit parfois de récupérer les variables shell pour les réutiliser dans awk.

Je vous propose deux options mais j'ai une grosse préférence pour la première.

La première c'est d'uliser l'option -v :
<pre>└─ $ ▶ variable="toto";awk -v var="$variable" 'BEGIN {print var}' toto </pre>La seconde en lui passant une variable d'environnement avec ENVIRON :
<pre>└─ $ ▶ variable=toto awk 'BEGIN {print ENVIRON["variable"]}' toto </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2018-08-15 09:47:15</wp:post_date>
		<wp:post_date_gmt>2018-08-15 08:47:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awk-comment-utiliser-une-variable-shell-dans-awk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[278]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534322844]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21103060599]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1029650764459921414";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/4YHQVgA4jKf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6435416479042277376]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : lister les synonymes et connaître le OWNER et la source</title>
		<link>http://xavki.blog/2018/08/08/oracle-lister-les-synonymes-et-connaitre-le-owner-et-la-source/</link>
		<pubDate>Wed, 08 Aug 2018 09:26:16 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[Oracle n'est pas toujours simple à comprendre et aujourd'hui faisons un petit focus sur les synonymes. En gros un synonyme c'est une sorte d'alias qui permet de se référer à un autre objet de l'instance. Il permet notamment de gérer les droits et les accès à certaines données.

Un synonyme peut être public dans ce cas il est ouvert à tout le monde. A l'opposé il peut être privé et dans ce cas seul le schéma (utilisateur) qui l'a créé pourra y accéder.

Attention tout le monde ne peut pas créer des synonyme, l'utilisateur doit disposer du GRANT CREATE SYNONYM pour pouvoir le faire.

Alors vous avez une base, comment lister les synonymes et y voir plus clair ?

A l'aide de la table all_synonyms :
<pre>SQL&gt; desc all_synonyms  Name					   Null?    Type  ----------------------------------------- -------- ----------------------------  OWNER						    VARCHAR2(30)  SYNONYM_NAME					    VARCHAR2(30)  TABLE_OWNER					    VARCHAR2(30)  TABLE_NAME					    VARCHAR2(30)  DB_LINK					    VARCHAR2(128) </pre>Vous pouvez lancer :
<pre>SQL&gt; SET LINESIZE 1000 SQL&gt; select SYNONYM_NAME, TABLE_NAME, TABLE_OWNER, OWNER from all_synonyms; </pre>Pour créer un synonyme :
<pre>CREATE SYNONYME schema.nom_synonyme for schema.nom_objet  </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2018-08-08 10:26:16</wp:post_date>
		<wp:post_date_gmt>2018-08-08 09:26:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-lister-les-synonymes-et-connaitre-le-owner-et-la-source</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533720384]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20858095292]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1027123868509593600";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/4pXGg8hP83W]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6432889574401409024]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes linux #3 : vim, python, wireshark, docker, port finder, mysql</title>
		<link>http://xavki.blog/2018/08/13/commandes-en-vrac-3-vim-python-wireshark-docker-port-finder/</link>
		<pubDate>Mon, 13 Aug 2018 08:54:53 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[<strong># Vim</strong>

utiliser la touche pourcentage % sur {,[ ou ( et votre flèche haut ou bas. Idem pour les ), ] ou }

<strong># Python</strong>

<a href="https://stackoverflow.com/questions/1863236/grep-r-in-python">comment faire l'équivalent de grep -R ?</a>

<strong># Wireshark </strong>

éplucher les log wireshark derrière un ssh
<pre>wireshark -k -i &lt;(ssh -l root servername \
"dumpcap -P -w - -f 'not tcp port 22'")</pre>
<strong># Docker</strong>

supprimer les images exited et leurs volumes
<pre>docker system prune --volumes -f</pre>
<strong># Find</strong>

Trouver un texte dans un fichier sur une machine
<pre>find / -type f -exec grep -H "texte" {} \;</pre>
<strong>#Port finder</strong>

Trouver pour un port donné le process qui l'utilise et le binaire qui va avec. Avec <a href="https://gist.github.com/TheAmazingPT/936b3daba53de99b39a0f814c5e8cacc">ce script shell très simple</a>. Pourquoi pas le mettre dans une fonction de votre .bashrc

<strong># MySQL</strong>

Synthèse des <a href="https://gist.github.com/TooKennySupreme/7435fa01ee16a4b23a50653c2b3e0470">principales commandes mysql et sql</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2018-08-13 09:54:53</wp:post_date>
		<wp:post_date_gmt>2018-08-13 08:54:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>commandes-en-vrac-3-vim-python-wireshark-docker-port-finder</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534150497]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/4Kzp5D43SBT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21029740512]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1028927879642603520";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6434693583948906496]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[commandes-en-vrac-3-vim-pyhton-wireshark-docker-port-finder]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : Comment scripter pour définir un argument (ou plusieurs) par défaut ?</title>
		<link>http://xavki.blog/2018/08/07/bash-comment-scripter-pour-definir-un-argument-ou-plusieurs-par-defaut/</link>
		<pubDate>Tue, 07 Aug 2018 15:58:37 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[Pour les débutants en bash, c'est quelque chose qui revient souvent quand on script : comment agir en fonction du nombre d'arguments ou comment prendre un argument par défaut si il n'en existe pas ? ou même setter plusieurs arguments ?

Pas très compliqué, faut juste le savoir la variable "$#" contient le nombre d'arguments passés à votre script. Ainsi il est facile après de faire un contrôle dessus et de demander une valeur ou de définir une valeur par défaut.

Par exemple, demander de rentrer une valeur d'argument :
<pre>[ $# -lt 1 ] &amp;&amp; echo "Veuillez préciser la valeur d'argument ?"
read $argument
</pre>
ou setter une valeur par défaut :
<pre>[ $# -lt 1 ] &amp;&amp; set "argument1 par defaut"
echo $1
#affiche
argument1 par defaut
</pre>
Rappelons le $1 est le première arguement, $2 le deuxième etc.

Ou définir une liste d'arguments :
<pre>[ $# -lt 1 ] &amp;&amp; set "argument1 par defaut" "toto est le 2ème"
echo $1
echo $2
#affiche
argument1 par defaut
toto est le 2ème
</pre>
ou parcourir un fichier en guise d'argument :
<pre>[ $# -lt 1 ] &amp;&amp; set -- arguments_default.txt
</pre>
C'est simple de scripter on peut aussi faire ce genre d'opérations d'autres manières mais celle-ci est reconnue comme dans les règles de l'art.

Et si vous vouliez décaller les arguments ? "utilisez shift" pour un décallage de 1 ou "shift 2" pour un décallage de 2 etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2018-08-07 16:58:37</wp:post_date>
		<wp:post_date_gmt>2018-08-07 15:58:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-comment-scripter-pour-definir-un-argument-ou-plusieurs-par-defaut</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/1dxNXiavmpE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533660451]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20834490951]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1026872481519419393";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_tumblr_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://.tumblr.com/post/176738304460]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402364</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524081</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6432638194730233856]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502419</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";s:1:"*";s:11:"x-app-usage";s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";s:25:"strict-transport-security";s:25:"max-age=15552000; preload";s:13:"x-fb-trace-id";s:11:"BOy+HvUJ+4A";s:8:"x-fb-rev";s:7:"4182821";s:12:"content-type";s:31:"application/json; charset=UTF-8";s:20:"facebook-api-version";s:4:"v2.7";s:13:"cache-control";s:8:"no-store";s:6:"pragma";s:8:"no-cache";s:7:"expires";s:29:"Sat, 01 Jan 2000 00:00:00 GMT";s:16:"www-authenticate";s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";s:4:"vary";s:15:"Accept-Encoding";s:16:"content-encoding";s:4:"gzip";s:10:"x-fb-debug";s:88:"qWvXNUer4chdajX1qWQ0QvsdeSvlIe1G8TYcrvK8UyqNusx0iDM6eKvxgJIDEgu7ezfbK2wtxCj6cdw7BUDglQ==";s:4:"date";s:29:"Tue, 07 Aug 2018 16:47:38 GMT";s:14:"content-length";s:3:"198";}}s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"BOy+HvUJ+4A"}}";s:8:"response";a:2:{s:4:"code";i:403;s:7:"message";s:9:"Forbidden";}s:7:"cookies";a:0:{}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:224:"{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"BOy+HvUJ+4A"}}";s:3:"raw";s:1038:"HTTP/1.1 403 Forbidden
Access-Control-Allow-Origin: *
x-app-usage: {"call_count":0,"total_cputime":0,"total_time":0}
Strict-Transport-Security: max-age=15552000; preload
x-fb-trace-id: BOy+HvUJ+4A
x-fb-rev: 4182821
Content-Type: application/json; charset=UTF-8
facebook-api-version: v2.7
Cache-Control: no-store
Pragma: no-cache
Expires: Sat, 01 Jan 2000 00:00:00 GMT
WWW-Authenticate: OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"
Vary: Accept-Encoding
Content-Encoding: gzip
X-FB-Debug: qWvXNUer4chdajX1qWQ0QvsdeSvlIe1G8TYcrvK8UyqNusx0iDM6eKvxgJIDEgu7ezfbK2wtxCj6cdw7BUDglQ==
Date: Tue, 07 Aug 2018 16:47:38 GMT
Connection: close
Content-Length: 198

{"error":{"message":"(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review","type":"OAuthException","code":200,"fbtrace_id":"BOy+HvUJ+4A"}}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:16:{s:27:"access-control-allow-origin";a:1:{i:0;s:1:"*";}s:11:"x-app-usage";a:1:{i:0;s:49:"{"call_count":0,"total_cputime":0,"total_time":0}";}s:25:"strict-transport-security";a:1:{i:0;s:25:"max-age=15552000; preload";}s:13:"x-fb-trace-id";a:1:{i:0;s:11:"BOy+HvUJ+4A";}s:8:"x-fb-rev";a:1:{i:0;s:7:"4182821";}s:12:"content-type";a:1:{i:0;s:31:"application/json; charset=UTF-8";}s:20:"facebook-api-version";a:1:{i:0;s:4:"v2.7";}s:13:"cache-control";a:1:{i:0;s:8:"no-store";}s:6:"pragma";a:1:{i:0;s:8:"no-cache";}s:7:"expires";a:1:{i:0;s:29:"Sat, 01 Jan 2000 00:00:00 GMT";}s:16:"www-authenticate";a:1:{i:0;s:187:"OAuth "Facebook Platform" "insufficient_scope" "(#200) The permissions publish_actions are not available. It could because either they are deprecated or need to be approved by App Review"";}s:4:"vary";a:1:{i:0;s:15:"Accept-Encoding";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:10:"x-fb-debug";a:1:{i:0;s:88:"qWvXNUer4chdajX1qWQ0QvsdeSvlIe1G8TYcrvK8UyqNusx0iDM6eKvxgJIDEgu7ezfbK2wtxCj6cdw7BUDglQ==";}s:4:"date";a:1:{i:0;s:29:"Tue, 07 Aug 2018 16:47:38 GMT";}s:14:"content-length";a:1:{i:0;s:3:"198";}}}s:11:"status_code";i:403;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:123:"https://graph.facebook.com/v2.2/me/publish?appsecret_proof=66ba5d3c7d9eb1554fcd226a07d3c37d86d4ae1933038df8a06d0c8e0378ebec";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:0:{}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : DD - Comment tester la vitesse d&#039;écriture et de lecture d&#039;un disque ? (IO)</title>
		<link>http://xavki.blog/2018/08/09/linux-dd-comment-tester-la-vitesse-decriture-et-de-lecture-dun-disque-io/</link>
		<pubDate>Thu, 09 Aug 2018 08:53:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=398</guid>
		<description></description>
		<content:encoded><![CDATA[Sysadmin, encore un classique pour vous avec la commande DD. Cette commande permet de recopier des iso sur un disque mais ça on le verra une prochaine fois. Comment tester la vitesse d'écriture ou de lecture sur un disque ? (on parle aussi d'IO).

Voici une commande assez logique :
<pre>└─ $ ▶ dd if=/dev/zero of=tempfile bs=1M count=1024
1024+0 records in
1024+0 records out
1073741824 bytes (1,1 GB, 1,0 GiB) copied, 9,30887 s, 115 MB/s
</pre>
Donc :
<ul>
	<li>if : le fichier input (en l'occurence on peut tester avec /dev/zero)</li>
	<li>of : le fichier output (on teste sur tempfile pour l'exemple)</li>
	<li>bs : taille des blocks</li>
	<li>count : nombre de blocks</li>
</ul>
On a donc un débit d'écriture de 115 MB/s.

Pour la lecture, ile st préférable de vider le cache pour lire sur le disque directement :
<pre>sudo /sbin/sysctl -w vm.drop_caches=3
</pre>
Et maintenant on lance le test :
<pre>└─ $ ▶ dd if=tempfile of=/dev/null bs=1M count=1024
1024+0 records in
1024+0 records out
1073741824 bytes (1,1 GB, 1,0 GiB) copied, 13,3231 s, 80,6 MB/s
</pre>
Rien de plus simple on inverse la première commande. Et là on perd un peu en lecture 80,6 MB/s. Vous avez donc un moyen de voir la qualité de votre clé usb par exemple. Ou vous pouvez aussi faire des tests pour notamment si votre disque est rapide en IOps pour avoir des perfs en écriture (bases de données par exemple).

Et vous vous utilisez DD comment ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date>2018-08-09 09:53:06</wp:post_date>
		<wp:post_date_gmt>2018-08-09 08:53:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-dd-comment-tester-la-vitesse-decriture-et-de-lecture-dun-disque-io</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[399]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1027477870309003265";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[20893435896]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1533804787]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/7b1gKoiwT44]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6433243576993484800]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : Figlet - comment convertir du texte en ASCII ?</title>
		<link>http://xavki.blog/2018/08/16/bash-figlet-comment-convertir-du-texte-en-ascii/</link>
		<pubDate>Thu, 16 Aug 2018 08:55:32 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=405</guid>
		<description></description>
		<content:encoded><![CDATA[Figlet me rappelle un défi de codewars. Le but était sans binaire de convertir des string en ASCII avec une mise en forme particulière. C'est sympa un moment mais bon pour le quotidien il y a plus rapide lol.

Avec Figlet vous allez répidement y prendre goût pour frimer ou pour de l'utile aussi.

Voici comment faire :
<pre>sudo apt-get install figlet

└─ $ ▶ figlet "Xavki"
__  __           _    _ 
\ \/ /__ ___   _| | _(_)
 \  // _` \ \ / / |/ / |
 /  \ (_| |\ V /|   &lt;| |
/_/\_\__,_| \_/ |_|\_\_|
</pre>
Pour le côté plus utile on peut aussi rapidement faire des tableaux :
<pre>└─ $ ▶ figlet -f digital "Xavki"
+-+-+-+-+-+
|X|a|v|k|i|
+-+-+-+-+-+
</pre>
L'option -f permet de changer les fonts. D'ailleurs regardez le man vous avez énormément d'options et vous pouvez aussi télécharger d'autres fontss en ligne. Mais bon souvent c'est plus pour la frime ou le fun.

Il existe d'autres paquets dans le domaine du ascii art :
<pre>sudo apt-get install cowsay
sudo apt-get install asciio

# ou pour convertir une image
jp2a -i --chars="..00xx@@" ubuntu-logo.jpg | tee ubuntu-logo.txt
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date>2018-08-16 09:55:32</wp:post_date>
		<wp:post_date_gmt>2018-08-16 08:55:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-figlet-comment-convertir-du-texte-en-ascii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/j63usUd4SY9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534410135]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21138737800]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1030016882236174338";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6435782587477823488]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/08/06/408/</link>
		<pubDate>Mon, 06 Aug 2018 12:24:13 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2018/08/06/408/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date>2018-08-06 13:24:13</wp:post_date>
		<wp:post_date_gmt>2018-08-06 12:24:13</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>408</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[407]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bash / Shell / Linux</title>
		<link>http://xavki.blog/bash-shell/</link>
		<pubDate>Mon, 06 Aug 2018 12:34:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?page_id=410</guid>
		<description></description>
		<content:encoded><![CDATA[Des tutos, des astuces et pas mal de choses utiles pour utiliser le shell bash :
<ul>
	<li><a href="https://xavki.blog/bash-shell/formation-sysadmin-linux/">Devenir SysAdmin en tutos</a> : suivez toutes les vidéos de Linux 101, 201  et 202 avec Thomas Boutry</li>
	<li><a href="https://xavki.wordpress.com/2018/08/03/bash-archiver-et-historiser-son-historique-de-commandes/">Archiver son historique</a> : loguer ses commandes et les archiver dans un répertoire autrement que par history</li>
	<li><a href="https://xavki.blog/2018/08/31/bash-creer-une-fonction-pour-monter-de-1-ou-plusieurs-niveaux-dans-une-arborescence/">Fonction up()</a> pour remonter facilement d'un ou plusieurs dans l'arborescence</li>
	<li><a href="https://xavki.blog/2018/08/28/bash-template-de-script-avec-parsage-arguments/">Template de script pour récupérer des arguments</a> (on le fait tellement souvent qu'un squelette simplifie la tâche.</li>
	<li><a href="https://xavki.blog/2018/09/12/awklinux-lister-les-processus-non-killable-et-le-stopper-avec-ps-aux-awk/">Tuer les processus non killable</a> : avec l'aide de awk et de ps aux</li>
	<li>Scripting - <a href="https://xavki.blog/2018/08/07/bash-comment-scripter-pour-definir-un-argument-ou-plusieurs-par-defaut/">définir les arguments par défaut</a></li>
	<li><a href="https://xavki.blog/2018/08/09/linux-dd-comment-tester-la-vitesse-decriture-et-de-lecture-dun-disque-io/">Tester les io</a> : comment tester la vitesse d'écriture et de lecture d'un disque ?</li>
	<li><a href="https://xavki.blog/2018/08/24/bash-calculer-frequences-erreurs-apache-logs-seo/">Statistiques des logs apache</a> : comamandes permettant de dresser un bilan des erreurs apache</li>
	<li><a href="https://xavki.blog/2018/08/17/bash-convertir-une-page-man-en-pdf/">Printer une page de man en pdf</a> : bien pratique pour emporter partour vos pages de man</li>
	<li><a href="https://xavki.wordpress.com/2018/07/27/bash-un-arbre-sans-tree-avec-ls-et-sed/">Visualiser une arborescence</a> : sans utiliser tree avec LS et sed</li>
	<li><a href="https://xavki.wordpress.com/2018/07/23/bashawk-lister-les-commandes-le-top-de-vos-commandes/">Top de vos commandes</a> : dresser la liste des commandes que vous utilisez le plus</li>
	<li><a href="https://xavki.wordpress.com/2018/07/18/bash-logger-logs-system-syslog/">Log système</a> : loguer dans syslog</li>
	<li><a href="https://xavki.wordpress.com/2018/07/12/bash-comparer-un-fichier-repertoire-de-deux-serveurs-differents-avec-ssh/">Comparer des répertoires ou fichiers entre 2 serveurs</a> : avec ssh comparer facilement des répertoires ou des fichiers</li>
	<li><a href="https://xavki.wordpress.com/2018/07/06/linux-lister-adresses-ip/">Lister vos adresses ip</a> : connaître ses ip</li>
	<li><a href="https://wordpress.com/stats/post/62/xavki.wordpress.com">Hash de mot de passe</a> : comment générer un mot de passe hashé</li>
	<li><a href="https://xavki.blog/2018/08/16/bash-figlet-comment-convertir-du-texte-en-ascii/">Texte vers ASCII</a> : convertir du texte en ascii</li>
	<li><a href="https://xavki.blog/2018/09/06/python-bash-comment-piper-combiner-du-bash-dans-du-python-c-en-une-ligne/">Piper du bash dans du python</a> : en une ligne avec un python -c</li>
</ul>
Des infos spécifiques à Linux plutôt orientées système :

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>410</wp:post_id>
		<wp:post_date>2018-08-06 13:34:02</wp:post_date>
		<wp:post_date_gmt>2018-08-06 12:34:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bash-shell</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/08/06/411/</link>
		<pubDate>Mon, 06 Aug 2018 12:34:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/2018/08/06/411/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date>2018-08-06 13:34:02</wp:post_date>
		<wp:post_date_gmt>2018-08-06 12:34:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>411</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[410]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1280px-Git-logo.svg</title>
		<link>http://xavki.blog/2018/08/22/utiliser-gitignore-faire-whitelist-gitaccept/1280px-git-logo-svg/</link>
		<pubDate>Tue, 07 Aug 2018 14:14:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/1280px-git-logo-svg.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date>2018-08-07 15:14:06</wp:post_date>
		<wp:post_date_gmt>2018-08-07 14:14:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1280px-git-logo-svg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>413</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/1280px-git-logo-svg.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/1280px-git-logo-svg.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1280;s:6:"height";i:535;s:4:"file";s:96:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/1280px-git-logo-svg.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:28849;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-cropped-pexels-photo-818563.jpeg</title>
		<link>http://xavki.blog/cropped-cropped-pexels-photo-818563-jpeg/</link>
		<pubDate>Thu, 09 Aug 2018 14:42:19 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-818563.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-818563.jpeg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date>2018-08-09 15:42:19</wp:post_date>
		<wp:post_date_gmt>2018-08-09 14:42:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cropped-cropped-pexels-photo-818563-jpeg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-818563.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/cropped-cropped-pexels-photo-818563.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:113:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/cropped-cropped-pexels-photo-818563.jpeg";s:5:"sizes";a:4:{s:13:"site_icon-270";a:4:{s:4:"file";s:48:"cropped-cropped-pexels-photo-818563-270x270.jpeg";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-192";a:4:{s:4:"file";s:48:"cropped-cropped-pexels-photo-818563-192x192.jpeg";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-180";a:4:{s:4:"file";s:48:"cropped-cropped-pexels-photo-818563-180x180.jpeg";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:10:"image/jpeg";}s:12:"site_icon-32";a:4:{s:4:"file";s:46:"cropped-cropped-pexels-photo-818563-32x32.jpeg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:49222;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-cropped-pexels-photo-8185631.jpeg</title>
		<link>http://xavki.blog/cropped-cropped-pexels-photo-8185631-jpeg/</link>
		<pubDate>Thu, 09 Aug 2018 14:42:59 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-8185631.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-8185631.jpeg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date>2018-08-09 15:42:59</wp:post_date>
		<wp:post_date_gmt>2018-08-09 14:42:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cropped-cropped-pexels-photo-8185631-jpeg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/07/cropped-cropped-pexels-photo-8185631.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/cropped-cropped-pexels-photo-8185631.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_context</wp:meta_key>
			<wp:meta_value><![CDATA[custom-logo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:859;s:6:"height";i:300;s:4:"file";s:114:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/07/cropped-cropped-pexels-photo-8185631.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:46824;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>html code</title>
		<link>http://xavki.blog/pexels-photo-965345/</link>
		<pubDate>Mon, 13 Aug 2018 14:33:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/pexels-photo-965345.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Markus Spiske temporausch.com on <a href="https://www.pexels.com/photo/html-code-965345/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date>2018-08-13 15:33:56</wp:post_date>
		<wp:post_date_gmt>2018-08-13 14:33:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-965345</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/pexels-photo-965345.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-965345.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1227;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-965345.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:412072;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Code Games</title>
		<link>http://xavki.blog/code-games/</link>
		<pubDate>Mon, 13 Aug 2018 15:10:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=479</guid>
		<description></description>
		<content:encoded><![CDATA[Liste de jeux à base de codes :
<ul>
	<li><a href="https://ctflearn.com/">CTF Learn</a> : crypto, forensics, injection...</li>
	<li><a href="https://www.codingame.com/">Coding Game</a></li>
	<li><a href="https://www.hackerrank.com/">Hackerank</a></li>
	<li><a href="https://www.codewars.com/">Code wars</a></li>
	<li><a href="https://www.coderbyte.com/">Coder Bytes</a></li>
	<li><a href="https://codesignal.com/">Code signal</a></li>
	<li><a href="https://www.topcoder.com/challenges/">Top coder</a></li>
	<li><a href="https://leetcode.com/">Leet code</a></li>
	<li><a href="https://www.codechef.com/">Code chef</a></li>
	<li><a href="https://www.geeksforgeeks.org/">Geeks for Geeks</a></li>
	<li><a href="http://codeforces.com/">Code forces</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>479</wp:post_id>
		<wp:post_date>2018-08-13 16:10:23</wp:post_date>
		<wp:post_date_gmt>2018-08-13 15:10:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>code-games</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/08/13/480/</link>
		<pubDate>Mon, 13 Aug 2018 15:10:23 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/2018/08/13/480/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>480</wp:post_id>
		<wp:post_date>2018-08-13 16:10:23</wp:post_date>
		<wp:post_date_gmt>2018-08-13 15:10:23</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>480</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[479]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL.svg</title>
		<link>http://xavki.blog/2018/09/20/mysql-diagnostiquer-optimiser-base-et-moteur-mysqltuner/mysql-svg/</link>
		<pubDate>Fri, 17 Aug 2018 11:19:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/mysql-svg.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>509</wp:post_id>
		<wp:post_date>2018-08-17 12:19:56</wp:post_date>
		<wp:post_date_gmt>2018-08-17 11:19:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mysql-svg</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>506</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/mysql-svg.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/mysql-svg.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1280;s:6:"height";i:662;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/mysql-svg.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:36173;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Interagir avec l&#039;utilisateur via un prompt - Awk</title>
		<link>http://xavki.blog/2018/08/21/interagir-utilisateur-prompt-awk/</link>
		<pubDate>Tue, 21 Aug 2018 07:50:37 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[Awk  c'est bien et je l'ai déjà dit on le sous exploite souvent. Il permet souvent de manipuler des fichier notamment des tableaux. Mais bon Awk c'est aussi un language assez complet qui permet de faire des programmes plus étendus et pas que des one-liners.

Le truc bête est méchant c'est de commencer par interagir avec l'utilisateur. Par exemple on va lui poser une question et afficher la réponse. En gros c'est du awk pour les nuls.

Voici comment faire :
<pre>#!/usr/bin/awk  BEGIN{         printf("Entrez votre prénom: ");         getline nom &lt; "-"         print "Bonjour "nom" !" } </pre>Donc tout se devine:
<ul>
 	<li>on oublie pas de préciser la localisation du programme</li>
 	<li>on utilise le BEGIN (début de fichier ou en-tête)</li>
 	<li>on affiche une invite</li>
 	<li>on récupère le contenu rentré par le user et on le sotck dans la variable nom</li>
 	<li>et on affiche le résultat</li>
</ul>Et on exécute façon awk :
<pre>└─ $ ▶ awk -f prompt.awk  Entrez votre prénom: xavki Bonjour xavki ! </pre>

[caption id="attachment_232" align="alignnone" width="1880" height="1318" alt="photo of person holding h cutout decor"]<img src="https://xavki.files.wordpress.com/2018/07/pexels-photo-968243.jpeg?w=1880" class="alignnone size-full wp-image-232" height="1318" alt="photo of person holding h cutout decor" width="1880"> Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2018-08-21 08:50:37</wp:post_date>
		<wp:post_date_gmt>2018-08-21 07:50:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>interagir-utilisateur-prompt-awk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[232]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21302989567]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_date</wp:meta_key>
			<wp:meta_value><![CDATA[2018-08-22]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534837846]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1031810844068335616";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/MFfsDKzYFXG]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6437576549687529472]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : lister et calculer les fréquences des erreurs apache depuis les logs... et un peu de SEO</title>
		<link>http://xavki.blog/2018/08/24/bash-calculer-frequences-erreurs-apache-logs-seo/</link>
		<pubDate>Fri, 24 Aug 2018 07:54:10 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=295</guid>
		<description></description>
		<content:encoded><![CDATA[Comment visualiser la santé d'un serveur web ? ou comment suivre son seo par les logs apache ?
<h2>Statistiques des logs apache</h2>
Dans le premier cas, une partie de la solution  pourrait être de commencer par lister les erreurs apache et de faire quelques statistiques avec. La plupart d'entre vous le savent, les logs apache ce situent dans /var/log/apache2/error.log.

Il peut exister des petites variantes en fonction de la configuration des vhost. Pour vérifier, je vous invite donc à vous rendre dans le vhost en question /etc/apache2/sites-enabled/monvhost. Ouvrez ce fichier et vérifiez la localisation des erreurs, c'est la ligne commençant par "ErrorLog. Parfois à la place de apache2 vous pouvez avoir du httpd suivant les daemons.

<img class="wp-image-296 aligncenter size-full" src="https://xavki.files.wordpress.com/2018/07/images.jpeg" alt="images" width="348" height="145" />

Par exemple, il peut être intéressant de lister les différentes erreurs et de voir celles qui reviennent le plus souvent. Voici comment éplucher /var/log/apache2/error.log à coup de awk. A adapter en fonction de la localisation des logs (à voir avec la conf de vos vhosts).
<pre>cat /var/log/apache2/error.log\
| awk '{out=$9;for(i=9;i&lt;=NF;i++){out=out" "$i}; print out}'\
| sed s/,\ referer.*// | uniq -c | sort -nr</pre>
Donc :
<ul>
	<li>on ouvre error.log</li>
	<li>on remet en forme les erreurs</li>
	<li>on limite les recherches aux lignes qui nous intéressent</li>
	<li>on tri et on regroupe avec sort et uniq</li>
</ul>
Pour aller plus loin, n'oubliez pas que vous pouvez augmenter le niveau de log avec la variable "LogLevel" qui peut prendre la valeur (par ordre de criticité) :
<ul>
	<li>emerg</li>
	<li>alert</li>
	<li>crit</li>
	<li>error</li>
	<li>warn</li>
	<li>notice</li>
</ul>
Enfin, vous pouvez aussi améliorer les lignes de logs en redéfinissant les CustomLog.
<h2>Et le SEO là-dedans ?</h2>
L'idée est simplement d'expertiser le passage des crawler (google ou autres) sur vos url.

Pour ceux qui réalisent du SEO, vous pouvez aussi faire une analyse spécifique des logs. <a href="https://www.antoinebrossault.com/analyse-log-seo-apache2-linux/">Voici un article spécifique sur ce domaine</a> assez pointu. D'autres chercheront à supprimer les logs relatifs au bot SEO car ils leur apporteront peu d'informations utiles.

Et toujours dans le domaine du SEO, pour pousser toujours plus loin votre expertise, vous pouvez installer <a href="https://github.com/cogniteev/oncrawl-elk/">un conteneur docker intitulé oncrawl-elk</a>. Ce conteneur s'installe en parallèle de votre apache. Il vous servira à analyser vos logs apache avec l'aide de kibana, logstash et elasticsearch.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2018-08-24 08:54:10</wp:post_date>
		<wp:post_date_gmt>2018-08-24 07:54:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-calculer-frequences-erreurs-apache-logs-seo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535097413]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6438665244175929344]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1032899538749669376";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[296]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21409373156]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/XwmudYYCSUR]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mettre les log sur une socket pour rendre disponible sur le réseau - Bash</title>
		<link>http://xavki.blog/?p=371</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=371</guid>
		<description></description>
		<content:encoded><![CDATA[A faire
<pre>(echo -e "HTTP/1.1 200 Ok\n\r"; tail -f /tmp/toto) |\
 nc -l 11111
</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>371</wp:post_id>
		<wp:post_date>2018-08-18 20:35:06</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
	</item>
	<item>
		<title>Top commandes linux #4 : bash, factoriel, cut, md5sum, derniers arguments, dcfldd</title>
		<link>http://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/</link>
		<pubDate>Mon, 20 Aug 2018 06:28:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[Chaque semaine je vous propose de faire une liste de commandes qui peuvent sembler utiles. Ne manquez pas ce rendez-vous. Vous pouvez dans tous les cas <a href="https://xavki.blog/top-commandes/">consulter les précédents ici</a>.

<strong># Bash : me rappeler de quitter la session dans 15  min</strong>
<pre>leave +15</pre>
<strong># Bash : calculer le factoriel de N (N! sur votre calculette</strong>
<pre>N=4;echo $(($(seq -s* $N)))</pre>
<strong># DNS : trouvé l'ip externe d'une entrée DNS</strong>
<pre>dig +short url</pre>
<strong>#Cut : récupérer les X premiers caractères d'une ligne</strong>
<pre> cut -c 1-X</pre>
<strong>#MD5 : générer rapidement un mot de passe</strong>
<pre>echo -n "password" | md5sum -</pre>
<strong># Bash : récupérer les arguements de la commande précédente</strong>
<pre>!* : tous les arguments !^ : le premier argument !$ : le dernier argument</pre>
<strong># Bash : lister votre ip primaire</strong>
<pre>ifconfig $(route -n |awk '/0[.]0[.]0[.]0/{print $NF;exit}') | awk '/inet/{print $2}'</pre>
<strong>#Linux : binaire dcfldd pour suivre un DD en live</strong>

<a href="https://leblogdolivyeahh.wordpress.com/2018/08/08/la-commande-dcfldd/">Découvrez ce petit binaire</a> qui permet de voir l'avancement d'un DD.

Enfin le top des articles de la semaine :
<ul>
	<li><a href="https://xavki.blog/2018/08/03/bash-archiver-et-historiser-son-historique-de-commandes/">loguer son historique de commande</a> au fur et à mesure des mois pour ne jamais les perdre</li>
	<li><a href="https://xavki.blog/2018/06/28/devdocs-io-docs-outils-languages/">site devdocs.io</a> pour retrouver toutes les documentations officielles des différents languages en un seul endroit</li>
	<li><a href="https://xavki.blog/2018/07/02/tips-ajouter-des-ip-locales-127-0-0-2/">ajouter des ip locale 127.0.0.2</a> pour développer et tester plus facilement localement</li>
	<li><a href="https://xavki.blog/2018/07/22/tipspython-mettre-a-jour-automatiquement-tous-les-packages/">python - mettre à jour tous les packages</a> très facilement en une commande</li>
	<li><a href="https://xavki.blog/2018/07/16/explainshell-com-se-faire-expliquer-une-ligne-de-commande-bash/">site explainshell.com</a> pour se faire expliquer des lignes de shell comme certains sites le proposent pour les regex</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2018-08-20 07:28:41</wp:post_date>
		<wp:post_date_gmt>2018-08-20 06:28:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21264900986]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/UmS64DGLthM]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534746532]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1031427837910282240";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6437193543336493056]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Comment utiliser gitignore pour faire une whitelist (un gitaccept lol) ? - Git</title>
		<link>http://xavki.blog/2018/08/22/utiliser-gitignore-faire-whitelist-gitaccept/</link>
		<pubDate>Wed, 22 Aug 2018 06:43:15 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[Gitignore est bien pratique car il permet à la base de dire je ne veux pas gitter tel ou tel répertoire ou tel ou tel fichier. Le problème c'est que l'on peut rapidement avoir à gérer une liste longue comme le bras. Voir même on a à gérer les nouveux répertoires et les ajouter dans .gitignore.

La solution c'est de faire l'inverse c'est à dire tout refuser sauf un ou plusieurs répertoires que je liste.

Pour faire cela il faut utiliser "!" et ne pas utiliser tout par défaut, de cette manière :
<pre># file .gitignore /* !/scripts/ </pre>Ainsi on git uniquement le répertoire "scripts".

Vous pouvez retrouver plus de détails sur <a href="https://mirrors.edge.kernel.org/pub/software/scm/git/docs/gitignore.html">la page man de gitignore</a> et <a href="https://jasonstitt.com/gitignore-whitelisting-patterns">un autre exemple ici</a>.

Pendant que j'y suis je viens de découvrir un bon outil sur lequel je dois vous faire un article : tig. C'est un visuel sympa sur l'évolution de votre bracnhe git.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2018-08-22 07:43:15</wp:post_date>
		<wp:post_date_gmt>2018-08-22 06:43:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>utiliser-gitignore-faire-whitelist-gitaccept</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[548]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21336597428]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1032156269400883200";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1534920203]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/WouxZWmqVzZ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6437921980862861312]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : le point sur les dictionnaires et ne pas confondre avec la liste</title>
		<link>http://xavki.blog/2018/08/23/python-le-point-sur-les-dictionnaires-et-ne-pas-confondre-avec-liste/</link>
		<pubDate>Thu, 23 Aug 2018 08:14:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=421</guid>
		<description></description>
		<content:encoded><![CDATA[Actuellement, c'est un des points qui m'ennerve le plus sur Python : les dictionnaires, les listes et les tuples. Quand je crois avoir bien retenu qui est qui et bien je me remélange les pinceaux et je dois me refaire le point régulièrement. Alors lorsque quelqu'un me reparle de "tableau de hashage" et de "nested list" j'en oublie les dictionnaires.

Alors, ce n'est que mon avis, mais en python oubliez les tuples. C'est peu utilisé et il y a assez à faire avec les 2 autres.
<h2>Quelques rappels sur les dictionnaires</h2>
<pre>dico = {   clef:valeur,   clef:valeur,   clef:valeur, } </pre>Donc un tableau de hashage comme certains appellent cela.

Un exemple ?
<pre>age_personne = {   'Xavki':'32',   'Pierre':'40',   'Paul':'53',   'Jacques':'60', }  ou  age_personne = dict(   Xavki='32',   Pierre='40',   Paul='53',   Jacques='60', ) </pre>Contrairement au liste on ne peut pas appeler une clé/valeur par son index mais par sa clef :
<pre>&gt;&gt;&gt; age_personne[1] Traceback (most recent call last):   File "", line 1, in  KeyError: 1  &gt;&gt;&gt; age_personne['Xavki'] '32' </pre>et pour entrer une valeur ou mettre à jour une valeur :
<pre>age_personne['Xavki']=62 &gt;&gt;&gt; age_personne {'Xavki': 62, 'Paul': '53', 'Pierre': '40', 'Jacques': '60'} </pre>
<h2>Et mes listes ?</h2>Alors comment reproduire le système de clef des listes ? faire en sorte que la clef soit un indice :
<pre>age_personne = {   '1':'32',   '2':'40',   '3':'53',   '4':'60', } </pre>Mais attention pas de slice comme dans les listes (c'est à dire d'utiliser des range d'index) et pas de append possible.

Pour le pratico pratique vous pouvez faire mieux avec les dictionnaires en y imbriquant des listes :
<pre>age_personne = dict( Xavki=['32','informaticien','Paris'], Pierre=['40','manager','Tours'], Paul=['52','rh','Toulouse'], Jacques=['63','informaticien','Paris'], ) </pre>et là.... surprise :
<pre>&gt;&gt;&gt; age_personne['Xavki'] ['32', 'informaticien', 'Paris']  &gt;&gt;&gt; age_personne['Xavki'][1] 'informaticien' </pre>C'est plus kool déjà.

Et en plus on peut utiliser des actions spécifiques :
<pre>#on demande les résultats d'une clef avec get &gt;&gt;&gt; age_personne.get('Xavki') ['32', 'informaticien', 'Paris']  #on vide le dictionnaire age.personne.clear()  #on transforme un dictionnaire en "nested lit" liste_age=list(age_personne.items())  #on met dans une liste toutes les clefs list(age_personne.keys())  #pareil sur les valeurs list(age_personne.values())  #on supprime une clef age_personne.pop('Xavki') </pre>Comment alimenter simplement une liste ?

Soit on la créé avec des données que l'on peut entrer à la main facilement (en nombre limitées) :
<pre>maliste = [1,2,3,4,5]</pre>Sinon on peut aussi utiliser les boucles for pour le faire :
<pre>For i in range(1,5):  maliste.append(i)</pre>Ou encore lorsque l'on veut faire court et efficace :
<pre>maliste = [ i for i in range(1,5) ]</pre>La dernière méthode est ma préférée pour éviter de mutliplier le nombre de lignes dans les scripts.

A votre tour de vous amuser. Avez vous des choses à ajouter ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date>2018-08-23 09:14:07</wp:post_date>
		<wp:post_date_gmt>2018-08-23 08:14:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-le-point-sur-les-dictionnaires-et-ne-pas-confondre-avec-liste</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[558]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21374511645]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1032541500943593472";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535012051]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/Vui5E8SDjXA]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6438307205312757760]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ORCL-2</title>
		<link>http://xavki.blog/2018/09/27/oracle-comment-realiser-un-explain-plan/orcl-2/</link>
		<pubDate>Fri, 17 Aug 2018 13:43:36 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/orcl-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date>2018-08-17 14:43:36</wp:post_date>
		<wp:post_date_gmt>2018-08-17 13:43:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>orcl-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>513</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/orcl-2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/orcl-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2138;s:6:"height";i:550;s:4:"file";s:83:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/orcl-2.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:36151;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes</title>
		<link>http://xavki.blog/top-commandes/</link>
		<pubDate>Mon, 20 Aug 2018 19:31:43 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=529</guid>
		<description></description>
		<content:encoded><![CDATA[Voici la liste des articles relevants des commandes linux. Je les estampille top commandes mais ça c'est à vous d'en juger. Le but est avant tout de découvrir de nouvelles lignes de commandes avec des astuces, des rappels et des binaires.

Liste des derniers top commandes linux :
<ul>
	<li><a href="https://xavki.blog/2018/10/01/top-commandes-linux-10-apg/">numéro 10</a> : 01/10/2018</li>
	<li><a href="https://xavki.blog/2018/09/24/top-commandes-linux-9/">numéro 9</a> : 24/09/2018</li>
	<li><a href="https://xavki.blog/2018/09/17/top-commandes-linux-8/">numéro 8</a> : 17/09/2018</li>
	<li><a href="https://xavki.blog/2018/09/10/top-commandes-linux-7/">numéro 7</a> : 10/09/2018</li>
	<li><a href="https://xavki.blog/2018/09/03/top-commandes-linux-6-bash-framework/">numéro 6</a> : 03/09/2018</li>
	<li><a href="https://xavki.blog/2018/08/27/top-commandes-linux-5-vim/">numéro 5</a> : 27/08/2018</li>
	<li><a href="https://xavki.blog/2018/08/20/top-commandes-linux-4-bash-factoriel-cut-md5sum-derniers-arguments/">numéro 4</a> : 20/08/2018</li>
	<li><a href="https://xavki.blog/2018/08/13/commandes-en-vrac-3-vim-python-wireshark-docker-port-finder/">numéro 3</a> : 13/08/2018</li>
	<li><a href="https://xavki.blog/2018/08/06/commandes-linux-en-vrac-2/">numéro 2</a> : 06/08/2018</li>
	<li><a href="https://xavki.blog/2018/07/30/commandes-linux-en-vrac-1/">numéro 1</a> : 30/07/2018</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[Compilation des commandes découvertes chaque semaine.]]></excerpt:encoded>
		<wp:post_id>529</wp:post_id>
		<wp:post_date>2018-08-20 20:31:43</wp:post_date>
		<wp:post_date_gmt>2018-08-20 19:31:43</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>top-commandes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/08/20/530/</link>
		<pubDate>Mon, 20 Aug 2018 19:31:44 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/2018/08/20/530/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>530</wp:post_id>
		<wp:post_date>2018-08-20 20:31:44</wp:post_date>
		<wp:post_date_gmt>2018-08-20 19:31:44</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>530</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>9</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[529]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>building metal house architecture</title>
		<link>http://xavki.blog/pexels-photo-101808-2/</link>
		<pubDate>Tue, 21 Aug 2018 12:21:10 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/pexels-photo-101808.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by PhotoMIX Ltd. on <a href="https://www.pexels.com/photo/building-metal-house-architecture-101808/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>542</wp:post_id>
		<wp:post_date>2018-08-21 13:21:10</wp:post_date>
		<wp:post_date_gmt>2018-08-21 12:21:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-101808-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/pexels-photo-101808.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-101808.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-101808.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:125902;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gitignore</title>
		<link>http://xavki.blog/2018/08/22/utiliser-gitignore-faire-whitelist-gitaccept/gitignore/</link>
		<pubDate>Tue, 21 Aug 2018 19:21:21 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/gitignore.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>547</wp:post_id>
		<wp:post_date>2018-08-21 20:21:21</wp:post_date>
		<wp:post_date_gmt>2018-08-21 19:21:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>gitignore</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>413</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/gitignore.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/gitignore.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:219;s:6:"height";i:63;s:4:"file";s:86:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/gitignore.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:1293;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Capture du 2018-08-21 21:22:11</title>
		<link>http://xavki.blog/2018/08/22/utiliser-gitignore-faire-whitelist-gitaccept/capture-du-2018-08-21-212211/</link>
		<pubDate>Tue, 21 Aug 2018 19:22:28 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/capture-du-2018-08-21-212211.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date>2018-08-21 20:22:28</wp:post_date>
		<wp:post_date_gmt>2018-08-21 19:22:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>capture-du-2018-08-21-212211</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>413</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/capture-du-2018-08-21-212211.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/capture-du-2018-08-21-212211.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:187;s:6:"height";i:79;s:4:"file";s:105:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/capture-du-2018-08-21-212211.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:2312;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tig-2</title>
		<link>http://xavki.blog/?attachment_id=551</link>
		<pubDate>Tue, 21 Aug 2018 19:46:12 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/tig-2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>551</wp:post_id>
		<wp:post_date>2018-08-21 20:46:12</wp:post_date>
		<wp:post_date_gmt>2018-08-21 19:46:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tig-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>550</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/tig-2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/tig-2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:570;s:6:"height";i:62;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/tig-2.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:13143;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tig-1</title>
		<link>http://xavki.blog/?attachment_id=552</link>
		<pubDate>Tue, 21 Aug 2018 19:46:14 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/tig-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>552</wp:post_id>
		<wp:post_date>2018-08-21 20:46:14</wp:post_date>
		<wp:post_date_gmt>2018-08-21 19:46:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tig-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>550</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/tig-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/tig-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:393;s:6:"height";i:403;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/tig-1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:33289;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dictionnary_python</title>
		<link>http://xavki.blog/2018/08/23/python-le-point-sur-les-dictionnaires-et-ne-pas-confondre-avec-liste/dictionnary_python/</link>
		<pubDate>Wed, 22 Aug 2018 08:13:01 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/dictionnary_python.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>557</wp:post_id>
		<wp:post_date>2018-08-22 09:13:01</wp:post_date>
		<wp:post_date_gmt>2018-08-22 08:13:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>dictionnary_python</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>421</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/dictionnary_python.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/dictionnary_python.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:196;s:6:"height";i:174;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/dictionnary_python.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:5525;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>dictionnaire_python</title>
		<link>http://xavki.blog/2018/08/23/python-le-point-sur-les-dictionnaires-et-ne-pas-confondre-avec-liste/dictionnaire_python/</link>
		<pubDate>Wed, 22 Aug 2018 08:16:40 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/dictionnaire_python.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>558</wp:post_id>
		<wp:post_date>2018-08-22 09:16:40</wp:post_date>
		<wp:post_date_gmt>2018-08-22 08:16:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>dictionnaire_python</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>421</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/dictionnaire_python.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/dictionnaire_python.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:130;s:6:"height";i:89;s:4:"file";s:96:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/dictionnaire_python.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:3507;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>alias-query</title>
		<link>http://xavki.blog/?attachment_id=564</link>
		<pubDate>Wed, 22 Aug 2018 13:20:33 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/10/alias-query.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>564</wp:post_id>
		<wp:post_date>2018-08-22 14:20:33</wp:post_date>
		<wp:post_date_gmt>2018-08-22 13:20:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>alias-query</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>562</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/10/alias-query.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/alias-query.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:508;s:6:"height";i:138;s:4:"file";s:88:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/alias-query.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:20050;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>file-manager-python</title>
		<link>http://xavki.blog/?attachment_id=568</link>
		<pubDate>Wed, 22 Aug 2018 19:53:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/file-manager-python.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>568</wp:post_id>
		<wp:post_date>2018-08-22 20:53:41</wp:post_date>
		<wp:post_date_gmt>2018-08-22 19:53:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>file-manager-python</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>567</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/file-manager-python.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/file-manager-python.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:905;s:6:"height";i:433;s:4:"file";s:96:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/file-manager-python.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:120414;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>file_manager</title>
		<link>http://xavki.blog/?attachment_id=569</link>
		<pubDate>Wed, 22 Aug 2018 19:53:48 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/file_manager.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>569</wp:post_id>
		<wp:post_date>2018-08-22 20:53:48</wp:post_date>
		<wp:post_date_gmt>2018-08-22 19:53:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>file_manager</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>567</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/file_manager.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/file_manager.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:520;s:6:"height";i:409;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/file_manager.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:22850;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>food knife dill chopped</title>
		<link>http://xavki.blog/food-vegetables-wood-knife/</link>
		<pubDate>Sat, 25 Aug 2018 13:15:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/food-vegetables-wood-knife.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Tookapic on <a href="https://www.pexels.com/photo/food-knife-dill-chopped-8446/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>607</wp:post_id>
		<wp:post_date>2018-08-25 14:15:06</wp:post_date>
		<wp:post_date_gmt>2018-08-25 13:15:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>food-vegetables-wood-knife</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/food-vegetables-wood-knife.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/food-vegetables-wood-knife.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1258;s:4:"file";s:103:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/food-vegetables-wood-knife.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:234008;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Postgresql] : Appliquer un GRANT à toutes les séquences d&#039;une base</title>
		<link>http://xavki.blog/2018/08/30/postgresql-appliquer-un-grant-a-toutes-les-sequences-dune-base/</link>
		<pubDate>Thu, 30 Aug 2018 13:15:13 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[Vous utilisez postgresql, cet article est pour vous ? Encore une fois rien de bien compliqué mais de l'élémentaire et efficace. Si vous faites souvent des imports de base sans reprendre tous les GRANT (droits) qui vont bien, vous vous retrouvez à faire des ALTER sur les tables pour redonner les bons droits aux bons users (utilisateurs).

Mais pour les séquences ça peut se compliquer car vous n'avez pas de possibilité de faire cela en masse comme on peut faire un "GRANT ALL ON ALL TABLES". Du coup on va quand même pas se palucher les droits à la main non ? et pis quoi encore lol.

Bon les DBA postgresql le savent il suffit de faire une petite boucle qui va bien comme ceci :
<code>echo "select sequence_name FROM information_schema.sequences" | psql --cluster 9.4/main -d madatabase | grep -v '('|awk '{print "GRANT ALL ON TABLE madatabase."$1" TO monuser;"}' &gt; maj_grant_monuser.sql
</code>
Pas trop compliqué :
<ul>
	<li>On liste les séquences de la base</li>
	<li>on vire la ligne vide</li>
	<li>on édite une line GRANT sur la séquence</li>
	<li>on ajoute cette ligne dans un fichier sql</li>
</ul>
Il vous reste ensuite à lancer ce script et le tour est joué. Dans mon cas, j'ai indiqué --cluster pour le cas où on a plusieurs cluster sur la machine sinon viré l'option et l'argument.

[caption id="attachment_87" align="alignnone" width="1817"]<img class="alignnone size-full wp-image-87" src="https://xavki.files.wordpress.com/2018/07/pexels-photo-296878.jpeg" alt="box business celebrate celebration" width="1817" height="1300" /> Photo by rawpixel.com on <a href="https://www.pexels.com/" rel="nofollow">Pexels.com</a>[/caption]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2018-08-30 14:15:13</wp:post_date>
		<wp:post_date_gmt>2018-08-30 13:15:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>postgresql-appliquer-un-grant-a-toutes-les-sequences-dune-base</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="postgresql"><![CDATA[Postgresql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1035153997739507712";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535634917]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21618379151]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/Spb9sxUvCYQ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6440919705703321600]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : template de script avec parsage d&#039;arguments</title>
		<link>http://xavki.blog/2018/08/28/bash-template-de-script-avec-parsage-arguments/</link>
		<pubDate>Tue, 28 Aug 2018 12:48:27 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[Créer un script bash c'est toujours un peu le même principe. On peut donc s'oirenter vers un squelette, une sorte de template. Le principe étant d'avoir toujours une trame permettant de passer comme arguments : le mode verbeux, un fichier ou une aide.

Ainsi vous n'aurez plus besoin de chercher comment parser les arguments, quoi écrire pour commencer et comment le faire pour mettre en place le --help.

Voici donc <a href="https://github.com/priximmo/oneliner/blob/master/bash_arguments_template.sh">ce bout de code</a> qui j'espère vous sera utile :

<img class="alignnone size-full wp-image-281" src="https://xavki.files.wordpress.com/2018/07/screenshot-from-2018-07-24-14-46-15.png" alt="Screenshot from 2018-07-24 14-46-15" width="570" height="525" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2018-08-28 13:48:27</wp:post_date>
		<wp:post_date_gmt>2018-08-28 12:48:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-template-de-script-avec-parsage-arguments</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[282]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1034424116303093760";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/hd8K88dUMer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535460901]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21545669373]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6440189823843209216]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[xavki]]></wp:comment_author>
			<wp:comment_author_email>xavier.pestel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog</wp:comment_author_url>
			<wp:comment_author_IP>80.215.100.239</wp:comment_author_IP>
			<wp:comment_date>2018-08-30 14:16:52</wp:comment_date>
			<wp:comment_date_gmt>2018-08-30 13:16:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ok merci. Mais c'est bien pris en comtpe par google ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>44</wp:comment_parent>
			<wp:comment_user_id>130948697</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1535635015]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535635014]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535635014.884896;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[hdrapin]]></wp:comment_author>
			<wp:comment_author_email>hdrapin@mac.com</wp:comment_author_email>
			<wp:comment_author_url>http://hdrapin.com</wp:comment_author_url>
			<wp:comment_author_IP>80.12.38.240</wp:comment_author_IP>
			<wp:comment_date>2018-08-30 08:02:50</wp:comment_date>
			<wp:comment_date_gmt>2018-08-30 07:02:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Vous devriez utiliser les tag [code] et [\code]  les permettait de copier le code :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1473166</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535612571]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535621327.648959;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535612572.239493;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"hdrapin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1535621327]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535614817.761456;s:5:"event";s:17:"status-unapproved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Python] : lire et écrire facilement dans un fichier avec PATHLIB ... et un peu plus</title>
		<link>http://xavki.blog/2018/08/29/python-lire-et-ecrire-facilement-dans-un-fichier-avec-pathlib/</link>
		<pubDate>Wed, 29 Aug 2018 15:01:48 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=313</guid>
		<description></description>
		<content:encoded><![CDATA[PathLib est un module Python qui mérite d'être un peu plus connu. En effet, ce module permet de lire ou d'écrire dans un fichier en quelques lignes très courtes. Jusqu'ici pour lire un fichier il faut faire :
<pre>alire = open("fichier.txt", "r")
for ligne in alire:
  print(ligne)

alire.close()
</pre>
idem pour écrire :
<pre>aecrire = open("fichier.txt", "a")
aecrire.write("Salut !!!")
aecrire.close()
</pre>
Avec le module pathlib, les choses sont plu simples :
<pre>from pathlib import Path
fichier = Path('fichier.txt')

#pour écrire
fichier.write_text("Pathlib is great")

#pour lire
print(fichier.read_text())
</pre>
Voilà pour un exemple concernant la manipulation d'un fichier.

PathLib c'est aussi d'autres actions vous l'imaginez bien. Ce module vous permettra aussi d'agir sur les répertoires :
<pre># vérifier l'existence du répertoire
Path('/home/xavki').exists()False

# créer le répertoire
Path('/home/xavki').mkdir()

# vérifier si l'objet est un répertoire
Path('/home/xavki').is_dir()</pre>
PathLib c'est aussi parcourir facilement une arborescence  et y rechercher certains fichiers (exemple avec les fichiers sql du répertoire /home/xavki :
<pre>[fichier for fichier in Path('/home/xavki').glob('*.sql')]</pre>
Pour mémoire, le module "os" parcourt aussi les arbres avec "os.walk()".

Et vous ? vous êtes plutôt "os" ou "pathlib" ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2018-08-29 16:01:48</wp:post_date>
		<wp:post_date_gmt>2018-08-29 15:01:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-lire-et-ecrire-facilement-dans-un-fichier-avec-pathlib</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1034818428379521025";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535554912]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/7o7bwD7uFbb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[315]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21585362380]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6440584133587668992]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[hdrapin]]></wp:comment_author>
			<wp:comment_author_email>hdrapin@mac.com</wp:comment_author_email>
			<wp:comment_author_url>http://hdrapin.com</wp:comment_author_url>
			<wp:comment_author_IP>80.12.38.240</wp:comment_author_IP>
			<wp:comment_date>2018-08-30 08:01:15</wp:comment_date>
			<wp:comment_date_gmt>2018-08-30 07:01:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Super, merci je ne connaissais pas ... habitué à utiliser os.walk]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1473166</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1535635035]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535612477]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535612477.759075;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"hdrapin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535635036.360524;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535614814.215116;s:5:"event";s:17:"status-unapproved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[xavki]]></wp:comment_author>
			<wp:comment_author_email>xavier.pestel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog</wp:comment_author_url>
			<wp:comment_author_IP>80.215.100.239</wp:comment_author_IP>
			<wp:comment_date>2018-08-30 14:18:52</wp:comment_date>
			<wp:comment_date_gmt>2018-08-30 13:18:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merci pour le commentaire. Idem avant que je découvre PATHLIB qui est plutôt pratique à utiliser.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>43</wp:comment_parent>
			<wp:comment_user_id>130948697</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535635133]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535635134.47831;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1535635135]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[[Python] : comment lire les lignes d&rsquo;un fichier tout simplement ? read et readline &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/13/python-comment-lire-les-lignes-dun-fichier-tout-simplement-read-et-readline/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.91.174</wp:comment_author_IP>
			<wp:comment_date>2018-09-13 08:53:47</wp:comment_date>
			<wp:comment_date_gmt>2018-09-13 07:53:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Pour faire lire des lignes ou même en écrire de manière simple, vous pouvez aussi vous reporter à cet article précédent sur le module PATHLIB. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1536825227]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536825227.33707;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[bash] : créer une fonction pour monter de 1 ou plusieurs niveaux dans une arborescence</title>
		<link>http://xavki.blog/2018/08/31/bash-creer-une-fonction-pour-monter-de-1-ou-plusieurs-niveaux-dans-une-arborescence/</link>
		<pubDate>Fri, 31 Aug 2018 09:04:57 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=326</guid>
		<description></description>
		<content:encoded><![CDATA[Pour gagner du temps l'idéal est de personnaliser votre .bashrc en y créant des alias. Mais pour aller encore un peu plus loin vous pouvez y ajouter des fonctions cela permet d'aller un peu plus loin que les alias.

Par exemple, je vous propose une fonction qui vous permettra de remonter facilement dans une arborescence. Vous pouvez la nommer comme vous voulez prenons par exemple up.
<pre>up() { if [ "${1/[^0-9]/}" == "$1" ]; 
then p=./; for i in $(seq 1 $1); 
do p=${p}../; done; cd $p; 
else echo 'usage: up N'; fi }
export -f up
</pre>
Cete fonction peut-être lancée soit en tapant un simple "up" dans ce cas vous remontez d'un niveau (1 directory) ou "up 3" pour remonter de 3 niveaux directement. Très efficace.

Donc plus expliciter un peu cette ligne de code :
<ul>
	<li>avec le if on vérifie si on a un argument ou pas</li>
	<li>si on a un arguement on fait une séquence sui va permettre de répéter "../"</li>
	<li>sinon on remonte d'un niveau seulement</li>
	<li>on oublie pas d'exporter cette fonction pour qu'elle soit utilisable</li>
	<li>et surtout après ajout on source .bashrc</li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>326</wp:post_id>
		<wp:post_date>2018-08-31 10:04:57</wp:post_date>
		<wp:post_date_gmt>2018-08-31 09:04:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-creer-une-fonction-pour-monter-de-1-ou-plusieurs-niveaux-dans-une-arborescence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[127]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/P7UnPg3RiPp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535707397]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21647724291]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1035457997827440640";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6441223704146903040]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #7 : git, bgplot, pacvim, loop/useradd, ln -s à la volée &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/10/top-commandes-linux-7/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.91.170</wp:comment_author_IP>
			<wp:comment_date>2018-09-10 08:06:03</wp:comment_date>
			<wp:comment_date_gmt>2018-09-10 07:06:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Remonter facilement dans l&rsquo;arborescence avec une fonction bash [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1536563163]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536563163.947468;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Awk] : convertir un csv en sql</title>
		<link>http://xavki.blog/2018/09/05/awk-convertir-un-csv-en-sql/</link>
		<pubDate>Wed, 05 Sep 2018 08:37:44 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=349</guid>
		<description></description>
		<content:encoded><![CDATA[Encore une petite commande pour débuter et bien pratique. Nhésitez pas en commentaire à partager votre expérience sur ce genre de conversion.

Awk va nous permettre de facilement convertir un csv en sql. D'ailleurs je suis en train de me dire qu'il faudrait que je passe un peu de temps dessus pour faire en sorte qu'il s'adapte automatiquement à toutes les longueurs de csv voir à récupérer l'entête pour les noms de champs ça serait plus malin.

En tout cas pour l'instant voici comment j'utilise régulièrement awk pour convertir mes fichiers csv (ou autre parfois) en sql.
<pre># contenu du csv
cat attention.csv 
1;xav;dd;25d;28
2;paul;aa;25f;100

# ligne de commande
cat attention.csv | awk -F ";" '{print "INSERT INTO matable (champs1, champs2, champs3, champs4, champs5) values ('\''"$1"'\'', '\''"$2"'\'', '\''"$3"'\'', '\''"$4"'\'', '\''"$5"'\'');"}'

# le résultat
INSERT INTO matable (champs1, champs2, champs3, champs4, champs5) values ('1', 'xav', 'dd', '25d', '28');
INSERT INTO matable (champs1, champs2, champs3, champs4, champs5) values ('2', 'paul', 'aa', '25f', '100');
INSERT INTO matable (champs1, champs2, champs3, champs4, champs5) values ('3', 'thierry', 'bb', '14g', '75');

</pre>
Donc :
<ul>
	<li>tout simplement on défini le séparateur avec -F</li>
	<li>on print en insérant les variable des champs</li>
	<li>la seule suptilité c'est d'échapper les quotes.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>349</wp:post_id>
		<wp:post_date>2018-09-05 09:37:44</wp:post_date>
		<wp:post_date_gmt>2018-09-05 08:37:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awk-convertir-un-csv-en-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21813739720]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[350]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536136664]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1037258474185416705";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/c2qqY2oQvv7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;O:8:"WP_Error":2:{s:6:"errors";a:1:{s:19:"http_request_failed";a:1:{i:0;s:79:"cURL error 7: Failed to connect to api.linkedin.com port 80: Connection refused";}}s:10:"error_data";a:0:{}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : convertir le résultat d&#039;une commande en image png</title>
		<link>http://xavki.blog/2018/09/07/tips-convertir-le-resultat-dune-commande-en-image-png/</link>
		<pubDate>Fri, 07 Sep 2018 11:23:24 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=353</guid>
		<description></description>
		<content:encoded><![CDATA[Petite astuce en une ligne une fois de plus. Comment récupérer le résultat d'une commande pour en faire une image ?

Convert répond à cette question sans difficulté.

Pour cela il faut installer le paquet imagemagick.
<pre>sudo apt-get install imagemagick

#exemple avec ifconfig
convert label:"$(ifconfig)" mesips.png
</pre>
Ce qui est bien c'est que l'image est directement de la bonne taille. Si vous regardez dans le man de convert, vous pourrez trouver une multitude d'option qui permet de créer des images pour faire plein de choses. On y reviendra surement car j'ai deux trois idées dans la tête.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>353</wp:post_id>
		<wp:post_date>2018-09-07 12:23:24</wp:post_date>
		<wp:post_date_gmt>2018-09-07 11:23:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-convertir-le-resultat-dune-commande-en-image-png</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[354]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1038027651007561728";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536320049]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21891507334]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/XfbwVFrGuFK]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6443793357218082816]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #8 : vim, git, od, sql, convert, aria2c &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/17/top-commandes-linux-8/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.212</wp:comment_author_IP>
			<wp:comment_date>2018-09-17 09:14:26</wp:comment_date>
			<wp:comment_date_gmt>2018-09-17 08:14:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Sur le blog l&rsquo;article qui a le plus cartonné la semaine c&rsquo;est celui avec la petite astuce pour imprimer la sortie d&rsquo;une commande dans un png. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1537172067]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1537172068.509084;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #7 : git, bgplot, pacvim, loop/useradd, ln -s à la volée &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/10/top-commandes-linux-7/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.91.170</wp:comment_author_IP>
			<wp:comment_date>2018-09-10 08:06:01</wp:comment_date>
			<wp:comment_date_gmt>2018-09-10 07:06:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Convertir l&rsquo;output d&rsquo;une commande en png : super pratique [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536563161.830167;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1536563161]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Top commandes linux #5 : vim, apropos, glances, gs, nl, sed /pattern/, timeout</title>
		<link>http://xavki.blog/2018/08/27/top-commandes-linux-5-vim/</link>
		<pubDate>Mon, 27 Aug 2018 07:50:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=425</guid>
		<description></description>
		<content:encoded><![CDATA[Un rendez-vous que je vous donne chaque lundi pour découvrir des commandes. Pas de grandes formalités dans ces articles, juste des commandes souvent sur une ligne façon oneliner. Vous pouvez retrouver facilement <a href="https://xavki.blog/top-commandes/">les précédentes éditions des top commandes sur cette page</a>.

<strong># Vim : remplacement sur un range de lignes</strong>
<pre>:10,30s/";"/","/g</pre>
<strong># Bash : apropos pour trouver les commandes similaires</strong>
<pre>:~$ apropos grep
grep-aptavail (1)    - Rechercher dans des fichiers de contrôle Debian
grep-available (1)   - Rechercher dans des fichiers de contrôle Debian
grep-dctrl (1)       - Rechercher dans des fichiers de contrôle Debian
grep-debtags (1)     - Rechercher dans des fichiers de contrôle Debian
grep-excuses (1)     - Rechercher les fichiers d'excuses pour testing d'un responsable
grep-status (1)      - Rechercher dans des fichiers de contrôle Debian
...
</pre>
<strong># Bash inverser un contenu</strong>
<pre>echo "salut" | rev
tulas</pre>
<strong># GS : convertir un pdf en png </strong>
<pre>for f in *.pdf; do gs -dNOPAUSE -dBATCH -sDEVICE=png16m -sOutputFile="${f%.pdf}/${f%.pdf}%d.png" -r700x600 "$f" ;done</pre>
<strong># Sed</strong>

Sélectionner des lignes à partir d'un pattern.
<pre>sed -n "/pattern/p" fichier</pre>
<strong># NL</strong>

Afficher le numéro de ligne comme dans un cat option -n
<pre>nl fichier.txt</pre>
<strong># Timeout</strong>

Lancer un timeout sur une commande au bout d'un certain laps de temps
<pre>timeout 30m ma_commande</pre>
<strong># Glances</strong>
Découvrez Glances <a href="https://monptitnuage.wordpress.com/2018/08/09/superviser-son-systeme-avec-glances/">dans un bon article</a> du blog geek mon petit nuage.

Et enfin les articles qui ont cartonnés sur le blog au cours de la semaine dernière :
<ul>
	<li><a href="https://xavki.blog/2018/07/29/linux-iptables-les-principales-commandes-a-retenir-pour-votre-firewall/">les principales commandes à retenir sur ipTables</a> pour commencer à mettre en place votre parefeu</li>
	<li><a href="https://xavki.blog/2018/08/03/bash-archiver-et-historiser-son-historique-de-commandes/">archiver son historique de commandes</a> pour ne pas perdre tout ce que vous avez tapé dans votre terminal</li>
	<li><a href="https://xavki.blog/2018/07/13/killer-les-process-sur-le-port-80/">tuer les processus en écoute sur un port particulier</a> par example sur le port 80 par sécurité si vous avez des doutes à un moment donné</li>
	<li><a href="https://xavki.blog/2018/06/26/remplacer-pattern-dans-plusieurs-fichiers/">remplacer un motif/pattern dans des fichiers</a> situés sur votre machine en une commande</li>
	<li><a href="https://xavki.blog/2018/08/17/bash-convertir-une-page-man-en-pdf/">imprimer une page de man dans un fichier pdf</a> pour l'emmener partout (y compris sur un os windos lol)</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>425</wp:post_id>
		<wp:post_date>2018-08-27 08:50:41</wp:post_date>
		<wp:post_date_gmt>2018-08-27 07:50:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-5-vim</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535356245]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21502927254]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1033985157915701248";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/edSXC9mMaqh]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6439750862779879424]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[monptitnuage]]></wp:comment_author>
			<wp:comment_author_email>monwebmail@protonmail.ch</wp:comment_author_email>
			<wp:comment_author_url>http://monptitnuage.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>86.196.164.42</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 20:05:14</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 19:05:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Merci pour le partage vers mon article ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>134152231</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535397022.029545;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535397028.710657;s:5:"event";s:17:"status-unapproved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535397035.57497;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>comment_like_count</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535397016.245283;s:5:"event";s:17:"status-unapproved";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535396715]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535396715.942349;s:5:"event";s:9:"check-ham";s:4:"user";s:12:"monptitnuage";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1535397035]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[xavki]]></wp:comment_author>
			<wp:comment_author_email>xavier.pestel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog</wp:comment_author_url>
			<wp:comment_author_IP>80.215.95.175</wp:comment_author_IP>
			<wp:comment_date>2018-08-27 20:11:06</wp:comment_date>
			<wp:comment_date_gmt>2018-08-27 19:11:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bonsoir, c'est normal ton article est très complet et présente très bien l'outil.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>39</wp:comment_parent>
			<wp:comment_user_id>130948697</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>email_notification_notqueued</wp:meta_key>
				<wp:meta_value><![CDATA[1535397069]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1535397067]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1535397068.561285;s:5:"event";s:9:"check-ham";s:4:"user";s:5:"xavki";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Python] :comment créer une fonction pour lancer vos regex ? (exemple : capture d&#039;une ip)</title>
		<link>http://xavki.blog/2018/09/04/python-comment-creer-une-fonction-pour-lancer-vos-regex-exemple-capture-dune-ip/</link>
		<pubDate>Tue, 04 Sep 2018 08:06:17 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=427</guid>
		<description></description>
		<content:encoded><![CDATA[Si vous développez un peu de script en python, vous vous rendrez compte que vous pouvez parfois appeler de très nombreuses fois le module regex et que à chaque fois (quasiment), vous devrez :
<ul>
	<li>compilez la regex (son pattern)</li>
	<li>appliquer une classe (search assez souvent)</li>
	<li>si vous utilisez classe vous retournerez souvent la sous classe group(1)</li>
</ul>
Ben oui c'est répétitif. En grosse faignasse, on fait des copier/coller au début... je sais je suis passé par là.

Bref si vous le faites une fois dans votre script ou site ça va mais ce n'est pas souvent le cas. Au -delà de 2 fois, il faut créer une fonction ya pas de lézard comme dirait l'autre.

Je vous propose cette petite fonction clef en main et adaptable bien sûr (ou pourrait par exemple lui passer un paramètre supplémentaire, le numéro de group).
<pre>#on oublie pas l'import du module re

import re

#puis la fonction
def regex(reg,line):
        var=re.compile(reg)
        return var.search(line).group(1) if var.search(line) else ""

# que l'on utilise comme ceci
ip=regex("((([0-9]{1,3})(\.)){3}[0-9]{1,3})",ligne)

</pre>
Donc un peu d'explication de code :
<ul>
	<li>on import re</li>
	<li>on défini une fonction récupérant deux arguements
<ul>
	<li>reg : le pattern</li>
	<li>line : la ligne à analysée</li>
</ul>
</li>
	<li>on compile la regex</li>
	<li>on retourne :
<ul>
	<li>si on trouve rien "" un vide</li>
	<li>sinon la valeur de group(1)</li>
</ul>
</li>
</ul>
Pour l'exemple, vous l'aurez reconnu c'est la capture d'une ip dans la variable ligne (à définir). Et vous comment faites vous ? j'imagine que certains font beaucoup mieux.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2018-09-04 09:06:17</wp:post_date>
		<wp:post_date_gmt>2018-09-04 08:06:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-creer-une-fonction-pour-lancer-vos-regex-exemple-capture-dune-ip</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[315]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1036888175308886017";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21776200883]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536048378]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/SRU7hRAESbs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6442653882056347648]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #7 : git, bgplot, pacvim, loop/useradd, ln -s à la volée &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/10/top-commandes-linux-7/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.91.170</wp:comment_author_IP>
			<wp:comment_date>2018-09-10 08:06:05</wp:comment_date>
			<wp:comment_date_gmt>2018-09-10 07:06:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] La fonction python pour les regex [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1536563165]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1536563165.650743;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Python][Bash] : comment piper (combiner) du bash dans du python -c en une ligne ? façon oneliner</title>
		<link>http://xavki.blog/2018/09/06/python-bash-comment-piper-combiner-du-bash-dans-du-python-c-en-une-ligne/</link>
		<pubDate>Thu, 06 Sep 2018 09:42:42 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=434</guid>
		<description></description>
		<content:encoded><![CDATA[Peut-être un peu pour la frime et d'autres pour tester certainement. Nombreux sommes nous à vouloir faire un truc bizare en combinant, comme le fait si bien perl, du bash et du python. Mais python n'est pas un animal facile. Vous allez le voir il faut faire preuve d'imagination.

Voici par exemple comment faire un cat et le reprendre dans python pour extraire.
<pre>cat /var/log/syslog | python -c "import sys;
import re;
reg=re.compile('(21:.*)');
[ligne for ligne in sys.stdin if sys.stdout.write(reg.search(ligne).group(1))+'\n']"
</pre>
C'est chaud un peu non ?

Expliquons ce "oneline", un peu tiré par les cheveux :
<ul>
	<li>le cat on revient pas dessus avec un pipe pour passer les données à la commande suivante</li>
	<li>python -c : -c pour passer des commandes (on est pas dans un fichier de script)</li>
	<li>import sys : pour le module système</li>
	<li>import re : pour les regex</li>
	<li>re.compile pour compiler le pattern de la regex</li>
	<li>ensuite on récupère ligne par ligne sys.stdin (la sortie stdin correspond au pipe du cat)</li>
	<li>puis on écrit dans stdout le résultat de la regex (group 1)</li>
</ul>
On peut faire un peu plus simple par exemple pour reprendre un cat :
<pre>ps aux | python -c "import sys; print sys.stdin.read()"
</pre>
Alors est-ce que vous êtes toujours chaud pour faire du one line avec Python ? un peu moins ? Perso je préfère largement perl pour faire ce genre d'action si nécessaire. Awk est aussi pas mal dans son genre.
<pre>## en perl :
cat /var/log/syslog |
perl -nle 'm{(21.*)} and print $1'

## en awk
cat /var/log/syslog |
awk 'match($0, /(21.*)/){print substr($0, RSTART, RLENGTH)}'
</pre>
Il faut savoir qu'il existe <a href="http://jagt.github.io/python-single-line-convert/">aussi des scripts python qui permettent de simplifier le travail</a> mais bon c'est pas classe intellectuellement lol.

et vous vous pratiquez ce genre de commande ? partagez vos oneline]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2018-09-06 10:42:42</wp:post_date>
		<wp:post_date_gmt>2018-09-06 09:42:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-bash-comment-piper-combiner-du-bash-dans-du-python-c-en-une-ligne</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[110]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1037637230657974272";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/GuZfRUfHVjc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536226966]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21852213616]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6443402936784691200]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes linux #6 : bash framework, ffmpeg, column, Vim, PL/SQL</title>
		<link>http://xavki.blog/2018/09/03/top-commandes-linux-6-bash-framework/</link>
		<pubDate>Mon, 03 Sep 2018 12:05:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=444</guid>
		<description></description>
		<content:encoded><![CDATA[<strong># column</strong>

Remplacer les points virgules par des tabulation en mode colonne
<pre class="language-bash"><code class="language-bash">column -t -s <span class="token string">';'</span> fichier.csv</code></pre>
<strong># yes</strong>

Approuver toutes les question d'une commande
<pre>yes | rm toto.txt</pre>
<strong># Vim</strong>

encryption symétrique avec Vim
<pre>:X</pre>
# tig

outil visuel pour suivre votre branche git
<pre>sudo apt-get install tig
tig</pre>
<strong># ffmpeg</strong>

Splitter un mp3 pour ne conserver que de 1 minute à 2 minutes (une plage de temps)
<pre class="language-bash"><code class="language-bash">ffmpeg -i fichier.mp3 -ss 00:01:00 -to 00:02:00 -c copy nouveau_fichier.mp3</code></pre>
<strong># Bash : framework</strong>

Découvrez le framework bash<a href="https://invent.life/project/bash-infinity-framework"> nommé infinity</a>.

<strong># PLSQL : top recommandation</strong>

Quelques conseils Oracle sur le PLSQL en vidéo.

https://www.youtube.com/watch?v=vR8uDZ-u0aI]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>444</wp:post_id>
		<wp:post_date>2018-09-03 13:05:02</wp:post_date>
		<wp:post_date_gmt>2018-09-03 12:05:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-6-bash-framework</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1036585866406318080";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/Nir7CfMLZ1M]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21746963300]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1535976303]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6442351570226155520]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes linux #7 : git, bgplot, pacvim, loop/useradd, ln -s à la volée</title>
		<link>http://xavki.blog/2018/09/10/top-commandes-linux-7/</link>
		<pubDate>Mon, 10 Sep 2018 07:05:35 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[Je vous laisse découvrir ce nouveau tour des commandes du moment. Et n'oubliez pas que <a href="https://xavki.blog/top-commandes/">vous pouvez les retrouver sur cette page</a>.

<strong># Git</strong>

Supprimer les fichiers classés comme "deleted"
<pre>git rm $(git ls-files --deleted)</pre>
<strong># Liens symboliques</strong>

Créer un mirroir d'un répertoire automatiquement avec des liens symboliques vers tous les fichiers
<pre>└─ $ ▶ find ~/source/ -type f -print0 | xargs -0 -n1 -I{} ln -s '{}' ~/mirroir/</pre>
<strong># Find/xargs/du/sort</strong>

Lister un type de fichiers, déterminer leurs volumes et classer par ordre décroissant
<pre><span class="command code bash hljs">find . -name <span class="hljs-string">'*.js'</span> | xargs du -bc -h | sort -k1,1 -h</span></pre>
<strong># stat</strong>

Connaître la taille d'un fichier en bytes. Stat permet plus globalement de connaitre les infos de la table inode d'un fichier.
<pre><span class="command code bash hljs">stat -c %s filename</span></pre>
<strong># useradd</strong>

Créer une liste d'utilisateurs à partir d'un fichier csv et sur une ligne
<pre>awk -F ";" '{print $1}' users.csv \
while read -r utilisteur ;\
do useradd -m -d /home/$utilisteur -G users $utilisteur;\
echo $utilisteur" créé";\
done</pre>
<strong>#  Pacvim</strong>

Apprendre à utiliser vim par le jeu avec pacvim

<a href="https://github.com/jmoon018/PacVim">https://github.com/jmoon018/PacVim</a>

<strong># Python: faire des graphique</strong>

<a href="https://github.com/bloomberg/bqplot">Découvrez bqplot</a> à installer avec pip bien sûr ;)

# Python découvrir blender

Découvrez python <a href="https://carlarotwang.wordpress.com/2018/09/09/python-blender-generer-des-cubes/">dans le domaine de la modélisation 3D</a> cette fois.

<strong># Rappel : le modèle OSI</strong>

https://www.youtube.com/watch?v=ubx5IM_09KM

Actualité :
<ul>
	<li>Internet : <a href="https://www.nextinpact.com/news/106993-chiffrement-five-eyea-demandent-cooperation-lindustrie-non-sans-menace.htm">Quand le chiffrement pose problème aux fives eyes...</a></li>
</ul>
Les top articles du blog de la semaine dernière :
<ul>
	<li><a href="https://xavki.blog/2018/08/03/bash-archiver-et-historiser-son-historique-de-commandes/">Historiser son historique de commande</a> : il est toujours en tête des lectures</li>
	<li><a href="https://xavki.blog/2018/09/07/tips-convertir-le-resultat-dune-commande-en-image-png/">Convertir l'output d'une commande en png</a> : super pratique</li>
	<li><a href="https://xavki.blog/2018/08/31/bash-creer-une-fonction-pour-monter-de-1-ou-plusieurs-niveaux-dans-une-arborescence/">Remonter facilement dans l'arborescence avec une fonction bash</a></li>
	<li><a href="https://xavki.blog/2018/09/04/python-comment-creer-une-fonction-pour-lancer-vos-regex-exemple-capture-dune-ip/">La fonction python pour les regex</a></li>
	<li><a href="https://xavki.blog/2018/07/23/bashawk-lister-les-commandes-le-top-de-vos-commandes/">Lister les commandes que vous utilisez le plus</a> avec awk</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2018-09-10 08:05:35</wp:post_date>
		<wp:post_date_gmt>2018-09-10 07:05:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/gh6oJe6PZuh]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536563149]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[21981410267]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1039047280727187457";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6444812985314746368]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>building metal house architecture</title>
		<link>http://xavki.blog/pexels-photo-1018081/</link>
		<pubDate>Sun, 26 Aug 2018 12:27:48 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/pexels-photo-1018081.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by PhotoMIX Ltd. on <a href="https://www.pexels.com/photo/building-metal-house-architecture-101808/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>619</wp:post_id>
		<wp:post_date>2018-08-26 13:27:48</wp:post_date>
		<wp:post_date_gmt>2018-08-26 12:27:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-1018081</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/pexels-photo-1018081.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-1018081.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-1018081.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:125902;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IMG-3211</title>
		<link>http://xavki.blog/?attachment_id=624</link>
		<pubDate>Mon, 27 Aug 2018 08:33:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/img-3211.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date>2018-08-27 09:33:02</wp:post_date>
		<wp:post_date_gmt>2018-08-27 08:33:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>img-3211</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>623</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/img-3211.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/img-3211.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:4032;s:6:"height";i:3024;s:4:"file";s:85:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/img-3211.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:14:{s:8:"aperture";s:3:"2.2";s:6:"credit";s:0:"";s:6:"camera";s:9:"iPhone 6s";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1535365909";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"4.15";s:3:"iso";s:3:"200";s:13:"shutter_speed";s:16:"0.03030303030303";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}s:8:"latitude";d:49.00010277777778;s:9:"longitude";d:2.075813888888889;}s:8:"filesize";i:2186403;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mysql-recreate-table</title>
		<link>http://xavki.blog/?attachment_id=644</link>
		<pubDate>Mon, 27 Aug 2018 19:30:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/mysql-recreate-table.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>644</wp:post_id>
		<wp:post_date>2018-08-27 20:30:06</wp:post_date>
		<wp:post_date_gmt>2018-08-27 19:30:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mysql-recreate-table</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>643</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/mysql-recreate-table.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/mysql-recreate-table.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2048;s:6:"height";i:1536;s:4:"file";s:98:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/mysql-recreate-table.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:344972;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mysql_table_merge</title>
		<link>http://xavki.blog/?attachment_id=647</link>
		<pubDate>Mon, 27 Aug 2018 20:04:29 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/mysql_table_merge.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>647</wp:post_id>
		<wp:post_date>2018-08-27 21:04:29</wp:post_date>
		<wp:post_date_gmt>2018-08-27 20:04:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mysql_table_merge</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>646</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/mysql_table_merge.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/mysql_table_merge.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2048;s:6:"height";i:1536;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/mysql_table_merge.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:431463;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tutos Admin de base ORACLE</title>
		<link>http://xavki.blog/databases/tutos-admin-de-base-oracle/</link>
		<pubDate>Tue, 28 Aug 2018 19:27:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=656</guid>
		<description></description>
		<content:encoded><![CDATA[Voic une très très bonne playlist pour apprendre les bases de l'admin oracle. Attention cette formation a pour but de vous apprendre à administrer une base oracle et non pas à être Database Base Administrator (DBA) c'est à dire à administrer le serveur et son moteur SGBD.

[youtube https://www.youtube.com/watch?v=qGfbuP5OTwg&amp;w=700&amp;h=500]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>656</wp:post_id>
		<wp:post_date>2018-08-28 20:27:02</wp:post_date>
		<wp:post_date_gmt>2018-08-28 19:27:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tutos-admin-de-base-oracle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tutos Admin de base Mysql</title>
		<link>http://xavki.blog/databases/tutos-admin-de-base-mysql/</link>
		<pubDate>Tue, 28 Aug 2018 19:33:25 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=659</guid>
		<description></description>
		<content:encoded><![CDATA[Voici une playlist de vidéos pour devenir amdinistrateur d'une base mysql. Attention, il ne s'agit pas de devenir DBA sur MySQL mêmesi la présentation prévoit quelques actions côté serveur. Ainsi ne sont pas abordées les aspects performances...

[youtube https://www.youtube.com/watch?v=qrmLVJBJ-D4&amp;w=700&amp;h=500]

Source : Grafikart]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>659</wp:post_id>
		<wp:post_date>2018-08-28 20:33:25</wp:post_date>
		<wp:post_date_gmt>2018-08-28 19:33:25</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tutos-admin-de-base-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>308</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Formation SysAdmin Linux</title>
		<link>http://xavki.blog/bash-shell/formation-sysadmin-linux/</link>
		<pubDate>Tue, 28 Aug 2018 19:47:28 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=666</guid>
		<description></description>
		<content:encoded><![CDATA[Cette page est dédiée auxs formations youtube de Thomas Boutry que je trouve très bonnes. De bon tutos, peut être un peu long mais tellement complet qu'il ne faut pas en manquer une miette. Avec ces formations vous pouvez partir de rien niveau sysadmin et arriver assez haut.

Formations Linux 101 (débutants)

[youtube https://www.youtube.com/watch?v=kG9wyUnAFI8&amp;w=700&amp;h=500]

Formations Linux 201 (intermédiaires)

[youtube https://www.youtube.com/watch?v=6Km4JjYs_LM&amp;w=700&amp;h=500]

Formations Linux 202 (avancées)

[youtube https://www.youtube.com/watch?v=PHtnXeMmQDU&amp;w=700&amp;h=500]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2018-08-28 20:47:28</wp:post_date>
		<wp:post_date_gmt>2018-08-28 19:47:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>formation-sysadmin-linux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>410</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Debian] : mon bloc-note de systemd</title>
		<link>http://xavki.blog/?p=669</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=669</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>669</wp:post_id>
		<wp:post_date>2018-08-28 20:54:21</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
	</item>
	<item>
		<title>board game business challenge chess</title>
		<link>http://xavki.blog/pexels-photo-277052/</link>
		<pubDate>Wed, 29 Aug 2018 18:31:17 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/08/pexels-photo-277052.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/photo/board-game-business-challenge-chess-277052/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>672</wp:post_id>
		<wp:post_date>2018-08-29 19:31:17</wp:post_date>
		<wp:post_date_gmt>2018-08-29 18:31:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pexels-photo-277052</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/08/pexels-photo-277052.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-277052.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1733;s:6:"height";i:1300;s:4:"file";s:97:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/08/pexels-photo-277052.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:175722;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : grapher l&#039;utilisation de la mémoire machine</title>
		<link>http://xavki.blog/2018/09/14/linux-grapher-lutilisation-de-la-memoire-machine/</link>
		<pubDate>Fri, 14 Sep 2018 07:35:27 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[Les outils ps ou top sont surement les plus utilisés pour observer l'état de la mémoire des serveurs. Mais parfois ça manque de charme lol.

En tout cas on peut avoir envie de faire vite fait un graphe plutôt que des chiffres.

Si c'est votre cas vous pouvez installer smem et lancer :
<pre>15:29:48 - oki @ doki ~  └─ $ ▶ smem --pie name -s pss </pre>Et là vous obtiendrez ce genre de résultats :
<img src="https://xavki.files.wordpress.com/2018/07/figure_1.png" class="alignnone size-full wp-image-228" height="600" alt="figure_1" width="600">
Bon c'est pas le paradie niveau mise en forme mais faut savoir que ça existe.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2018-09-14 08:35:27</wp:post_date>
		<wp:post_date_gmt>2018-09-14 07:35:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-grapher-lutilisation-de-la-memoire-machine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[229]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1040504702654447616";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/feicMrmEnni]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536910625]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22130528619]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6446270409649332225]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : lister les ports en écoute sur une machine</title>
		<link>http://xavki.blog/2018/09/19/linux-lister-les-ports-ouverts-sur-une-machine/</link>
		<pubDate>Wed, 19 Sep 2018 07:46:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[La base pour les sysadmin, on a souvent besoin pour diagnostiquer des problèmes de lister les ports en écoute sur un serveur. Deux binaires peuvent réaliser ceci sans problème : netstat ou lsof.

Avec lsof :
<pre>sudo lsof -i -P | egrep LISTEN | awk -F ":" '{print $2}' |sort -u </pre>Avec netsat :
<pre>netstat -ntaup | awk '/LISTEN/ &amp;&amp; match($0,/:[0-9]+/) {print substr( $0, RSTART+1, RLENGTH )}' | sort -u </pre>De la même manière on peut lister les connexions établies pour connaître les machines connectées :
<pre>netstat -ntaup | awk '/ESTABLISHED/ {print $5}' </pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2018-09-19 08:46:07</wp:post_date>
		<wp:post_date_gmt>2018-09-19 07:46:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-lister-les-ports-ouverts-sur-une-machine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[266]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1042320150039613440";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22301444812]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537343462]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/iEcGYRn3NL8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:12:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"HLHZNTGCH2";s:4:"date";s:29:"Wed, 19 Sep 2018 07:51:07 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-eda6";s:10:"x-li-proto";s:8:"http/1.1";s:10:"set-cookie";s:156:"lidc="b=VB28:g=1833:u=143:i=1537343467:t=1537423604:s=AQGuG8G5PBgD2_k7T5VPeOjJAwa6AV2G"; Expires=Thu, 20 Sep 2018 06:06:44 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"axeAHL29VRVA7/koPSsAAA==";}}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "HLHZNTGCH2",
  "status": 401,
  "timestamp": 1537343467848
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:82:""b=VB28:g=1833:u=143:i=1537343467:t=1537423604:s=AQGuG8G5PBgD2_k7T5VPeOjJAwa6AV2G"";s:7:"expires";i:1537423604;s:4:"path";s:1:"/";s:6:"domain";s:12:"linkedin.com";}}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "HLHZNTGCH2",
  "status": 401,
  "timestamp": 1537343467848
}";s:3:"raw";s:697:"HTTP/1.1 401 Unauthorized
Server: Apache-Coyote/1.1
x-li-request-id: HLHZNTGCH2
Date: Wed, 19 Sep 2018 07:51:07 GMT
Vary: *
x-li-format: json
Content-Type: application/json;charset=UTF-8
Content-Encoding: gzip
X-Li-Fabric: prod-lva1
Transfer-Encoding: chunked
X-Li-Pop: prod-eda6
X-LI-Proto: http/1.1
Set-Cookie: lidc="b=VB28:g=1833:u=143:i=1537343467:t=1537423604:s=AQGuG8G5PBgD2_k7T5VPeOjJAwa6AV2G"; Expires=Thu, 20 Sep 2018 06:06:44 GMT; domain=.linkedin.com; Path=/
X-LI-UUID: axeAHL29VRVA7/koPSsAAA==

{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "HLHZNTGCH2",
  "status": 401,
  "timestamp": 1537343467848
}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:12:{s:6:"server";a:1:{i:0;s:17:"Apache-Coyote/1.1";}s:15:"x-li-request-id";a:1:{i:0;s:10:"HLHZNTGCH2";}s:4:"date";a:1:{i:0;s:29:"Wed, 19 Sep 2018 07:51:07 GMT";}s:4:"vary";a:1:{i:0;s:1:"*";}s:11:"x-li-format";a:1:{i:0;s:4:"json";}s:12:"content-type";a:1:{i:0;s:30:"application/json;charset=UTF-8";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:11:"x-li-fabric";a:1:{i:0;s:9:"prod-lva1";}s:8:"x-li-pop";a:1:{i:0;s:9:"prod-eda6";}s:10:"x-li-proto";a:1:{i:0;s:8:"http/1.1";}s:10:"set-cookie";a:1:{i:0;s:156:"lidc="b=VB28:g=1833:u=143:i=1537343467:t=1537423604:s=AQGuG8G5PBgD2_k7T5VPeOjJAwa6AV2G"; Expires=Thu, 20 Sep 2018 06:06:44 GMT; domain=.linkedin.com; Path=/";}s:9:"x-li-uuid";a:1:{i:0;s:24:"axeAHL29VRVA7/koPSsAAA==";}}}s:11:"status_code";i:401;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:42:"http://api.linkedin.com/v1/people/~/shares";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:1:{s:4:"lidc";O:15:"Requests_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:82:""b=VB28:g=1833:u=143:i=1537343467:t=1537423604:s=AQGuG8G5PBgD2_k7T5VPeOjJAwa6AV2G"";s:10:"attributes";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:3:{s:7:"expires";i:1537423604;s:6:"domain";s:12:"linkedin.com";s:4:"path";s:1:"/";}}s:5:"flags";a:4:{s:8:"creation";i:1537343467;s:11:"last-access";i:1537343467;s:10:"persistent";b:0;s:9:"host-only";b:0;}s:14:"reference_time";i:1537343467;}}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Awk][Linux] : Lister les processus non killable et le stopper avec ps aux + awk</title>
		<link>http://xavki.blog/2018/09/12/awklinux-lister-les-processus-non-killable-et-le-stopper-avec-ps-aux-awk/</link>
		<pubDate>Wed, 12 Sep 2018 07:35:50 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=367</guid>
		<description></description>
		<content:encoded><![CDATA[La commande PS possède une multitude d'options et un affiche un grand nombre d'éléments. On ne va pas tous les passés en revue rassurez vous. Aujourd'hui, je vous propose un moyen simple de lister les process non killable. C'est ultra simple car il suffit de lire la colonne status de PS.

Cette colonne contient généralement une ou deux lettres :
<ul>
 	<li>R : en cours</li>
 	<li>S : interrompable</li>
 	<li>s : c'est une session maitre</li>
 	<li>l : multi-threadé</li>
 	<li>&lt; : priorité haute</li>
 	<li>+ : processus d'arrière plan</li>
 	<li>D : non killable</li>
</ul>C'est se dernier cas qui peut être plus gênant car ce process ne peut être arrêté. Et pour lister les processus en fonction d'un statut c'est awk :
<pre>ps aux | awk '{if ($8 ~ "D") print $0}'</pre>Pour le stopper ce n'est pas simple car un kill -9 du pid ne marchera pas. On peut éventuellement tenter un reboot forcé :
<pre>reboot -n -f</pre>C'est un peu moche c'est clair. J'imagine qu'avec un lsof on peut aussi identifié le filesystem utilisé et le démonté. C'est pas beaucoup plus jolie.

Plus d'infos sur <a href="http://www.noah.org/wiki/Kill_-9_does_not_work">le site noah.org</a> et <a href="https://linux.die.net/man/1/ps">bien sûr la man page de PS</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>367</wp:post_id>
		<wp:post_date>2018-09-12 08:35:50</wp:post_date>
		<wp:post_date_gmt>2018-09-12 07:35:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awklinux-lister-les-processus-non-killable-et-le-stopper-avec-ps-aux-awk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/eZNYXH2i5Sf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536739385]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22055989094]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1039786474101719040";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6445552179767058432]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : comment logger dans vos scripts avec logging ?</title>
		<link>http://xavki.blog/2018/09/11/python-comment-logger-dans-vos-scripts-avec-logging/</link>
		<pubDate>Tue, 11 Sep 2018 11:12:22 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=493</guid>
		<description></description>
		<content:encoded><![CDATA[Python est bien équipé en matière de modules. Une fois de plus, il nous met à disposition le nécessaire pour faire simplement les choses. Logguer est une nécessité pour savoir si vos scripts et vos applications se portent bien, pour suivre les résultats et superviser.

Avec logging, vous pourrez logger en mettant en forme vos logs en les paramétrant de différentes manières pour vous faciliter la vie. Logging permet de structurer, hierarchiser, écrire vos logs.

Voici ce que j'utilise de mon côté :
<pre>import logging
import sys

# create logger
logging.basicConfig(filename='/var/log/script.log',format='%(asctime)s - %(name)s - %(levelname)s &gt;&gt;&gt;&gt; %(message)s',level=logging.DEBUG)
logger = logging.getLogger('script python xavki')
logger.addHandler(logging.StreamHandler(sys.stdout))

if __name__ == "__main__":
  try:
     logger.info('Action 1 [OK]')
  except:
     logger.warning('Action 1 [KO]')

</pre>
Alors voici ce que nous avons fait :
<ul>
	<li>import des modules logging et sys</li>
	<li>instanciation du logger
<ul>
	<li>le fichier de log et sa localisation</li>
	<li>le format (date / nom / niveau de log / message)</li>
	<li>ajout d'un handler qui permet de logger également sur stdout (on log donc dans un fichier et à l'écran)</li>
</ul>
</li>
	<li>dans le try (cas de réussite) : lancement du script et log pour dire [OK]</li>
	<li>dans le except (cas d'erreur) : log pour dire [KO]</li>
</ul>
Et le résultat :
<pre>2018-08-19 22:10:26,620 - script python xavki - INFO - Action 1 [OK]
2018-08-19 22:10:26,695 - script python xavki - WARNING - Action 1 [KO]
</pre>
A vous ensuite d'organiser la hiérarchie de vos log :
<ul>
	<li>info</li>
	<li>warning</li>
	<li>debug</li>
	<li>error</li>
	<li>critical</li>
</ul>
Si votre configuration vous semble un peu complexe et pour homogénéiser plus facilement votre conf logging, utilisez un fichier de conf (format ini ou yaml).
<pre>logging.config.fileConfig('logging.conf')
</pre>
Vous pouvez consulter <a href="https://docs.python.org/2/library/logging.html">la page de doc python pour en savoir plus</a>. Sachez qu'il est aussi possible <a href="http://mynthon.net/howto/-/python/python%20-%20logging.SMTPHandler-how-to-use-gmail-smtp-server.txt">de logger par mail en smtp</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>493</wp:post_id>
		<wp:post_date>2018-09-11 12:12:22</wp:post_date>
		<wp:post_date_gmt>2018-09-11 11:12:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-logger-dans-vos-scripts-avec-logging</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[105]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1039471901490524161";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/jXZ6JtHTDgU]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22024164813]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536664386]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6445237610184085504]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[Top commandes linux #9 : git, mdk3, wifi over loading, hypertext, rpm &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/24/top-commandes-linux-9/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.46</wp:comment_author_IP>
			<wp:comment_date>2018-09-24 10:56:36</wp:comment_date>
			<wp:comment_date_gmt>2018-09-24 09:56:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Comment utiliser la librairie logging pour générer du log en Python ? [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1537782997]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1537782998.331726;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:11:{s:14:"comment_author";s:83:"Top commandes linux #9 : git, mdk3, wifi over loading, hypertext, rpm &#8211; Xavki";s:18:"comment_author_url";s:51:"http://xavki.blog/2018/09/24/top-commandes-linux-9/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:91:"[&#8230;] Comment utiliser la librairie logging pour générer du log en Python ? [&#8230;]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"192.0.101.46";s:10:"user_agent";s:33:"WordPress.com Pingback of Awesome";s:4:"blog";s:18:"https://xavki.blog";s:9:"blog_lang";s:2:"fr";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:81:"http://xavki.blog/2018/09/11/python-comment-logger-dans-vos-scripts-avec-logging/";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Python] : comment lire les lignes d&#039;un fichier tout simplement ? read et readline</title>
		<link>http://xavki.blog/2018/09/13/python-comment-lire-les-lignes-dun-fichier-tout-simplement-read-et-readline/</link>
		<pubDate>Thu, 13 Sep 2018 07:50:15 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=497</guid>
		<description></description>
		<content:encoded><![CDATA[Python pour les débutants, c'est avant tout de savoir lire un fichier ligne à ligne. Évident pour certains mais lorsque l'on commence, il faut bien apprendre.

Pour nous aider python possède deux fonctions ultra-utilisées : read et readline. Je pense que les deux sont inséparables.

Pour faire lire des lignes ou même en écrire de manière simple, vous pouvez aussi vous reporter à <a href="https://xavki.blog/2018/08/29/python-lire-et-ecrire-facilement-dans-un-fichier-avec-pathlib/">cet article précédent sur le module PATHLIB</a>.

Read c'est l'équivalent de readline mais aux caractères. Ainsi, il permet d'afficher caractère par caractère le contenu d'une variable. Par exemple :
<pre>#notre fichier contient 
première ligne
 deuxième ligne
 troisième ligne  

&gt;&gt;&gt; fichier = open("texte.txt")
 &gt;&gt;&gt; fichier.close() 
&gt;&gt;&gt; print(fichier.read(1)) 
p
&gt;&gt;&gt; print(fichier.read(1))
 r
&gt;&gt;&gt; print(fichier.read())
 première ligne 
deuxième ligne 
troisième ligne
</pre>
On affiche donc le premier caractère de la première ligne. Read fonctionne donc par caractère et au fur et à mesure le curseur avance d'un caractère. Le paramètre pris par read est aussi le pas d'avancement du curseur. Si aucun paramètre n'est passé c'est tout l'élément qui est affiché. On peut donc afficher un fichier en faisant un simple read().

Readline c'est la même chose mais non pas en caractère mais en ligne comme son nom l'indique.
<pre>&gt;&gt; print(fichier.readlines()) [
'première ligne\n',
'deuxième ligne\n',
'troisième ligne\n'
]</pre>
Readlines produit donc une liste consultable comme tout autre liste... en la parcourant.
<pre>&gt;&gt;&gt; fichier = open("texte.txt") &gt;&gt;&gt; for ligne in fichier.readlines(): ...     print(ligne) première ligne deuxième ligne troisième ligne</pre>
Kool non ? donc deux méthodes pour récupérer le contenu d'un fichier mais on n'en fera pas la même chose :
<ul>
	<li>read() : pour afficher tout le fichier ou le récupérer dans une seule variable</li>
	<li>readlines() : pour l'utiliser ligne à ligne ou dans un tableau.</li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>497</wp:post_id>
		<wp:post_date>2018-09-13 08:50:15</wp:post_date>
		<wp:post_date_gmt>2018-09-13 07:50:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-lire-les-lignes-dun-fichier-tout-simplement-read-et-readline</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[315]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/J9YeeKRx4U9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22093961352]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536825223]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1040146498674208769";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6445912203886497792]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : un mot sur les listes ? boucles for...</title>
		<link>http://xavki.blog/2018/09/18/python-un-mot-sur-les-listes-boucles-for/</link>
		<pubDate>Tue, 18 Sep 2018 09:44:46 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=502</guid>
		<description></description>
		<content:encoded><![CDATA[Les listes en python permettent de laisser place à toute votre imagination. De nombreuses astuces permettent d'alimenter une liste ou encore de la parcourir avec les slices, les ranges ou autres.

Je n'ai pas le niveau pour prétendre faire le tour de la question mais j'ai envie de partager mon expérience à ce sujet. En effet, un peu d'expérience dans ce domaine permet de gagner du temps, de simplifier son code et tout simplement de progresser.
<h2>Création d'une liste le plus simplement du monde<strong>
</strong></h2>
Définir et alimenter une liste en premier lieu c'est :
<pre>&gt;&gt;&gt; liste=['B','o','n','j','o','u','r']
</pre>
Ensuite lorsque l'on débute on réalise ce genre d'opération :
<pre>&gt;&gt;&gt; texte="Bonjour Xavki"
&gt;&gt;&gt; liste=[]
&gt;&gt;&gt; for i in texte:liste.append(i)
&gt;&gt;&gt; print(liste)
['B', 'o', 'n', 'j', 'o', 'u', 'r', ' ', 'X', 'a', 'v', 'k', 'i']
</pre>
Avec la fonction append, on a ajouté chaque caractère à la liste. En outre, la variable texte fait aussi office de liste et est utilisable comme telle.
<h2>Liste  créée et définie en une ligne avec for intégré<strong>
</strong></h2>
<pre>&gt;&gt;&gt; print(texte)
Bonjour Xavki
&gt;&gt;&gt; a = [i for i in texte]
&gt;&gt;&gt; print(a)
['B', 'o', 'n', 'j', 'o', 'u', 'r', ' ', 'X', 'a', 'v', 'k', 'i']
</pre>
Là c'est déjà plus sympa.

Et puis on peut aller plus loin si nécessaire et y placer des conditions avec "if".
<pre>&gt;&gt;&gt; a = [i for i in texte if i == "o"]
&gt;&gt;&gt; print(a)
['o', 'o']
</pre>
<h2>Faire d'une liste de liste... une unique liste</h2>
Ce cas se présente souvent, vous avez une liste de liste et vous souhaitez n'en faire qu'une simple liste. Faire cette opération peut se révéler un peu fastidieux car il faut faire deux boucle for et ajouter les éléments avec un append dans notre  liste finale.

Bref voici comment se simplifier la vie et mieux comprendre ce principe d'alimentation des listes. Et avec ça vous aller devenir de vraies oneliners (la frime lol).
<pre>&gt;&gt;&gt; texte = [['B','o','n'], ['j','o','u','r']]
&gt;&gt;&gt; print(texte)
[['B', 'o', 'n'], ['j', 'o', 'u', 'r']]
&gt;&gt;&gt; liste=[txt for tmp in texte for txt in tmp]
&gt;&gt;&gt; print(liste)
['B', 'o', 'n', 'j', 'o', 'u', 'r']
</pre>
Vous me direz cela n'empêche pas de faire deux boucles mais tout cela prend peu de lignes.

Et donc si vous avez compris les "for" empilés voici la même chose avec un niveau supplémentaire.
<pre>&gt;&gt;&gt; texte = [['B','o','n'], ['j','o','u','r'],[' ',['X','a','v','k','i']]]
&gt;&gt;&gt; liste=[i for tmp in texte for txt in tmp for i in txt]
&gt;&gt;&gt; print(liste)
['B', 'o', 'n', 'j', 'o', 'u', 'r', ' ', 'X', 'a', 'v', 'k', 'i']
</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>502</wp:post_id>
		<wp:post_date>2018-09-18 10:44:46</wp:post_date>
		<wp:post_date_gmt>2018-09-18 09:44:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-un-mot-sur-les-listes-boucles-for</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1041992688764157952";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22268588867]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537265390]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/YuecCowaZU3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:12:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"Y7XDD7C0N6";s:4:"date";s:29:"Tue, 18 Sep 2018 10:09:56 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:16:"prod-eda6-icwd24";s:10:"x-li-proto";s:8:"http/1.1";s:10:"set-cookie";s:156:"lidc="b=VB28:g=1831:u=143:i=1537265396:t=1537343534:s=AQEJrv2wB8bOusw79LJZ1fCDcD13ZHa0"; Expires=Wed, 19 Sep 2018 07:52:14 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"4r0Ty7t2VRXAJ+S7FCsAAA==";}}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "Y7XDD7C0N6",
  "status": 401,
  "timestamp": 1537265396827
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:82:""b=VB28:g=1831:u=143:i=1537265396:t=1537343534:s=AQEJrv2wB8bOusw79LJZ1fCDcD13ZHa0"";s:7:"expires";i:1537343534;s:4:"path";s:1:"/";s:6:"domain";s:12:"linkedin.com";}}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "Y7XDD7C0N6",
  "status": 401,
  "timestamp": 1537265396827
}";s:3:"raw";s:704:"HTTP/1.1 401 Unauthorized
Server: Apache-Coyote/1.1
x-li-request-id: Y7XDD7C0N6
Date: Tue, 18 Sep 2018 10:09:56 GMT
Vary: *
x-li-format: json
Content-Type: application/json;charset=UTF-8
Content-Encoding: gzip
X-Li-Fabric: prod-lva1
Transfer-Encoding: chunked
X-Li-Pop: prod-eda6-icwd24
X-LI-Proto: http/1.1
Set-Cookie: lidc="b=VB28:g=1831:u=143:i=1537265396:t=1537343534:s=AQEJrv2wB8bOusw79LJZ1fCDcD13ZHa0"; Expires=Wed, 19 Sep 2018 07:52:14 GMT; domain=.linkedin.com; Path=/
X-LI-UUID: 4r0Ty7t2VRXAJ+S7FCsAAA==

{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "Y7XDD7C0N6",
  "status": 401,
  "timestamp": 1537265396827
}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:12:{s:6:"server";a:1:{i:0;s:17:"Apache-Coyote/1.1";}s:15:"x-li-request-id";a:1:{i:0;s:10:"Y7XDD7C0N6";}s:4:"date";a:1:{i:0;s:29:"Tue, 18 Sep 2018 10:09:56 GMT";}s:4:"vary";a:1:{i:0;s:1:"*";}s:11:"x-li-format";a:1:{i:0;s:4:"json";}s:12:"content-type";a:1:{i:0;s:30:"application/json;charset=UTF-8";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:11:"x-li-fabric";a:1:{i:0;s:9:"prod-lva1";}s:8:"x-li-pop";a:1:{i:0;s:16:"prod-eda6-icwd24";}s:10:"x-li-proto";a:1:{i:0;s:8:"http/1.1";}s:10:"set-cookie";a:1:{i:0;s:156:"lidc="b=VB28:g=1831:u=143:i=1537265396:t=1537343534:s=AQEJrv2wB8bOusw79LJZ1fCDcD13ZHa0"; Expires=Wed, 19 Sep 2018 07:52:14 GMT; domain=.linkedin.com; Path=/";}s:9:"x-li-uuid";a:1:{i:0;s:24:"4r0Ty7t2VRXAJ+S7FCsAAA==";}}}s:11:"status_code";i:401;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:42:"http://api.linkedin.com/v1/people/~/shares";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:1:{s:4:"lidc";O:15:"Requests_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:82:""b=VB28:g=1831:u=143:i=1537265396:t=1537343534:s=AQEJrv2wB8bOusw79LJZ1fCDcD13ZHa0"";s:10:"attributes";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:3:{s:7:"expires";i:1537343534;s:6:"domain";s:12:"linkedin.com";s:4:"path";s:1:"/";}}s:5:"flags";a:4:{s:8:"creation";i:1537265396;s:11:"last-access";i:1537265396;s:10:"persistent";b:0;s:9:"host-only";b:0;}s:14:"reference_time";i:1537265396;}}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Mysql] :Comment diagnostiquer et optimiser votre base et moteur ? avec mysqltuner</title>
		<link>http://xavki.blog/2018/09/20/mysql-diagnostiquer-optimiser-base-et-moteur-mysqltuner/</link>
		<pubDate>Thu, 20 Sep 2018 07:06:53 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[Mysql est une base que l'on trouve souvent derrière de nombreux outils web (par exemple wordpress...). Elle s'est généralisée avec la montée en puissance de WAMP ou LAMP. Mais souvent les moteurs et les bases installés sont installés avec des valeurs par défaut sans optimisation. C'est pourquoi, de temps en temps, il est nécessaire de faire des optimisations (défragmentation de base...).

Dans ce genre de travail d'optimisation de bases, on cherche des outils qui permettront de faire une partie du travail à notre place. Et c'est là que vous trouverez votre bonheur avec le binaire intitulé <a href="https://github.com/major/MySQLTuner-perl/blob/master/README.fr.md">mysqltuner</a>.

Il est facile à installer et comme vous le verez ci-dessous son rapport est plutôt bien fichu. tout cela en perl donc on aime bien.

Pour l'installer rien de plus simple :
<pre>sudo apt-get install mysqltuner</pre>
Et après on le lance simplement :
<pre>└─ $ ▶ mysqltuner

 &gt;&gt;  MySQLTuner 1.3.0 - Major Hayden &lt;major@mhtx.net&gt;
 &gt;&gt;  Bug reports, feature requests, and downloads at http://mysqltuner.com/
 &gt;&gt;  Run with '--help' for additional options and output filtering
Please enter your MySQL administrative login: ------
Please enter your MySQL administrative password: 
[OK] Currently running supported MySQL version 5.5.60-0+deb8u1
[OK] Operating on 64-bit architecture

-------- Storage Engine Statistics -------------------------------------------
[--] Status: +ARCHIVE +BLACKHOLE +CSV -FEDERATED +InnoDB +MRG_MYISAM 
[--] Data in MyISAM tables: 714M (Tables: 400)
[--] Data in PERFORMANCE_SCHEMA tables: 0B (Tables: 17)
[--] Data in MEMORY tables: 496K (Tables: 4)
[--] Data in InnoDB tables: 55M (Tables: 14)
[!!] Total fragmented tables: 28

-------- Security Recommendations  -------------------------------------------
[!!] User 'rundeck@%' has no password set.

-------- Performance Metrics -------------------------------------------------
[--] Up for: 18d 0h 10m 24s (136M q [87.417 qps], 261K conn, TX: 113B, RX: 23B)
[--] Reads / Writes: 80% / 20%
[--] Total buffers: 192.0M global + 2.7M per thread (151 max threads)
[OK] Maximum possible memory usage: 597.8M (15% of installed RAM)
[OK] Slow queries: 0% (81/136M)
[OK] Highest usage of available connections: 19% (29/151)
[OK] Key buffer size / total MyISAM indexes: 16.0M/266.3M
[OK] Key buffer hit rate: 99.5% (362M cached / 1M reads)
[OK] Query cache efficiency: 94.4% (123M cached / 131M selects)
[!!] Query cache prunes per day: 258354
[OK] Sorts requiring temporary tables: 0% (0 temp sorts / 508K sorts)
[!!] Temporary tables created on disk: 35% (1M on disk / 3M total)
[OK] Thread cache hit rate: 99% (1K created / 261K connections)
[!!] Table cache hit rate: 0% (400 open / 393K opened)
[OK] Open file limit used: 73% (756/1K)
[OK] Table locks acquired immediately: 99% (9M immediate / 9M locks)
[OK] InnoDB buffer pool / data size: 128.0M/55.5M
[OK] InnoDB log waits: 0
-------- Recommendations -----------------------------------------------------
General recommendations:
    Run OPTIMIZE TABLE to defragment tables for better performance
    Enable the slow query log to troubleshoot bad queries
    When making adjustments, make tmp_table_size/max_heap_table_size equal
    Reduce your SELECT DISTINCT queries without LIMIT clauses
    Increase table_open_cache gradually to avoid file descriptor limits
    Read this before increasing table_open_cache over 64: http://bit.ly/1mi7c4C
Variables to adjust:
    query_cache_size (&gt; 16M)
    tmp_table_size (&gt; 16M)
    max_heap_table_size (&gt; 16M)
    table_open_cache (&gt; 400)
</pre>
Vous avez donc une liste de recommandations qui vous permettront d'atteindre votre but pour optimiser votre moteur et votre base :
<ul>
	<li>faire un OPTIMIZE TABLE</li>
	<li>activé le slow query</li>
	<li>ajuster des variables de configuration  : tmp_table_size...</li>
	<li>réduire les volume de "SELECT DISTINCT" en utilisant la clause "LIMIT"</li>
	<li>...</li>
</ul>
Les choses sont donc relativement bien formulées. Je pense que nous aurons l'occasion de revenir en détail sur certaines de ces actions et de leurs effets.

De votre côté utilisez vous ce genre d'outils ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date>2018-09-20 08:06:53</wp:post_date>
		<wp:post_date_gmt>2018-09-20 07:06:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-diagnostiquer-optimiser-base-et-moteur-mysqltuner</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[509]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22336366686]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1042671455148933120";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537427216]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/DMBJ1JhLhjS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6448437168556777472]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes linux #8 : vim, git, od, sql, convert, aria2c</title>
		<link>http://xavki.blog/2018/09/17/top-commandes-linux-8/</link>
		<pubDate>Mon, 17 Sep 2018 08:13:11 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[La routine du lundi c'est de découvrir rapidement quelques commandes et infos que j'ai récolté la semaine dernière. Retrouvez <a href="https://xavki.blog/top-commandes/">les versions des lundis précédents sur cette page</a>.

Sur le blog l'article qui a le plus cartonné la semaine c'est celui avec la petite astuce <a href="https://xavki.blog/2018/09/07/tips-convertir-le-resultat-dune-commande-en-image-png/">pour imprimer la sortie d'une commande dans un png</a>.

<strong># aria2c</strong>

Utilisez aria2c pour télécharger plus vite avec de multiples connexions.

aria2c -s 4 https://xavki.blog

<strong># convert</strong>

Compressez un pdf pour réduire sa taille avec la commande convert.
<pre><span class="command code bash hljs">convert -density 200 -compress jpeg -quality 20 test.pdf out.pdf</span></pre>
<strong># vim</strong>

insérer dans le fichier courant son nom
<pre>:put %</pre>
<strong># od</strong>

Réalisez un dump en hexadécimale de vos fichiers avc la commande od option -x
<pre id=":1ma" class="hP">od -x &lt;file</pre>
<strong># git</strong>

comparer les deux derniers commits avec un git diff
<pre><span class="command code bash hljs">git diff HEAD^ HEAD</span></pre>
<strong># SQL - Connor MacDonnald</strong>

créez une table de table create table as select mais avec des clauses particulières (partition, primary key...) - <a href="https://connor-mcdonald.coma/2018/09/03/complex-materialized-views-try-a-table-first/">article complet</a>
<pre>create table t (
...,
constraint pk primary key (id1), ...
) partition by range (id2) (...)
as
select...</pre>
<a href="https://blog.github.com/2015-06-08-how-to-undo-almost-anything-with-git/">Rappels git pour les retours arrières</a>

Actualité :
<ul>
	<li><a href="https://www.france24.com/fr/20161117-temps-changent-microsoft-devient-membre-linux-foundation">Windows devient membre de la fondation Linux</a> non c'est pas possible !!!</li>
</ul>
La vidéo de la semaine : comment créer un script bash pour générer un password ?

[youtube https://www.youtube.com/watch?v=P5552IJp7tU&amp;w=700&amp;h=500]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date>2018-09-17 09:13:11</wp:post_date>
		<wp:post_date_gmt>2018-09-17 08:13:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/38Xq6oLQjFd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537172062]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22229311341]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1041601246140882944";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_failed_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:12:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"1PXO3WP1CU";s:4:"date";s:29:"Mon, 17 Sep 2018 08:14:27 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-lva1";s:8:"x-li-pop";s:9:"prod-esv5";s:10:"x-li-proto";s:8:"http/1.1";s:10:"set-cookie";s:156:"lidc="b=VB28:g=1823:u=143:i=1537172067:t=1537256723:s=AQEj4Go8enup9bUExO7DLBaoY_GkABAh"; Expires=Tue, 18 Sep 2018 07:45:23 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"vvMm39khVRUAxjXlmSsAAA==";}}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "1PXO3WP1CU",
  "status": 401,
  "timestamp": 1537172067607
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:82:""b=VB28:g=1823:u=143:i=1537172067:t=1537256723:s=AQEj4Go8enup9bUExO7DLBaoY_GkABAh"";s:7:"expires";i:1537256723;s:4:"path";s:1:"/";s:6:"domain";s:12:"linkedin.com";}}s:8:"filename";N;s:13:"http_response";O:25:"WP_HTTP_Requests_Response":5:{s:11:" * response";O:17:"Requests_Response":10:{s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "1PXO3WP1CU",
  "status": 401,
  "timestamp": 1537172067607
}";s:3:"raw";s:697:"HTTP/1.1 401 Unauthorized
Server: Apache-Coyote/1.1
x-li-request-id: 1PXO3WP1CU
Date: Mon, 17 Sep 2018 08:14:27 GMT
Vary: *
x-li-format: json
Content-Type: application/json;charset=UTF-8
Content-Encoding: gzip
X-Li-Fabric: prod-lva1
Transfer-Encoding: chunked
X-Li-Pop: prod-esv5
X-LI-Proto: http/1.1
Set-Cookie: lidc="b=VB28:g=1823:u=143:i=1537172067:t=1537256723:s=AQEj4Go8enup9bUExO7DLBaoY_GkABAh"; Expires=Tue, 18 Sep 2018 07:45:23 GMT; domain=.linkedin.com; Path=/
X-LI-UUID: vvMm39khVRUAxjXlmSsAAA==

{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1536953523181",
  "requestId": "1PXO3WP1CU",
  "status": 401,
  "timestamp": 1537172067607
}";s:7:"headers";O:25:"Requests_Response_Headers":1:{s:7:" * data";a:12:{s:6:"server";a:1:{i:0;s:17:"Apache-Coyote/1.1";}s:15:"x-li-request-id";a:1:{i:0;s:10:"1PXO3WP1CU";}s:4:"date";a:1:{i:0;s:29:"Mon, 17 Sep 2018 08:14:27 GMT";}s:4:"vary";a:1:{i:0;s:1:"*";}s:11:"x-li-format";a:1:{i:0;s:4:"json";}s:12:"content-type";a:1:{i:0;s:30:"application/json;charset=UTF-8";}s:16:"content-encoding";a:1:{i:0;s:4:"gzip";}s:11:"x-li-fabric";a:1:{i:0;s:9:"prod-lva1";}s:8:"x-li-pop";a:1:{i:0;s:9:"prod-esv5";}s:10:"x-li-proto";a:1:{i:0;s:8:"http/1.1";}s:10:"set-cookie";a:1:{i:0;s:156:"lidc="b=VB28:g=1823:u=143:i=1537172067:t=1537256723:s=AQEj4Go8enup9bUExO7DLBaoY_GkABAh"; Expires=Tue, 18 Sep 2018 07:45:23 GMT; domain=.linkedin.com; Path=/";}s:9:"x-li-uuid";a:1:{i:0;s:24:"vvMm39khVRUAxjXlmSsAAA==";}}}s:11:"status_code";i:401;s:16:"protocol_version";d:1.1;s:7:"success";b:0;s:9:"redirects";i:0;s:3:"url";s:42:"http://api.linkedin.com/v1/people/~/shares";s:7:"history";a:0:{}s:7:"cookies";O:19:"Requests_Cookie_Jar":1:{s:10:" * cookies";a:1:{s:4:"lidc";O:15:"Requests_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:82:""b=VB28:g=1823:u=143:i=1537172067:t=1537256723:s=AQEj4Go8enup9bUExO7DLBaoY_GkABAh"";s:10:"attributes";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:" * data";a:3:{s:7:"expires";i:1537256723;s:6:"domain";s:12:"linkedin.com";s:4:"path";s:1:"/";}}s:5:"flags";a:4:{s:8:"creation";i:1537172067;s:11:"last-access";i:1537172067;s:10:"persistent";b:0;s:9:"host-only";b:0;}s:14:"reference_time";i:1537172067;}}}}s:11:" * filename";N;s:4:"data";N;s:7:"headers";N;s:6:"status";N;}}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes linux #9 : git, mdk3, wifi over loading, hypertext, rpm</title>
		<link>http://xavki.blog/2018/09/24/top-commandes-linux-9/</link>
		<pubDate>Mon, 24 Sep 2018 09:56:29 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=651</guid>
		<description></description>
		<content:encoded><![CDATA[Comment ça va la team des xavki ? petit à petit l'oiseau fait son nid et vous êtes de plus en plus nombreux à vous abonner... MERCI !!! si ce n'est pas déjà fait vous pouvez le faire dans la colonne de droite je ne pollue personne avec des ventes de ebook gratuits lol et autres méthodes marketing.

Avant de commencer, l'article du blog qui a le mieux marché la semaine dernière est :
<ul>
	<li><a href="https://xavki.blog/2018/09/11/python-comment-logger-dans-vos-scripts-avec-logging/">Comment utiliser la librairie logging pour générer du log en Python ?</a></li>
</ul>
&nbsp;

<strong># git</strong>

comparer les deux derniers commits avec un diff
<pre><span class="command code bash hljs">git diff $(git <span class="hljs-built_in">log</span> --pretty=format:%h -2 --reverse | tr <span class="hljs-string">"\n"</span> <span class="hljs-string">" "</span>)</span></pre>
moins bien que :
<pre>git diff HEAD^ HEAD</pre>
<strong># sed &amp; HTML</strong>

Convertir une url en lien cliquable html (balise &lt;a&gt;)
<pre>cat url.txt | sed "s/\([a-zA-Z]*\:\/\/[^ ]*\)\(.*\)/\&lt;a href=\"\1\"&gt;\1\&lt;\/a\&gt;\2/"</pre>
avec url.txt contenant des liens format : http://monlien.fr

<strong># PS &amp; sort</strong>

Lister le top 10 des processus en cours
<pre><span class="command code bash hljs">ps -auxf | sort -nr -k 4 | head -10</span></pre>
<strong># RedHat</strong>

Lister les 10 derniers paquets installés avec RPM
<pre>rpm -qa --last | head</pre>
<strong>Article de la semaine :</strong>
<ul>
	<li><a href="http://sametmax.com/programmation-par-contrat-avec-assert/">bien gérer les tests unitaires avec assert sur Python</a></li>
</ul>
Vidéo de la semaine : brouiller un wifi avec mdk3 (démo)

https://www.youtube.com/watch?v=FF_tVKPOelY]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>651</wp:post_id>
		<wp:post_date>2018-09-24 10:56:29</wp:post_date>
		<wp:post_date_gmt>2018-09-24 09:56:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1044163677035925504";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537782993]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22475128064]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/X79ssM5Cfd9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6449929382696886272]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Php] : mysql passage à mysqli avec php7</title>
		<link>http://xavki.blog/2018/09/13/php-mysql-passage-a-mysqli-avec-php7/</link>
		<pubDate>Thu, 13 Sep 2018 09:17:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=681</guid>
		<description></description>
		<content:encoded><![CDATA[La petite surprise du passage en Debian Stretch. Bien sûr que vous passez à php7 mais celui-ci ne propose plus la librairie mysql qui devient (en gros) mysqli. Du coup, il faut se replonger dans les vieux trucs qui tournaient depuis plusieurs années et c'est pas plaisant. C'est même moche parfois.

Alors pour ceux qui sont un peu fou dans leur tête, vous pouvez faire cohabiter plusieurs versions de php mais <a href="https://pehapkari.cz/blog/2017/03/27/multiple-php-versions-the-easy-way/">je vous laisse regarder cet article c'est pas fun</a>. Mais bon c'est surtout pas une bonne idée il faut monter en version php7 c'est ainsi.

Alors il faut retrousser ses manches et se mettre à convertir. Mysqli est procédurale contrairement à mysql. Donc cela peut impacter un peu plus votre code. Dans les faits c'est pas la mer à boire si vous voulez vous le faire en odschool.

Si vous deviez en retenir une chose c'est que désormais les fonction intègre systématiquement une variable supplémentaire la connexion. Auparavant vous faisiez la connexion au début de votre page et ensuite vous n'aviez plus à en parler mysql_query($sql). Désormais il faut rappeler la variable de la cconnexion : mysqli_query($connexion,$sql).

Pour la connexion cela reste simple :
<pre>mysqli_connect($server, $user, $password, $db);</pre>
Dnas mon cas <a href="https://datatables.net/">pour les datatables de Alan Jardine</a> :
<pre>$connexion = mysqli_connect($gaSql['server'],$gaSql['user'],$gaSql['password'],$gaSql['db']);</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2018-09-13 10:17:07</wp:post_date>
		<wp:post_date_gmt>2018-09-13 09:17:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-mysql-passage-a-mysqli-avec-php7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[509]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1536830316]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1040167854492925952";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22096200539]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/aoGbsHLqLWt]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6445933568265981952]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Docker][Ansible] : comment se créer un mini datacenter de test sans VM ? (parc de conteneurs)</title>
		<link>http://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/</link>
		<pubDate>Fri, 21 Sep 2018 09:00:29 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=696</guid>
		<description></description>
		<content:encoded><![CDATA[Datacenter, le terme est bien prétencieux car il ne s'agit ni de machines physiques, ni de vm mais de simples conteneurs docker. L'idée est très simple et je sais que certains d'entre vous ont besoin de ce genre de script : comment créer facilement, à la volée, une série de conteneurs identiques pour reproduire des actions à la manière d'un centre serveur (orchestration, scheduler...).

Attention, ce qui est fait dans ce script et l'image utilisée (que j'ai adapté pour l'occasion) <strong>ne prennent pas en compte la sécurité nécessaire pour faire de la production</strong>. L'idée est de créer ce mini pool de conteneurs et de le supprimer une fois les manipulations réalisées. En moins de 5 minutes vous avez autant de machine que vous voulez sous la main et dans le même réseau.

https://www.youtube.com/watch?v=X9beUUWGPp0&amp;index=3&amp;t=3s&amp;list=PLn6POgpklwWo2dZBf371MbKLsYiLUHZzn
<h2>Le besoin ? faire des tests sur un parc de "machines"</h2>
Pourquoi moins sécurisé que d'autres ? Par exemple, je permets de faire du ssh sur le user root depuis l'extérieur du conteneur. Je mets en place un mot de passe unique pour root et le user. Tout cela pour faire comme si il s'agissait d'une vm ou une machine physique donc de ne plus passer par un "docker exec" pour accéder à root.

Pourquoi faire ? des tests. Dans mon cas, je vais m'en servir pour me faire la main sur Ansible et runner des playbooks sur tout le parc ou sur une partie.

L'intérêt comme je l'ai déjà dit :
<ul>
	<li>pouvoir casser et repartir avec des machines vierges en 2 minutes</li>
	<li>pouvoir en lancer une bonne dizaine (voir plusieurs) sur mon pc</li>
	<li>avoir un réseau facilement opérationnel</li>
	<li>switcher d'OS ou d'image à volonté</li>
	<li>cela reste léger car il n'y a pas de noyau embarqué</li>
</ul>
<h2>Dans le détail du conteneur</h2>
De base, j'utilise une image que j'ai créé et mis à disposition sur mon compte dockerhub (priximmo/debian-sshd). Il s'agit d'une image debian officielle à laquelle j'ai ajouté un openssh-server et dont j'ai permis la connexion en ssh sur le user root. C'est ce point qui aura été le plus difficile car je ne voyais pas pourquoi je ne pouvais pas passer root sur les conteneurs docker. Il suffit d'ouvrir /etc/ssh/sshd_config et de passer la clause PermitRootLogin à "yes".

Le mot de passe root est aussi configuré mais je vous invite à le modifier à l'aide d'une commande docker (en lançant chgpasswd). Mais comme le but est de ne pas garder les conteneurs en fonction hors des phases de test c'est moins grave.

Le script ? c'est du shell et il est <a href="https://github.com/priximmo/oneliner/blob/master/deploy-centre-sans-proxy.sh">dispo sur le github</a>

Quatre options :
<ul>
	<li>--proxy : utilisation perso mais à vous de l'adapter vous pouvez avec prévoir d'ajouter votre proxy dans http-proxy.conf</li>
	<li>--create : par défaut il créé 2 conteneurs mais vous pouvez en mettre autant que vous souhaitez</li>
	<li>-- drop : pour nettoyer les conteneurs créés</li>
	<li>--infos : donne les ips,users des conteneurs</li>
</ul>
Dans le create, vous pouvez voir que l'on créé un user du même nom que votre utilisateur courant et on pousse votre clé publique dans le conteneur. On installe aussi python-minimal et sudo, nécessaires pour faire du ansible dans mon cas. Et à la fin de la création j'utilise docker inspect pour récupérer les ip des conteneurs pour donner un petit récapitulatif.
<pre>#!/bin/bash

###############################################################
#  TITRE: parc de conteneurs
#
#  AUTEUR:   Xavier
#  VERSION: 1.1
#  CREATION:  17/09/2018
#  MODIFIE: 
#
#  DESCRIPTION: 
#   mot de passe obtenu par :
#          perl -e 'print crypt("password", "salt"),"\n"'
###############################################################

USERNAME=$(id -nu)

if [ "$1" == "--proxy" ];then
	
	if [ -f /etc/systemd/system/docker.service.d/http-proxy.conf ];then
		sudo rm -f /etc/systemd/system/docker.service.d/http-proxy.conf
		sudo service docker restart
	fi 

fi


if [ "$1" == "--create" ];then
	
	nbserv=$2
	[ "$nbserv" == "" ] &amp;&amp; nbserv=2
	
	# rapatriement de l'image si elle n'exsiste pas
	echo "Installation de l'image "
	docker pull priximmo/stretch-systemd-ssh:v3.1

	# création des conteneurs
	echo "Création : ${nbserv} conteneurs..."

	# détermination de l'id mini
  id_first=$(docker ps -a --format "{{ .Names }}" |grep "oki-vmparc" | sed s/".*-vmparc"//g  | sort -nr | head -1)
	id_min=$(($id_first+1))

	#détermination de l'id max
	id_max=$(($nbserv + $id_min - 1))

	for i in $( seq $id_min $id_max );do
		echo ""
		echo "=&gt; conteneur ${USERNAME}-vmparc${i}"
    docker run -tid -v /sys/fs/cgroup:/sys/fs/cgroup:ro --name ${USERNAME}-vmparc${i} priximmo/stretch-systemd-ssh:v3.1
		echo "    =&gt; création de l'utilisateur ${USERNAME}"
		docker exec -ti ${USERNAME}-vmparc${i} /bin/bash -c "useradd -m -p sa3tHJ3/KuYvI ${USERNAME}"
		echo "Installation de votre clé publique ${HOME}/.ssh/id_rsa.pub"
		docker exec -ti ${USERNAME}-vmparc${i} /bin/bash -c "mkdir  ${HOME}/.ssh &amp;&amp; chmod 700 ${HOME}/.ssh &amp;&amp; chown ${USERNAME}:${USERNAME} $HOME/.ssh"
		docker cp ${HOME}/.ssh/id_rsa.pub ${USERNAME}-vmparc${i}:${HOME}/.ssh/authorized_keys
		docker exec -ti ${USERNAME}-vmparc${i} /bin/bash -c "chmod 600 ${HOME}/.ssh/authorized_keys &amp;&amp; chown ${USERNAME}:${USERNAME} ${HOME}/.ssh/authorized_keys"
		docker exec -ti ${USERNAME}-vmparc${i} /bin/bash -c "echo '${USERNAME}   ALL=(ALL) NOPASSWD: ALL'&gt;&gt;/etc/sudoers"
		docker exec -ti ${USERNAME}-vmparc${i} /bin/bash -c "service ssh start"
	done
	echo ""
	echo "Liste des ip  attribuées :"
	for i in $( seq $id_min $id_max );do

	infos_conteneur=$(docker inspect -f '   =&gt; {{.Name}} - {{.NetworkSettings.IPAddress }}' ${USERNAME}-vmparc${i})
	echo "${infos_conteneur} - Utilisteur : ${USERNAME} / mdp:password"
	
	done

fi

if [ "$1" == "--drop" ];then

	for i in $(docker ps -a --format "{{ .Names }}" |grep "${USERNAME}-vmparc" );do
		echo "     --Arrêt de ${i}..."
		docker stop $i
		echo "     --Suppression de ${i}..."
		docker rm $i
		done

fi

if [ "$1" == "--infos" ]; then

	for i in $(docker ps -a --format "{{ .Names }}" |grep "vmparc" );do
		infos_conteneur=$(docker inspect -f '   =&gt; {{.Name}} - {{.NetworkSettings.IPAddress }}' ${i})
		echo "${infos_conteneur} - Utilisteur : ${USERNAME} / mdp:password"
	done

fi

if [ "$1" == "--start" ];then
	
	sudo /etc/init.d/docker start

	
        for i in $(docker ps -a --format "{{ .Names }}" |grep "vmparc" );do
                echo "     --Démarrage de ${i}..."
                docker start $i
                #echo "     --Démarrage de sshd sur ${i}"
                #docker exec -ti ${i} /bin/bash -c "sudo service ssh start"
        done
echo ""
echo "#### Récap des infos ####"
echo ""


	for i in $(docker ps -a --format "{{ .Names }}" |grep "${USERNAME}-vmparc" );do
                infos_conteneur=$(docker inspect -f '   =&gt; {{.Name}} - {{.NetworkSettings.IPAddress }}' ${i})
                echo "${infos_conteneur} - Utilisteur : ${USERNAME} / mdp:password"
        done


fi

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>696</wp:post_id>
		<wp:post_date>2018-09-21 10:00:29</wp:post_date>
		<wp:post_date_gmt>2018-09-21 09:00:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[697]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537520433]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22376203743]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1043062428026773504";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/WTW7B1vX7pC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6448828137059946496]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[[Ansible] : comment installer et configurer logrotate ? et trouver un rôle adapté &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.13</wp:comment_author_IP>
			<wp:comment_date>2018-10-05 09:27:43</wp:comment_date>
			<wp:comment_date_gmt>2018-10-05 08:27:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] un réseau de conteneurs docker pour mettre en place mes tests de rôles ansible. Pour en savoir plus c&rsquo;est ici et c&rsquo;est super [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1538728064.997543;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:11:{s:14:"comment_author";s:97:"[Ansible] : comment installer et configurer logrotate ? et trouver un rôle adapté &#8211; Xavki";s:18:"comment_author_url";s:105:"http://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:158:"[&#8230;] un réseau de conteneurs docker pour mettre en place mes tests de rôles ansible. Pour en savoir plus c&rsquo;est ici et c&rsquo;est super [&#8230;]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"192.0.101.13";s:10:"user_agent";s:33:"WordPress.com Pingback of Awesome";s:4:"blog";s:18:"https://xavki.blog";s:9:"blog_lang";s:2:"fr";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:114:"http://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1538728064]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[[Ansible] : comment installer un client et un serveur ntp ? &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.99.191</wp:comment_author_IP>
			<wp:comment_date>2018-09-28 08:56:10</wp:comment_date>
			<wp:comment_date_gmt>2018-09-28 07:56:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Avant de commencer, je ne vais pas revenir dessus dans le détail mais j&rsquo;utilise un script sympa (enfin je trouve). Il permet de me créer un ensemble de conteneurs façon VM (debian et redhat depuis la dernière évolution). Ainsi j&rsquo;ai une plateforme de développement et je peux simuler des lancements de playbook sur un parc de machines. Pour en savoir plus rendez-vous sur cet article qui présente le script et les grandes lignes. [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1538121371]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1538121372.110038;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:11:{s:14:"comment_author";s:73:"[Ansible] : comment installer un client et un serveur ntp ? &#8211; Xavki";s:18:"comment_author_url";s:83:"http://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:467:"[&#8230;] Avant de commencer, je ne vais pas revenir dessus dans le détail mais j&rsquo;utilise un script sympa (enfin je trouve). Il permet de me créer un ensemble de conteneurs façon VM (debian et redhat depuis la dernière évolution). Ainsi j&rsquo;ai une plateforme de développement et je peux simuler des lancements de playbook sur un parc de machines. Pour en savoir plus rendez-vous sur cet article qui présente le script et les grandes lignes. [&#8230;]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"192.0.99.191";s:10:"user_agent";s:33:"WordPress.com Pingback of Awesome";s:4:"blog";s:18:"https://xavki.blog";s:9:"blog_lang";s:2:"fr";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:114:"http://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ansible_docker</title>
		<link>http://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/ansible_docker/</link>
		<pubDate>Mon, 10 Sep 2018 11:25:52 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/ansible_docker.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>697</wp:post_id>
		<wp:post_date>2018-09-10 12:25:52</wp:post_date>
		<wp:post_date_gmt>2018-09-10 11:25:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ansible_docker</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>696</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/ansible_docker.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible_docker.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2048;s:6:"height";i:1536;s:4:"file";s:92:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible_docker.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:616820;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>appliance carpet chores device</title>
		<link>http://xavki.blog/vacuum-cleaner-carpet-cleaner-housework-housekeeping-38325/</link>
		<pubDate>Mon, 10 Sep 2018 12:06:18 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/vacuum-cleaner-carpet-cleaner-housework-housekeeping-38325.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Photo by Pixabay on <a href="https://www.pexels.com/photo/appliance-carpet-chores-device-38325/" rel="nofollow">Pexels.com</a>]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2018-09-10 13:06:18</wp:post_date>
		<wp:post_date_gmt>2018-09-10 12:06:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vacuum-cleaner-carpet-cleaner-housework-housekeeping-38325</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/vacuum-cleaner-carpet-cleaner-housework-housekeeping-38325.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/vacuum-cleaner-carpet-cleaner-housework-housekeeping-38325.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1880;s:6:"height";i:1253;s:4:"file";s:136:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/vacuum-cleaner-carpet-cleaner-housework-housekeeping-38325.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:321414;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Ansible] : commençons simplement : copie de fichiers, modification/écriture avec copy et lineinfile</title>
		<link>http://xavki.blog/2018/09/26/ansible-commencons-simplement-copie-de-fichiers-modification-ecriture-avec-copy-et-lineinfile/</link>
		<pubDate>Wed, 26 Sep 2018 09:58:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=722</guid>
		<description></description>
		<content:encoded><![CDATA[Précédemment, je vous avais fait part de ma volonté de me lancer dans ansible et de vous partager cette expérience d'apprentissage.

Un précédent article vous présentait un script qui me permet de mettre en place un "centre serveur de poche" à partir de conteneurs (attention ce ne sont que des conteneurs pas de VM donc pas des serveurs... pas la peine de lancer des discussions à ce sujet). Bref, l'idée de cet article était de vous expliquer mon script pour mettre en place une infrastructure légère permettant de me faire la main sur ansible.

Et le bilan c'est que ça marche très bien et que c'est bien plus léger que tout ce qui est à partir de VM. C'est extrèmement pratique pour bosser sur son portable car on peut faire et réinitialiser les serveurs très vites.

Maintenant, il faut se former.

https://www.youtube.com/watch?v=FUObYiI8eIM&amp;index=2&amp;t=0s&amp;list=PLn6POgpklwWo2dZBf371MbKLsYiLUHZzn
<h2>Le fichier inventory, la liste des serveurs</h2>
L'inventory est le fichier contenant la liste de référence de vos machines. Dans mon cas j'ai lancé deux conteneurs (machine) 172.17.0.2 et172.17.0.3. En avoir plusieurs c'est vraiment bien pour créer des variations au niveau des hosts et ainsi approfondir le fonctionnement de ansible.

Mon fichier se nomme hosts (comme souvent sur ansible) :
<pre>└─ $ ▶ cat hosts [web] 172.17.0.2 172.17.0.3</pre>
J'ai choisi le format init et non le yaml car je suis tombé avec un bug en lien avec python 3.5 (ansible ne lisait pas le yaml de l'inventory).

Pour tester votre inventory, vous pouvez lancer :
<pre>ansible -i hosts all --list-hosts</pre>
Ensuite, vous pouvez tester une commande linux sur votre parc, par exemple "uptime" :
<pre>00:07:33 - oki @ doki ~/autoform_ansible  └─ $ ▶ ansible -i hosts all -u oki -m shell -a "uptime" 172.17.0.3 | SUCCESS | rc=0 &gt;&gt; 22:07:35 up 1:26, 1 user, load average: 1.00, 0.75, 0.66  172.17.0.2 | SUCCESS | rc=0 &gt;&gt; 22:07:35 up 1:26, 1 user, load average: 1.00, 0.75, 0.66</pre>
<h2>L'arborescence</h2>
Extrèmement importante cette arborescence dans un outil d'orchestration comme ansible. En effet, cela peut vite tourner au boxon tellement vous aller générer de fichiers.

De base si on ne rentre pas dans les roles :

.
├── group_vars
│   └── web
├── hosts
├── host_vars
│   ├── 172.17.0.2
│   └── 172.17.0.3
├── playbook-manip.yml
<ul>
	<li>group_vars : contient les variables des groupes (regroupement de serveur) par exemple "web" dans mon cas</li>
	<li>hosts : c'ets l'inventory de nos machines classées par groupe</li>
	<li>host_vars : contient les variables des machines (pour spécifier à la machine une variable)</li>
	<li>playbook.yml : les actions à réaliser</li>
</ul>
Les deux éléments centraux sont donc : la liste des machines et les actions à réaliser dessus.
<h2>Le playbook</h2>
On l'a dit le playbook contient les actions à réaliser (et par qui et sur qui). L'entête sert principalement à définir par qui et sur qui de cette manière :
<pre>--- - name: Lancement des actions   hosts: web   remote_user: oki   become: yes   tasks:</pre>
<ul>
	<li>hosts : pour dire sur quelles machines ou quel groupe on travaille (en l'occurence web dans mon exemple)</li>
	<li>remote_user : qui va exécuter les actions</li>
	<li>become : permet d'élever les privilèges si nécessaire pour faire les actions</li>
	<li>tasks : indique la liste des actions à venir</li>
</ul>
Le "- name:" est extrèment important. Il permet sera défini de nombreuse fois tout au long de notre code et permet au lancement du playbook de savoir où nous en sommes. C'est donc indispensable pour débugger.

La première action que nous allons réaliser c'est de copier un fichier présent au même niveau que notre playbook (c'est moche je sais mais c'est simple avant tout).
<pre> - name: Transfert de monfichier.txt    copy:      src: ./monfichier.txt      dest: /tmp/monfichier.txt</pre>
Nous définissons donc le nom de l'action que nous allons lancer par "- name:". Puis utilisons le module copy de ansible. Pour copier/coller un fichier il prend deux éléments :
<ul>
	<li>src: le fichier source</li>
	<li>dest: le fichier de destination</li>
</ul>
Dans une deuxième action nous allons modifier le contenu de mon fichier qui ne contient que "bonjour Xavier" pour le faire contenir "Remplacement salut Xavier". Et pour cela nous allons utiliser le module lineinfile :
<pre> - name: Modification de monfichier.txt    lineinfile:      path: /tmp/monfichier.txt      regexp: "^bonjour(.*)"      line: 'Remplacement salut\1'      backrefs: yes</pre>
Dans cette utilisation de lineinfile je transmets les éléments :
<ul>
	<li>path : la localisation de mon fichier à modifier</li>
	<li>regexp : un élément permettant de retrouver la ligne et capturer un motif (dans mon cas je capture "Xavier" par exemple</li>
	<li>line : la nouvelle ligne contenant mon texte et "\1" c'est à dire le motif capturé</li>
	<li>backrefs : pour utiliser la capture à partir du backslash</li>
</ul>
Mon playbook au final contient ceci (attention l'indentation doit être stricte, c'est un yaml) :
<pre>--- - name: Lancement des actions   hosts: all   remote_user: oki   become: yes   tasks:      - name: Transfert de monfichier.txt       copy:         src: ./monfichier.txt         dest: /tmp/monfichier.txt      - name: Modification de monfichier.txt       lineinfile:         path: /tmp/monfichier.txt         regexp: "^bonjour(.*)"         line: 'Remplacement salut\1'         backrefs: yes</pre>
Pour lancer votre playbook sur votre inventory passez :
<pre>ansible-playbook -i hosts --user=oki -D playbook-fichier.yml</pre>
Et en sortie le résultat du log ansible donne :
<pre>PLAY [Lancement des actions] ********************************************************************************************************************************************************************  TASK [Gathering Facts] ************************************************************************************************************************************************************************** ok: [172.17.0.2] ok: [172.17.0.3]  TASK [Transfert de monfichier.txt] ************************************************************************************************************************************************************** --- before: /tmp/monfichier.txt +++ after: /home/oki/autoform_ansible/monfichier.txt @@ -12,4 +12,4 @@ ###############################################################   -Remplacement salut Xavier +bonjour Xavier  changed: [172.17.0.3] --- before: /tmp/monfichier.txt +++ after: /home/oki/autoform_ansible/monfichier.txt @@ -12,4 +12,4 @@ ###############################################################   -Remplacement salut Xavier +bonjour Xavier  changed: [172.17.0.2]  TASK [Modification de monfichier.txt] ****************************************** --- before: /tmp/monfichier.txt (content) +++ after: /tmp/monfichier.txt (content) @@ -12,4 +12,4 @@ ###############################################################   -bonjour Xavier +Remplacement salut Xavier  changed: [172.17.0.3] --- before: /tmp/monfichier.txt (content) +++ after: /tmp/monfichier.txt (content) @@ -12,4 +12,4 @@ ###############################################################   -bonjour Xavier +Remplacement salut Xavier  changed: [172.17.0.2]  PLAY RECAP *************************************************** 172.17.0.2 : ok=3 changed=2 unreachable=0 failed=0  172.17.0.3 : ok=3 changed=2 unreachable=0 failed=0</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date>2018-09-26 10:58:05</wp:post_date>
		<wp:post_date_gmt>2018-09-26 09:58:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-commencons-simplement-copie-de-fichiers-modification-ecriture-avec-copy-et-lineinfile</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[723]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537956171]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22548979327]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1044890041229684736";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/1QQ4qSrmruX]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6450655747402407936]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ansible-playbook</title>
		<link>http://xavki.blog/2018/09/26/ansible-commencons-simplement-copie-de-fichiers-modification-ecriture-avec-copy-et-lineinfile/ansible-playbook/</link>
		<pubDate>Wed, 12 Sep 2018 21:57:15 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/ansible-playbook.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>723</wp:post_id>
		<wp:post_date>2018-09-12 22:57:15</wp:post_date>
		<wp:post_date_gmt>2018-09-12 21:57:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ansible-playbook</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>722</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/ansible-playbook.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible-playbook.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1200;s:6:"height";i:900;s:4:"file";s:93:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible-playbook.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:165005;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Docker] : comment créer une image à partir d&#039;un conteneur et la pousser ?</title>
		<link>http://xavki.blog/2018/09/25/docker-comment-creer-une-image-a-partir-dun-conteneur-et-la-pousser/</link>
		<pubDate>Tue, 25 Sep 2018 08:10:18 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=726</guid>
		<description></description>
		<content:encoded><![CDATA[Comme dirait l'autre ça va finir par rentrer, nom d'une pipe. Mais cela fait plusieurs fois que je fais cette manip et comme écrire un article m'aide à retenir les choses je vais vous faire partager une manip docker.

Le but aujourd'hui c'est de savoir comment créer une image à partir d'un conteneur existant que vous avez ajustez à votre guise. Dans mon cas c'est un conteneur qui permet d'avoir une debian stretch avec systemd, openssh, sudo et vim. La grosse subtilité c'est d'avoir systemd mais je ne vais pas vous détailler cela aujourd'hui.

<img src="https://xavki.files.wordpress.com/2018/09/docker-image-conteneur.jpeg" class="wp-image-727 aligncenter" height="300" alt="docker-image-conteneur" width="400">

La première chose à faire c'est de connaître l'id de son conteneur avec un bon docker ps :
<pre>└─ $ ▶ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES bbb5c547002c debian-systemd "/lib/systemd/systemd" 31 minutes ago Up 31 minutes competent_vaughan</pre>Ensuite il faut commiter tout ceci dans une nouvelle image <a href="https://docs.docker.com/engine/reference/commandline/container_commit/">avec un docker commit</a> (à partir de l'ID de l'image) :
<pre>└─ $ ▶ docker commit -m "image stretch + systemd + openssh" bbb5c547002c priximmo/stretch-systemd-ssh</pre>Sivous faite un docker image ls, vous pouvez déjà voir votre image sur votre pc en local.

Puis si vous le souhaitez vous pouvez pousser ceci sur dockerhub ou un autre repository.
<pre>docker login docker push priximmo/stretch-systemd-ssh</pre>Et voilà vous disposez de votre image en local et sur votre dépôt.

Retrouvez l'image en question sur <a href="https://hub.docker.com/r/priximmo/stretch-systemd-ssh/">docker hub.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>726</wp:post_id>
		<wp:post_date>2018-09-25 09:10:18</wp:post_date>
		<wp:post_date_gmt>2018-09-25 08:10:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-comment-creer-une-image-a-partir-dun-conteneur-et-la-pousser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[727]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1044504405247250432";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22509543573]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537864229]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/25zM4Pp7Uby]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6450270113642881024]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>docker-image-conteneur</title>
		<link>http://xavki.blog/2018/09/25/docker-comment-creer-une-image-a-partir-dun-conteneur-et-la-pousser/docker-image-conteneur/</link>
		<pubDate>Thu, 13 Sep 2018 19:58:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/docker-image-conteneur.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>727</wp:post_id>
		<wp:post_date>2018-09-13 20:58:06</wp:post_date>
		<wp:post_date_gmt>2018-09-13 19:58:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>docker-image-conteneur</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>726</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/docker-image-conteneur.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/docker-image-conteneur.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2048;s:6:"height";i:1536;s:4:"file";s:100:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/docker-image-conteneur.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:489283;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Ansible] : le samedi c&#039;est debug de mon erreur avec include_tasks</title>
		<link>http://xavki.blog/2018/09/22/ansible-le-samedi-cest-debug-de-mon-pb-avec-include_tasks/</link>
		<pubDate>Sat, 22 Sep 2018 08:55:42 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=764</guid>
		<description></description>
		<content:encoded><![CDATA[Pour une fois je publie un article le samedi. Ne vous inquiétez pas, pas de spam. D'ailleurs si ce n'est déjà fait vous pouvez vous inscrire pour recevoir les articles du blog et ne pas manquer les prochains.

J'aimerai revenir sur ma mésaventure ansible de la semaine.

En fait, je suis toujours en train de monter en compétences sur ansible. Hier je testé un rôle tout simple de ntp (dont la source est le très bon <a href="https://galaxy.ansible.com/geerlingguy">geerlingguy</a>).

Donc j'importe mon rôle :
<pre>ansible-galaxy install -p roles geerlingguy.ntp</pre>
Et là paff ça marche pas.
<pre>The error appears to have been in '/home/oki/autoform_ansible/roles/geerlingguy.ntp/tasks/main.yml': line 16, column 3, but may
be elsewhere in the file depending on the exact syntax problem.</pre>
Pourtant l'auteur de la source est ultra fiable et les dernières mises à jour datent de 22 jours. Là j'ai un gros doute.

Donc mon premier réflexe (le mauvais), je recherche sur internet à partir du message d'erreur. Je vois donc que l'on parle de la version 2.4 et je ne suis qu'en 2.3. Bon ben je décide de monter de version.

Me voici en 2.4 et là je tombe sur une autre erreur : mauvaise reconnaissance de l'inventory.
<pre> [WARNING]: * Failed to parse /home/oki/autoform_ansible/hosts with constructed plugin:
Unable to parse /home/oki/autoform_ansible/hosts: Syntax Error while loading YAML.</pre>
Pas de bol. Donc je recherche et là je tombe sur quelqu'un qui explique qu'un patch est passé pour régler le pb en 2.4.1. Ce que je fais je monte de version.

Ah au fait pour monter de version facilement :
<pre>sudo pip install ansible==2.4.1</pre>
et la bingo tout marche comme il faut.

Mais le  bon réflexe c'est déjà <a href="https://docs.ansible.com/ansible/2.4/include_tasks_module.html">de voir la doc ansible de include_tasks</a>. J'aurais vu que cette fonctionnalité est incrémentée à partir de la 2.4. Bon pour l'autre problème c'est autre chose.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>764</wp:post_id>
		<wp:post_date>2018-09-22 09:55:42</wp:post_date>
		<wp:post_date_gmt>2018-09-22 08:55:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-le-samedi-cest-debug-de-mon-pb-avec-include_tasks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[765]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1043424243638259712";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/dR1ATwtavUf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22410635273]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1537606697]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6449189948686888960]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ansible_logo</title>
		<link>http://xavki.blog/2018/09/22/ansible-le-samedi-cest-debug-de-mon-pb-avec-include_tasks/ansible_logo/</link>
		<pubDate>Fri, 21 Sep 2018 13:57:08 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/ansible_logo.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>765</wp:post_id>
		<wp:post_date>2018-09-21 14:57:08</wp:post_date>
		<wp:post_date_gmt>2018-09-21 13:57:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ansible_logo</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>764</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/ansible_logo.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible_logo.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:600;s:6:"height";i:600;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible_logo.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:16559;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ansible-ntp</title>
		<link>http://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/ansible-ntp/</link>
		<pubDate>Tue, 25 Sep 2018 15:57:13 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/09/ansible-ntp.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>778</wp:post_id>
		<wp:post_date>2018-09-25 16:57:13</wp:post_date>
		<wp:post_date_gmt>2018-09-25 15:57:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ansible-ntp</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>777</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/09/ansible-ntp.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible-ntp.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2048;s:6:"height";i:1536;s:4:"file";s:89:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/09/ansible-ntp.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:619211;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[docker] : copier un fichier de votre host vers un container avec tar</title>
		<link>http://xavki.blog/2018/10/02/docker-copier-un-fichier-de-votre-host-vers-un-container-avec-tar/</link>
		<pubDate>Tue, 02 Oct 2018 10:38:45 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[Docker est quand même très pratique. Les commandes sont pensées avec simplicité.  Là par exemple nous allons voir comment très simplement passer un fichier où le contenu d'un tar directement du serveur qui porte docker vers le conteneur.

En fait c'est ultra simple :
<pre>docker cp /chemin/source +nom_conteneur+:/conteneur/chemin/</pre>
C'est donc comme si on passait un bon vieux cp c'est fou ça ?

Et l'inverse est vrai :
<pre>docker cp :/conteneur/chemin/ /chemin/source</pre>
Alors avec un tar comment faire ?
<pre>tar -cv * | docker exec -i +conteneur+ tar x -C /var/www&gt;</pre>
Donc :
<ul>
	<li>tar -cv : on créé une archive en mode verbose</li>
	<li>on exécute un tar dans le conteneur</li>
	<li>on extrait l'archive (x)</li>
</ul>
Et vous, comment faites vous pour faire ce genre de copie de fichier ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2018-10-02 11:38:45</wp:post_date>
		<wp:post_date_gmt>2018-10-02 10:38:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-copier-un-fichier-de-votre-host-vers-un-container-avec-tar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[293]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1047073402593390592";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22754080735]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538476726]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/WDsQEBphJGz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6452839108594139136]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Tips] : booster votre navigateur firefox</title>
		<link>http://xavki.blog/2018/10/02/tips-booster-votre-firefox/</link>
		<pubDate>Tue, 02 Oct 2018 13:35:32 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[Firefox utilise le moteur de bases de données sqlite. Ces bases lui permetttent par profil de stocker des éléments de chacun d'eux (cookies, marques pages...). Et comme toutes les bases de données, il est parfois nécessaire de faire un peu de ménage au fur et à mesure des INSERT et des DELETE.

Sur sqlite, la commande magique qui fait le ménage pour vous c'est VACUUM. Elle optimise la base si vous voulez.
<pre>find ~ -name '*.sqlite' -exec sqlite3 '{}' 'VACUUM;' \;</pre>
Autre chose, saviez vous que vous pouviez manager les bases sqlite par un simple plugin Firefox ? <a href="https://addons.mozilla.org/fr/firefox/addon/sqlite-manager/">découvrrez le plugin SQLite Manager</a>.

<img class="alignnone size-full wp-image-337" src="https://xavki.files.wordpress.com/2018/07/firefox-on-fire-tv-announcement-1400x770.png" alt="Firefox-on-Fire-TV-announcement-1400x770" width="1400" height="770" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2018-10-02 14:35:32</wp:post_date>
		<wp:post_date_gmt>2018-10-02 13:35:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tips-booster-votre-firefox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[337]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1047117923280703488";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/cHwsqa9CKgZ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22758926297]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538487332]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6452883654208159745]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Git] : un git log en couleur avec date, user et commit</title>
		<link>http://xavki.blog/2018/10/04/git-un-git-log-en-couleur-avec-date-user-et-commit/</link>
		<pubDate>Thu, 04 Oct 2018 11:30:39 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[Git est un formidable outil de versioning. L'article d'aujourd'hui vient compléter celui où je vous présentais <a href="https://xavki.wordpress.com/2018/07/26/git-afficher-le-status-de-tous-vos-depots/">comment lister tout vos dépôts et identifier leurs status</a>. Et git log est un très bon traceur pour savoir qui a fait quoi, sur quoi et quand... modulo de bien jouer le jeu en rédigeant de bons commits.

Je vous propose deux git log permettant de facilement extraire les modifications avec : date, user et commit.

Le premier est relativement épuré car il n'utilise pas l'option --graph qui permet de voir les différents merges.
<pre>git log --pretty=format:"%h%x09%an%x09%ad%x09%s"</pre>
Le résultat de ce git log :

<img class="alignnone size-full wp-image-360" src="https://xavki.files.wordpress.com/2018/08/git-log.png" alt="git-log" width="563" height="70" />

Le second est beaucoup plus complet et fun en apportant de la couleur et l'option --graph. Je le trouve très classe je ne sais pas ce que vous en pensez.
<pre>git log --graph --pretty=format:'%Cred%h%Creset \
-%C(yellow)%d%Creset %s %Cgreen(%cr)%Cblue \
- %cn %Creset' --abbrev-commit --date=relative
</pre>
Le résultat de ce git log --graph est très sympa :

<img class="alignnone size-full wp-image-361" src="https://xavki.files.wordpress.com/2018/08/git-graph.png" alt="git-graph" width="511" height="192" />

Eh oui c'était du test donc mes commits ne sont pas locaces lol.

Et vous quelles commandes git utilisez vous couramment ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2018-10-04 12:30:39</wp:post_date>
		<wp:post_date_gmt>2018-10-04 11:30:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-un-git-log-en-couleur-avec-date-user-et-commit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1047811239722799105";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22828849804]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538652639]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/2ntdQYMBYM8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6453576949108338688]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Ansible] : lister les variables de rôles non documentées dans le README.md</title>
		<link>http://xavki.blog/2018/10/03/ansible-lister-les-variables-de-roles-non-documentees-dans-le-readme-md/</link>
		<pubDate>Wed, 03 Oct 2018 08:00:12 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=365</guid>
		<description></description>
		<content:encoded><![CDATA[Les rôles de ansible sont plus ou moins faciles à utiliser. Un des principaux facteurs limitants, c'est la documentation du README. Du coup j'ai créé un petit script pour lister les variables de vos rôles et ensuite vérifier si ces variables sont bien documentées dans le README.md (si vous avez d'autres idées n'hésitez pas).
<pre>#!/usr/bin/python3
  # coding: utf8 
  import re import os
 def list_variables (pattern, dir):     
  variables=[]     
  r = re.compile(pattern)     
  for parent, dnames, fnames in os.walk(dir):  
       for fname in fnames:
             filename = os.path.join(parent, fname) 
            if os.path.isfile(filename):
                 with open(filename,encoding="latin-1") as f: 
                    for line in f:
                         if r.search(line):
                           reg=r"pattern"
                           for item in re.findall(r''+pattern+'',line):
                             if item not in variables: 
                              variables.append(item) 
  return variables  

# lister les roles
 def list_roles (dir):
         roles=[]
         regexp = re.compile(r'.*\/roles\/[a-z0-1_-]+$') 
        for dirname, dirnames, filenames in os.walk('.'): 
                for subdirname in dirnames:
                         rep=os.path.join(dirname, subdirname)
                         if regexp.search(rep):
                                 roles.append(rep) 
        return roles
 
 # avec la fonction grep on liste toutes les variables contenant un _ 

for role in list_roles("."):
     r = re.compile('[.]?roles/(.*)')
     match = r.search(role) 
    print("") 
    print("#################################################################")
     print("         Analyse du role : "+ match.group(1)) 
    print("#################################################################")     compteur=0
     list_var=list_variables("\{\{\s?([a-z]+[_]+[a-z_]+)\s?\}\}",role)
     for variable in list_var: 
        compteur+=1
         with open(roles+"/README.md",encoding="latin-1") as f:
             concaten="" 
            for line in f:
                 concaten+=line
             if not re.search(variable,concaten):
                 print("Variable à éditer :"+variable)
     print(" = "+str(compteur)+" variable(s) analysé(es)")
</pre>
Explications :
<ul>
	<li> une fonction qui liste les variables ansible :</li>
	<li>
<ul>
	<li>on parcourt les directories (à l'aide du module OS de python)</li>
</ul>
</li>
	<li>
<ul>
	<li>et avec une regex on applique un pattern pour retrouver ce qui ressemble à une variable ({{ variable }}</li>
</ul>
</li>
	<li>
<ul>
	<li>enfin on met tout cela dans un tableau bien propre</li>
</ul>
</li>
	<li>une fonction qui liste les rôles :</li>
	<li>
<ul>
	<li>idem on parcourt les directories et on cherche les répertoires contenus dans "roles"</li>
</ul>
</li>
	<li>
<ul>
	<li>à l'aide d'une regex on nettoie le nom du rôle</li>
</ul>
</li>
	<li>Pour finir on orchestre tout cela :</li>
	<li>
<ul>
	<li>on boucle sur la liste des variables</li>
</ul>
</li>
	<li>
<ul>
	<li>on ouvre le README.md que l'on place dans une variable simple(on concatène les lignes)</li>
</ul>
</li>
	<li>
<ul>
	<li>et on y cherche la variable</li>
</ul>
</li>
	<li>
<ul>
	<li>si elle n'est pas dedans on affiche qu'elle est à éditer</li>
</ul>
</li>
	<li>
<ul>
	<li>et pour finir on affiche à la fin de chaque rôle le nombre de variables analysées.</li>
</ul>
</li>
</ul>
Si vous voyez d'autres scripts de ce genre qui pourrait être utiles indiquez le en commentaire j'y jeterez un coup d'oeil.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>365</wp:post_id>
		<wp:post_date>2018-10-03 09:00:12</wp:post_date>
		<wp:post_date_gmt>2018-10-03 08:00:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-lister-les-variables-de-roles-non-documentees-dans-le-readme-md</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/dohS7dbjNPK]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538554017]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22786993039]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1047397586099949569";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6453163291698044928]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : comment inverser un string ou une phrase (ou une liste plus généralement) ?</title>
		<link>http://xavki.blog/2018/10/08/python-comment-inverser-un-string-ou-une-phrase-ou-une-liste/</link>
		<pubDate>Mon, 08 Oct 2018 08:30:33 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=402</guid>
		<description></description>
		<content:encoded><![CDATA[C'est bref mais efficace avec python : comment inverser une liste ? ou une phrase ? Il suffit de savoir manipuler les listes et parcourir cette liste à l'envers. C'est quelque chose que doivent savoir faire les débutants.

Il existe toutefois 2 méthodes.

La première c'est d'utiliser les plage d'index et de partir par la fin comme ceci :

<pre>
&gt;&gt;&gt; text="Salut tout le monde"
&gt;&gt;&gt; text[::-1]
'ednom el tuot tulaS'
</pre>

Terriblement efficace.

Sinon il y a la méthode par les méthodes lol avec reversed qui s'applique aux listes.

<pre>
&gt;&gt;&gt; text="Salut tout le monde"
&gt;&gt;&gt; "".join(reversed(text))
'ednom el tuot tulaS'
</pre>

N'hésitez pas à partager en commentaires vos astuces !]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>402</wp:post_id>
		<wp:post_date>2018-10-08 09:30:33</wp:post_date>
		<wp:post_date_gmt>2018-10-08 08:30:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-inverser-un-string-ou-une-phrase-ou-une-liste</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[315]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/g4Efu8YxXU8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22958256800]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538987549]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1049215946898989061";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6454981652983746560]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : comment charger des datas en base de données mysql avec mysql.connector ?</title>
		<link>http://xavki.blog/?p=416</link>
		<pubDate>Wed, 10 Oct 2018 14:40:10 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[Revenons à nos pythons. Objectif du jour faire découvrir comment charger des données dans une base mysql à partir du module mysql.connector ?

Extrêmement facile. Vous me direz c'est normal car c'est le but des modules de python.

Premier cas on va chercher une ligne simple :
<pre># import du module
import mysql.connector

# paramètres de connexion à la base
mabase = mysql.connector.connect(
  host="localhost",
  user="monutilisateurdb",
  passwd="motdepassedb",
  database="madatabase"
)

cursor = mabase.cursor()

sql = "INSERT INTO matable (id, valeur) VALUES (%s, %s)"
data = [("1", "Xavki"),("2", "Pierre"),("3", "Jacques"),("4", "Paul")]
cursor.executemany(sql, data)

mabase.commit()
</pre>
Donc là on vient d'inséré une ligne. Mais bon on veut en insérer plusieur voir mieux insérer une liste. Alors il faut utiliser "executemany" :
<pre># import du module
import mysql.connector

# paramètres de connexion à la base
mabase = mysql.connector.connect(
  host="localhost",
  user="monutilisateurdb",
  passwd="motdepassedb",
  database="madatabase"
)

cursor = mabase.cursor()

sql = "INSERT INTO matable (id, valeur) VALUES (%s, %s)"
data = ("1", "Xavki")
cursor.execute(sql, data)

mabase.commit()
print(cursor.rowcount, " insérées") 
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2018-10-10 15:40:10</wp:post_date>
		<wp:post_date_gmt>2018-10-10 14:40:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-charger-des-datas-en-base-de-donnees-mysql-avec-mysql-connector</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[314]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : comment réaliser un explain plan ?</title>
		<link>http://xavki.blog/2018/09/27/oracle-comment-realiser-un-explain-plan/</link>
		<pubDate>Thu, 27 Sep 2018 09:57:50 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=513</guid>
		<description></description>
		<content:encoded><![CDATA[L'explain plan chez oracle c'est une possiblité de découvrir comment le moteur traite vos requêtes. Ainsi, vous voyez le cheminement réalisé par le moteur pour vous apporter le résultat.

Explain plan est donc le prinicipal outil pour optimiser vos requêtes et vos bases. Mais attention, le plus dur n'est pas de réaliser l'explain plan mais sa lecture et son interprétation (et ça il faut des années pour devenir un champion des l'optimisation).
<h2>Comment lancer un Explain Plan d'une requête ?</h2>
Si nécessaire, mettez en place le module utlxplan.sql
<pre>@$ORACLE_HOME/rdbms/admin/utlxplan.sql</pre>
Ensuite, définissez le nom de votre plan :
<pre>RENAME PLAN_TABLE TO monplan;</pre>
Ensuite lancez la requête qui va construire votre explain plan.
<pre>EXPLAIN PLAN FOR
SELECT champs1, champs2, champs3 FROM matable;</pre>
Maintenant, vous pouvez consulter le résultat en utilisant le DBMS_XPLAN.
<pre>SELECT PLAN_TABLE_OUTPUT
FROM TABLE(DBMS_XPLAN.DISPLAY());</pre>
Si vous souhaitez voir quelques exemple sur comment paser un explain, vous pouvez <a href="https://docs.oracle.com/cd/B10501_01/server.920/a96533/ex_plan.htm">consulter la page du site oracle</a>.
<h2>Comment l'analyser ?</h2>
Clairement, ce n'est pas dans cet article que vous allez apprendre à optimiser vos requêtes et bases.

Sur le blog de Markus Winand, <a href="https://use-the-index-luke.com/fr/sql/plans-dexecution/oracle/operations">vous trouverez cette page</a> qui va vous permettre de trouver les principaux termes que vous retrouverez dans les résultats d'un explain plan. En effet, le plan repose principalement sur l'exploitations de jointures et d'index pour vous apporter le résultat le plus vite possible.

Un résultat resemble à ceci :
<pre>| Id| Operation                   | Name          | Rows  | Bytes | Cost (%CPU)| Time     |
| 0 | SELECT STATEMENT            |               |     4 | 16208 |     3   (0)| 00:00:01 |
| 1 |  TABLE ACCESS BY INDEX ROWID| CONSULTANT    |     4 | 16208 |     3   (0)| 00:00:01 |
|*2 |   INDEX RANGE SCAN          | CONSULTANT_PK |     4 |       |     2   (0)| 00:00:01 |
</pre>
Source : <a href="http://blog.soat.fr/2012/12/les-plans-dexecutions-et-les-statistiques-oracle/">SOAT</a>

Dedans on peuty découvrir :
<ul>
	<li>le type d'opération</li>
	<li>le nombre de lignes parcourues</li>
	<li>le volume utilisé</li>
	<li>le coût</li>
	<li>le temps</li>
</ul>
Mais le principal c'est l'ordre. Un plan se lit de bas en haut. Le moteur commence par les actions du bas et remonte progressivement. Donc dans l'exemple, il accède à un index CONSULTANT_PK puis à la table CONSULTANT.
<h2>En apprendre plus par les experts oracle</h2>
Pour cela il existe une très bonne vidéo d'une interventionde Maria Colgan.

https://www.youtube.com/watch?v=WhuufIeGefE

Et si vous voulez en voir une un peu plus courte mais déjà bien complète, commencez par celle de Jeff Smith.

https://www.youtube.com/watch?v=-IWxdI9-Z-U

Je vous invite à lire le document : <a href="https://www.polymorphe.org/index.php/311-oracle-lire-et-interpreter-un-plan-d-execution">xplan_webinar.pdf</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>513</wp:post_id>
		<wp:post_date>2018-09-27 10:57:50</wp:post_date>
		<wp:post_date_gmt>2018-09-27 09:57:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-comment-realiser-un-explain-plan</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22585193934]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[515]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/e8ScTxMbcCE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538042270]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1045251163371778049";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6451016871482265600]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top commandes linux #10 : apg, tar.gz, mariadb galera, comm, rpm, vim</title>
		<link>http://xavki.blog/2018/10/01/top-commandes-linux-10-apg/</link>
		<pubDate>Mon, 01 Oct 2018 08:12:10 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=745</guid>
		<description></description>
		<content:encoded><![CDATA[Nouvelle semaine, nouveau tour de quelques binaires et informations que j'ai découvert au cours de la semaine. Je vous rappelle que <a href="https://xavki.blog/top-commandes/">vous pouvez les retrouver sur cette page</a>. Par ailleurs, si vous ne voulez pas manquer les prochains articles, <strong>inscrivez-vous aux publications (zéro spam, pas de ebook et autres perturbations)</strong>.

<strong># rpm</strong>

Lister les 100 plus gros paquets installés sur une redhat sauf kernel, glib...
<pre>rpm -qa --queryformat "%10{SIZE} %{NAME}\n" | grep -Ev "(kernel|glibc|perl$|python-libs$|coreutils|hwdata$|glib2|grub2$|yum$|binutils$)" | sort -rn | head -100</pre>
# vim

Ajout du nom du fichier en cours d'édition
<pre>:%p</pre>
<strong># apg</strong>

Petit binaire pour générer un mot de passe simplement.
<pre>21:48:52 - oki @ doki ~ 
└─ $ ▶ apg

Please enter some random data (only first 16 are significant)
(eg. your old password):&gt;
anFiwiorj6 (an-Fi-wi-orj-SIX)
leffIttOlv7 (leff-Itt-Olv-SEVEN)
Piewgeeb0 (Piewg-eeb-ZE
fegBetEv4 (feg-Bet-Ev-FOUR)</pre>
<strong># tar.gz</strong>

Comment conserver les propriétaires et les permissions ?
<pre>tar -zcvf /destination.monfichier.tar.gz
--same-owner --same-permissions /repertoire/source/</pre>
<strong># comm</strong>

Comparer deux répertoires sur 2 colonnes
<pre id=":5ai" class="hP">comm -3 &lt;(ls olddir) &lt;(ls newdir)</pre>
Article de  la semaine :
<ul>
	<li><a href="https://www.developpez.com/actu/224656/Le-projet-Linux-adopte-a-son-tour-le-contributor-Covenant-Code-of-Conduct-pour-promouvoir-un-environnement-inclusif-et-accueillant-sans-toxicite/">Le projet Linux adopte le contributor Covenant Code of Conduct</a></li>
</ul>
Vidéo de la semaine :
<ul>
	<li>Installer Maria Galera Cluster sur une centos : <a href="https://raw.githubusercontent.com/itlabvn/share/master/install-config-galera-cluster-text-guide.txt">fichier texte guide</a></li>
</ul>
https://www.youtube.com/watch?v=PuYKc4uxeC0]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>745</wp:post_id>
		<wp:post_date>2018-10-01 09:12:10</wp:post_date>
		<wp:post_date_gmt>2018-10-01 08:12:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-commandes-linux-10-apg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1046676027827720192";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538381984]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22714133606]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/ScVtamPTJbf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6452441732133974016]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TCL #11 : mkfs, sed, openssl, pdfjam, sed</title>
		<link>http://xavki.blog/2018/10/08/tcl-11/</link>
		<pubDate>Mon, 08 Oct 2018 06:41:31 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=770</guid>
		<description></description>
		<content:encoded><![CDATA[Hello la team !

J'espère que vous allez bien. Moi ça va pas mal. Ent erme d'évolution je pense que les articles de récapitulatif de commandes comme celui-ci seront désormais publiés toues les 2 semaines ou une fois par mois. En effet, j'ai un peu moins de temps pour cela et je préfère passer du temps pour vous partager des choses plus techniques (par exemple sur ansible).
<ul>
	<li><strong>Vim</strong></li>
</ul>
Splitter verticalement votre vim pour afficher un second fichier
<pre>:vsp file1</pre>
<ul>
	<li><strong>sed</strong></li>
</ul>
Comment grepper un pattern avec sed ?

sed -n "/PATTERN/p" file
<ul>
	<li><strong>mkfs</strong></li>
</ul>
Comment formater enfat 32 et renommer sa clef usb ?
<pre><span class="m_6060423198255684160mb_text">mkfs.vfat -F 32 -n ma_clef_usb /dev/sda7</span></pre>
<ul>
	<li><strong>pdfjam</strong></li>
</ul>
Fusionner des pdf en un seul
<pre id=":b1t" class="hP">pdfjam 1.pdf 2.pdf 3.pdf</pre>
<ul>
	<li><strong>Sed</strong></li>
</ul>
Afficher les caractères invisibles d'un fichier
<pre>sed -n "l" file</pre>
<ul>
	<li><strong>Openssl</strong></li>
</ul>
Comment réaliser une connexion ssl manuellement en ligne de commande
<pre>openssl s_client -connect &lt;server&gt;:443</pre>
Article de la semaine :
<ul>
	<li><a href="https://dev.to/agathacco/how-to-create-pure-css-illustrations-and-animate-them---part-1-1j1k">Dessiner vraiment avec le css</a> c'est fou</li>
</ul>
La vidéo de la semaine : la liste et la vulnérabilité des réseaux wifi à proximité de chez vous et dans le monde avec le site <a href="https://wigle.net/">https://wigle.net/</a>

[youtube https://www.youtube.com/watch?v=wBl7HM6a4Wo&amp;w=560&amp;h=315]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>770</wp:post_id>
		<wp:post_date>2018-10-08 07:41:31</wp:post_date>
		<wp:post_date_gmt>2018-10-08 06:41:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tcl-11</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/BbzwaqfCfzA]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538980895]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22955545413]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1049188040290324481";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6454953745750065152]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Ansible] : comment installer un client et un serveur ntp ?</title>
		<link>http://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/</link>
		<pubDate>Fri, 28 Sep 2018 07:56:04 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=777</guid>
		<description></description>
		<content:encoded><![CDATA[Cet article fait suite à mon fil rouge sur ansible. L'idée c'est de vous relater quelques moments de mon autoformation dans ce domaine. Pour moi c'est aussi le moment de me pencher différement sur ce que je fais et de constituer mon bloc-note.

Avant de commencer, je ne vais pas revenir dessus dans le détail mais j'utilise un script sympa (enfin je trouve). Il permet de me créer un ensemble de conteneurs façon VM (debian et redhat depuis la dernière évolution). Ainsi j'ai une plateforme de développement et je peux simuler des lancements de playbook sur un parc de machines. Pour en savoir plus rendez-vous <a href="https://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/">sur cet article qui présente le script et les grandes lignes</a>.

Donc j'ai lancé deux fois le script et je possède pour l'exemple 4 machines (2 debian stretch et 2 centos7).

Et voilà. Maintenant comment je peux faire pour avoir 1 serveur ntp et 3 serveurs clients ? L'idée c'est de faire en sorte qu'un seul serveur soit exposé et soit utilisé pour contacter les ntp externes.

<img class="aligncenter size-medium wp-image-778" src="https://xavki.files.wordpress.com/2018/09/ansible-ntp.jpeg?w=300" alt="ansible-ntp" width="300" height="225" />

Ainsi on veut avoir le schéma :

ntp_externes &gt;&gt; ntp_serveur &gt;&gt; ntp_clients
<h2>1. Les principes des clients et du serveur (sans ansible)</h2>
Là encore on va aller à l'essentiel de la configuration. Vous trouverez facilement des articles clairs et courts comme celui-ci qui vous donnera <a href="https://www.thegeekstuff.com/2014/06/linux-ntp-server-client/">ce qu'il faut pour installer un ntp</a>.

D'un côté, sur le serveur ntp est installé ntp. Il doit au niveau de sa conf taper vers les serveurs externes et surtout accepter les requêtes des autres serveurs. Pour cela il faut supprimer simplement dans /etc/ntp.conf la ligne :
<pre>restrict default nomodify notrap nopeer noquery</pre>
Et ajouter la localisation ntp :
<pre>ntp_area: 'fr'</pre>
De l'autre côté pour les serveurs clients, il faut juste modifier les serveurs vers lesquels on fait la synchro dans /etc/ntp.conf. Les serveurs par défaut deviennent par exemple :
<pre>server 172.17.0.2 ibusrt</pre>
Pour vérifier le bon fonctionnement, il suffira de faire un ntpq -p et voir où les machines vont se synchroniser.
<h2>2. NTP avec ansible c'est facile</h2>
Bien sûr que c'est facile car ntp est un utilitaire de base des serveurs web ou autres. Ansible Galaxy vous propose donc de très bon rôles. Et j'aurais tendance à dire comme d'habitude c'est geerlingguy qui va vous le proposer avec geerlingguy.ntp.

Alors pour le mettre en place dans votre répertoire de rôles il suffit de faire :
<pre>ansible-galaxy install -p roles geerlingguy.ntp</pre>
et dedans on a ceci mais on ne va toucher à rien :
<pre>.
├── defaults
│   └── main.yml
├── handlers
│   └── main.yml
├── LICENSE
├── meta
│   └── main.yml
├── README.md
├── tasks
│   ├── clock-rhel-6.yml
│   └── main.yml
├── templates
│   ├── clock.j2
│   └── ntp.conf.j2
├── tests
│   ├── README.md
│   └── test.yml
└── vars
├── Archlinux.yml
├── Debian.yml
├── FreeBSD.yml
├── RedHat.yml
└── Suse.yml</pre>
Nous avons donc un rôle ntp qui ne demande qu'à tourner. Pour cela mettons à jour notre liste de hosts.yml de notre inventory :
<pre>all:
  children:
    ntp-client:
      hosts:
        172.17.0.3:
        172.17.0.4:
        172.17.0.5:
    ntp-server:
      hosts:
        172.17.0.2:
</pre>
Vous voyez que j'ai entré les ip de mes conteneurs docker. Elles sont classées en 2 groupes ntp-server et ntp-client.

Maintenant je vais créer 2 group_vars (deux répertoires avec un fichier yaml chacun) :
<pre>.
├── group_vars
│   ├── ntp-client
│   │   └── ntp-client.yml
│   └── ntp-server
│       └── ntp-server.yml
</pre>
Puis je complète les fichiers de la manière suivante (en prenant en compte ce que nous avons abordé dans le paragraphe 1.).

ntp-client.yml
<pre>ntp_manage_config: True
ntp_servers:
- "172.17.0.2 ibusrt"</pre>
ntp-server.yml
<pre>ntp_manage_config: True
ntp_restrict:
- "127.0.0.1" 
- "::1" 
- "-4 default kod notrap nomodify nopeer noquery" 
- "-6 default kod notrap nomodify nopeer noquery"</pre>
Et là c'est terrible car je vous dis "nous avons fait le plus dur" ! Car maintenant on lance le playbook :
<pre>ansible-playbook -i hosts.yml --user=oki playbook-ntp.yml</pre>
Et la bingo
<pre>PLAY RECAP ************************************************************************************
172.17.0.2 : ok=7 changed=0 unreachable=0 failed=0 
172.17.0.3 : ok=8 changed=0 unreachable=0 failed=0 
172.17.0.4 : ok=8 changed=0 unreachable=0 failed=0 
172.17.0.5 : ok=8 changed=0 unreachable=0 failed=0</pre>
Comme vous le voyez moi je n'ai pas de changement car j'ai fait tourner le playbook deux fois.

Maintenant rendez vous sur le serveur ntp :
<pre>[root@7dcab8fb52ed ~]# ntpq -p
remote refid st t when poll reach delay offset jitter
================================================================
dev.rudloff.pro 209.176.15.122 3 u 53 64 1 35.024 -29.279 8.299
clients0.arcani 131.188.3.223 2 u 53 64 1 41.120 -23.491 9.220
myminers.net 10.21.137.1 2 u 53 64 1 28.079 -27.255 13.304
*master.servme.f 213.251.128.249 2 u 53 64 1 22.207 -30.641 11.5</pre>
et sur le client :
<pre>[root@6c6c89bc23ac ~]# ntpq -p
remote refid st t when poll reach delay offset jitter
================================================
172.17.0.2 178.33.111.48 3 u 1 64 1 0.079 0.018 0.000</pre>
Nos avons donc bien installé un serveur ntp qui se met à jour sur des serveurs externes et des clients ntp qui se mettent à jour sur notre serveur maitre.

Si cet article vous a plus partagez-le et n'hésitez pas à vous abonner pour ne pas manquer les prochains articles.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>777</wp:post_id>
		<wp:post_date>2018-09-28 08:56:04</wp:post_date>
		<wp:post_date_gmt>2018-09-28 07:56:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-comment-installer-un-client-et-un-serveur-ntp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[778]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_date</wp:meta_key>
			<wp:meta_value><![CDATA[2018-10-02]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538121367]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22617647343]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1045582926124142592";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/cXNQ7KcNwss]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6451348634272296960]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[[Ansible] : comment installer et configurer logrotate ? et trouver un rôle adapté &#8211; Xavki]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.101.13</wp:comment_author_IP>
			<wp:comment_date>2018-10-05 09:27:39</wp:comment_date>
			<wp:comment_date_gmt>2018-10-05 08:27:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] après l&rsquo;installation ntp (client et serveur), je vous propose l&rsquo;installation et la configuration de logrotate. Il s&rsquo;agit donc [&#8230;]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>jabber_published</wp:meta_key>
				<wp:meta_value><![CDATA[1538728060]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1538728061.567119;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:11:{s:14:"comment_author";s:97:"[Ansible] : comment installer et configurer logrotate ? et trouver un rôle adapté &#8211; Xavki";s:18:"comment_author_url";s:105:"http://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:164:"[&#8230;] après l&rsquo;installation ntp (client et serveur), je vous propose l&rsquo;installation et la configuration de logrotate. Il s&rsquo;agit donc [&#8230;]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"192.0.101.13";s:10:"user_agent";s:33:"WordPress.com Pingback of Awesome";s:4:"blog";s:18:"https://xavki.blog";s:9:"blog_lang";s:2:"fr";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:83:"http://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Ansible] : comment installer et configurer logrotate ? et trouver un rôle adapté</title>
		<link>http://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/</link>
		<pubDate>Fri, 05 Oct 2018 08:10:12 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=794</guid>
		<description></description>
		<content:encoded><![CDATA[Aujourd'hui, <a href="https://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/">après l'installation ntp (client et serveur)</a>, je vous propose l'installation et la configuration de logrotate. Il s'agit donc d'une action de niveau plutôt débutant à réaliser avec ansible. En effet, logrotate est un service facile à mettre en place (souvent déjà installé et bien pris en compte par d'autres services) et surtout car ansible-galaxy regorge de rôles dans ce domaine.

La plus grosse difficulté réside dans le choix du rôle en essayant de trouver celui qui corrrespond le plus à notre besoin. Dans notre cas, on cherche un rôle qui installe logrotate si celui-ci n'est pas déjà installé et qu'il permettent de réaliser la conf par défaut de logrotate et au cas par cas pour différents services que l'on souhaite ajouter.

<img class="aligncenter size-medium wp-image-797" src="https://xavki.files.wordpress.com/2018/10/ansible_logrotate.jpeg?w=300" alt="ansible_logrotate" width="300" height="225" />

Avant de commencer, je vous rappelle que j'utilise un réseau de conteneurs docker pour mettre en place mes tests de rôles ansible. Pour en savoir <a href="https://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/">plus c'est ici</a> et c'est super simple.
<h2>1. Logrotate</h2>
C'est un service basique dans les différents OS linux de base. Logrotate est souvent déjà installé comme c'est le cas sur Debian et sur Redhat.

Sa configuration par défaut se situe dans /etc/logrotate.conf et se résume souvent à :
<pre>weekly
su root syslog
rotate 4
create
dateext

# packages drop log rotation information into this directory
include /etc/logrotate.d

# no packages own wtmp, or btmp -- we'll rotate them here
/var/log/wtmp {
    missingok
    monthly
    create 0664 root utmp
    rotate 1
}

/var/log/btmp {
    missingok
    monthly
    create 0660 root utmp
    rotate 1
}
</pre>
Que dire ?
<ul>
	<li>weekly : la fréquence de rotation (daily, mais aussi d'autres formats peuvent être utilisés)</li>
	<li>su root syslog : avec quel user et quel groupe est réalisé l'archivage (important pour les permissions par la suite)</li>
	<li>rotate 4 : nombre de fichiers de logs conservés</li>
	<li>create : création d'un nouveau fichier de log après la rotation</li>
</ul>
De très nombreuses options sont possibles. Elles sont consultables sur la page man de logrotate : mail, action réalisée après rotation, compression...

Par ailleurs, il faut savoir que les services les plus répandus sur Linux ajoutent leur propre configuration dans /etc/logrotate.d/ (apache2, nginx, varnish, postgres...). Le travail est donc généralement simplifié,  ce qui permet de ne pas trop s'inquiéter si vous cherchez un rôle ansible.
<h2>2. Le rôle ansible logrotate</h2>
Nsou avons vu à peu près ce que nous souhaitions  trouver comme rôle. Après en avoir feuilleté une petite dizaine, j'ai retenu celui-ci : <a href="https://galaxy.ansible.com/arillso/logrotate">arillso.logrotate</a>

Il réalise ce que j'ai listé ci-dessus (configuration par défaut et ajout possible). Pour toucher à la configuration par défaut il suffit simplement de compléter la variable logrotate_options avec un tableau du type : [ 'weekly', 'su root syslog', 'rotate 4', 'create' ].

Sa struture est la suivante :
<pre>└─ $ ▶ tree
.
├── defaults
│   └── main.yml
├── handlers
│   └── main.yml
├── LICENSE
├── meta
│   └── main.yml
├── README.md
├── tasks
│   └── main.yml
├── templates
│   ├── application.j2
│   └── logrotate.conf.j2
└── vars
    ├── CentOS.yml
    ├── Debian.yml
    └── defaults.yml
</pre>
Il s'appuie aussi sur deux fichiers jinja2 un pour la configuration par défaut et un autre pour gérer des configurations par application.

Ainsi pour spécifier une conf particulière pour une machine notre inventory ressemblerait à ceci :
<pre>all:
  hosts:
    172.17.0.2:
      logrotate_options: [ 'daily', '', 'rotate 4', 'create' ]
    172.17.0.3:
    172.17.0.4:
    172.17.0.5:
</pre>
Ainsi on a part défaut : ['weekly', 'su root syslog', 'rotate 4', 'create']
et sinon autre chose comme pour la 172.17.0.2.

Mes tests se déroulent sur 4 machines comme pour le test du rôle ntp : 2 debian et 2 redhat (centos).

Mon inventory est celui indiqué ci-dessus et mon playbook contient simplement :
<pre>---
- name: Lancement roles
  hosts: all
  remote_user: oki
  become: yes

  roles:
  - arillso.logrotate
</pre>
Lançons tout ceci :
<pre>└─ $ ▶ ansible-playbook -i hosts.yml --user=oki playbook-logrotate.yml 

PLAY [Lancement roles] **************************************************************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************************************************
ok: [172.17.0.2]
ok: [172.17.0.3]
ok: [172.17.0.4]
ok: [172.17.0.5]

TASK [arillso.logrotate : add OS specific variables] ********************************************************************************************************************************************
ok: [172.17.0.2] =&gt; (item=/home/oki/autoform_ansible/roles/arillso.logrotate/vars/Debian.yml)
ok: [172.17.0.3] =&gt; (item=/home/oki/autoform_ansible/roles/arillso.logrotate/vars/Debian.yml)
ok: [172.17.0.4] =&gt; (item=/home/oki/autoform_ansible/roles/arillso.logrotate/vars/CentOS.yml)
ok: [172.17.0.5] =&gt; (item=/home/oki/autoform_ansible/roles/arillso.logrotate/vars/CentOS.yml)

TASK [arillso.logrotate : install logrotate] ****************************************************************************************************************************************************
ok: [172.17.0.5]
ok: [172.17.0.4]
ok: [172.17.0.3]
ok: [172.17.0.2]

TASK [arillso.logrotate : Create logrotate configuration file] **********************************************************************************************************************************
ok: [172.17.0.2]
ok: [172.17.0.4]
ok: [172.17.0.5]
ok: [172.17.0.3]

TASK [arillso.logrotate : Create logrotate application configuration files] *********************************************************************************************************************

PLAY RECAP **************************************************************************************************************************************************************************************
172.17.0.2                 : ok=0    changed=4   unreachable=0    failed=0   
172.17.0.3                 : ok=0    changed=4    unreachable=0    failed=0   
172.17.0.4                 : ok=0    changed=4    unreachable=0    failed=0   
172.17.0.5                 : ok=0    changed=4    unreachable=0    failed=0   
</pre>
Une fos de plus Ansible nous propose un jolie récapitulatif. On voit que le playbook est passé sur toutes les machines. On voit également qu'il a bien utilisé la conf debian et la conf redhat quand cela était nécessaire.

Bref que du bonheur.

Et sur la machine ayant une conf spécifique ?
<pre>root@69a5076d127d:~# cat /etc/logrotate.conf 
# Ansible managed

# see "man logrotate" for details
weekly

rotate 4
create
</pre>
Bingo pas de souci. Et vous quel est votre expérience avec ce genre de rôle sur ansible.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>794</wp:post_id>
		<wp:post_date>2018-10-05 09:10:12</wp:post_date>
		<wp:post_date_gmt>2018-10-05 08:10:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[797]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1048127561761480704";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22860605155]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1538728057]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/ibYMSt3vo8p]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6453893270526259200]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ansible_logrotate</title>
		<link>http://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/ansible_logrotate/</link>
		<pubDate>Mon, 01 Oct 2018 15:08:33 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/10/ansible_logrotate.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>797</wp:post_id>
		<wp:post_date>2018-10-01 16:08:33</wp:post_date>
		<wp:post_date_gmt>2018-10-01 15:08:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ansible_logrotate</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>794</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/10/ansible_logrotate.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/ansible_logrotate.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2048;s:6:"height";i:1536;s:4:"file";s:95:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/ansible_logrotate.jpeg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:753014;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Nginx][Varnish] : comment installer un vhost et mettre en place le système de cache ?</title>
		<link>http://xavki.blog/2018/10/09/nginxvarnish-comment-installer-un-vhost-et-mettre-en-place-le-systeme-de-cache/</link>
		<pubDate>Tue, 09 Oct 2018 08:08:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=803</guid>
		<description></description>
		<content:encoded><![CDATA[Vous voulez apprendre nginx et tuner un peu les performance d'un site web ? cet article est un début pour apprendre à mettre en place votre vhost et installer un cache avec varnish. L'intérêt du cache est d'éviter d'utiliser le serveur web pour charger des éléments statiques de votre site (images, publicités...). Vous gagnez ainsi en vitesse de chargement et réduissez l'utilisation de votre serveur web.
<h2>Commençons par Nginx</h2>
L'installation est simple :
<pre>sudo apt-get install nginx</pre>
Une fois installé il nous faut configurer notre vhost. L'objectif du vhost est de faire correspondre une adresse/ip/port à un répertoire où sont stockés les fichiers web (html, php...).

Vous disposez d'un modèle de vhost dans /etc/nginx/sites-available/default donc copions-le pour le modifier :
<pre>cp /etc/nginx/sites-available/default /etc/nginx/sites-available/xavki.fr</pre>
Puis éditons-le en indiquant la localisation des fichiers du site (la racine étant /var/www/ :
<pre>server {
        listen 80;
        listen [::]:80;
        root /var/www/xavki;
        index index.html index.htm;
        server_name xavki.fr www.xavki.fr;
        location / {
                try_files $uri $uri/ =404;
        }
}</pre>
Donc le serveur web nginx écoute sur le port 80. Le répertoire stockant les fichiers est /var/www/xavki. L'index (racine du site) est un fichier nommé index.html ou index.htm. L'url du site xavki.fr ou www.xavki.fr. Et si la page n'existe pas on renvoi une erreur 404.

Nous allons donc créer le répertoire et y charger un squelette de site :
<pre>mkdir/var/www/xavki</pre>
Vous pouvez télécharger un modèle de site <a href="http://pixelhint.com/magnetic-free-photography-website-template/">sur cette page</a>. Décompressez le et placez le dans ce nouveau répertoire. Avec ce contenu nous avons une structure assez classique de site web : css, html, fonts, images...

Maintenant il nous reste à activer le vhost. Comme pour les serveurs apache Nginx requiert la création d'un lien symbolique entre /etc/nginx/sites-available et /etc/nginx/sites-enabled.

Donc :
<pre>cd /etc/nginx/sites-enabled
ln -s /etc/nginx/sites-availble/xavki.fr</pre>
Et comme pour apache il vaut mieux vérifier si la conf est bonne :
<pre>nginx -t
#désactivez le défaut
rm -rf /etc/nginx/sites-enable</pre>
Et notre vhost est bien là. Pour le tester si vous développez sur votre localhost tapez directement l'ip 127.0.0.1 sinon tapez l'ip de la machine distante dans votre navigateur.

Et si vos voulez simuler un dns éditez le /etc/hosts de la machine qui émule la vm. Par exemple :
<pre>172.20.10.2 xavki.fr www.xavki.fr</pre>
Avec cela vous pouvez même taper l'adresse dans votre navigateur.

<img class="alignnone size-full wp-image-804" src="https://xavki.files.wordpress.com/2018/10/xavki.png" alt="xavki.png" width="1357" height="633" />

Nous venons de faire la moité du chemin, il reste plus que le cache et pour cela nous allons utiliser varnish.
<h2>Et le cache de varnish</h2>
Là encore l'installation est simple :
<pre>sudo apt-get install varnish
#et lançons le service
service varnish start</pre>
Réalisez alors un netstat -ntaup. Vous vous rendez compte que varnish écoute sur le port 6081 et nginx sur le port 80. Le problème c'est qu'en l'état votre système de cache n'est pas opérationnel car il ne répond pas sur le port 80.

Il est donc nécessaire de :
<ul>
	<li>modifier le port d'écoute du vhost nginx (par exemple le 8080</li>
	<li>modifier le port d'écoute de varnish pour passer sur le 80</li>
</ul>
Donc modifions notre vhost /etc/nginx/sites-available/xavki.fr et modifion le port 80 en 8080 :
<pre>server {
         listen 80; 
        listen [::]:80;
...</pre>
Relançons le service :
<pre>nginx -tservice nginx reload</pre>
Maintenant modifions la configuratonde varnish. Editons le fichier /etc/varnish/default.vcl avec :
<pre>backend default {
     .host = "127.0.0.1";
     .port = "8080";
}</pre>
Puis changeons la conf de varnish pour le faire écouter sur le port 80. En changeant le fichier /etc/default/varnish :
<pre>DAEMON_OPTS="-a :80 \
             -T localhost:6082 \
             -f /etc/varnish/default.vcl \
             -S /etc/varnish/secret \
             -s malloc,256m"
</pre>
Remarquez au passage que vous pouvez aussi retoucher la mémoire alloué au cache.

Modifiez également /lib/systemd/system/varnish.service
<pre>ExecStart=/usr/sbin/varnishd -j unix,user=vcache -F -a :80 -T localhost:6082 -f /etc/varnish/default.vcl -S /etc/varnish/secret -s malloc,256m</pre>
Voilà maintenant redémarrons le service varnish :
<pre>service varnish restart</pre>
et testons l'utilisation du cache.

Et pour terminer testons l'utilisation du cache :
<pre>└─ $ ▶ curl -I xavki.fr
HTTP/1.1 200 OK
Server: nginx/1.14.0 (Ubuntu)
Date: Mon, 01 Oct 2018 20:05:18 GMT
Content-Type: text/html
Last-Modified: Mon, 01 Oct 2018 12:38:18 GMT
ETag: W/"5bb2153a-105e"
Vary: Accept-Encoding
X-Varnish: 2
Age: 0
Via: 1.1 varnish (Varnish/5.2)
Accept-Ranges: bytes
Connection: keep-alive
</pre>
Nous constatons bien l'utilisation de varnish pour répondre à la requête vers notre site.
Attention, il ne s'agit que d'une base. Il faut ensuite ajouter des règles de gestion à varnish (cache pour les images, pas de cache pour les cookies...) <a href="https://www.skyminds.net/serveur-dedie-installer-configurer-varnish-4/">et c'est là que commence le vrai taff</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>803</wp:post_id>
		<wp:post_date>2018-10-09 09:08:41</wp:post_date>
		<wp:post_date_gmt>2018-10-09 08:08:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginxvarnish-comment-installer-un-vhost-et-mettre-en-place-le-systeme-de-cache</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="serveurs-web"><![CDATA[Serveurs web]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[804]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_google_plus_url</wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+XavierDurand/posts/TVY8MVuA5ov]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_linkedin_url</wp:meta_key>
			<wp:meta_value><![CDATA[www.linkedin.com/updates?topic=6455339394525065216]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[22994251321]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1539072835]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_external</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:18876644;s:55:"https://twitter.com/Priximmo/status/1049573678269300736";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_19029028</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_18876644</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[Priximmo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20402356</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20524073</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_done_20502417</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_20642917</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>xavki</title>
		<link>http://xavki.blog/2018/10/09/nginxvarnish-comment-installer-un-vhost-et-mettre-en-place-le-systeme-de-cache/xavki/</link>
		<pubDate>Mon, 01 Oct 2018 19:42:58 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/10/xavki.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>804</wp:post_id>
		<wp:post_date>2018-10-01 20:42:58</wp:post_date>
		<wp:post_date_gmt>2018-10-01 19:42:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xavki</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>803</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/10/xavki.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/xavki.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1357;s:6:"height";i:633;s:4:"file";s:82:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/xavki.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:1113786;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ansible</title>
		<link>http://xavki.blog/ansible/</link>
		<pubDate>Sun, 07 Oct 2018 16:56:53 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=812</guid>
		<description></description>
		<content:encoded><![CDATA[Quelques astuces et rôles à installer avec l'orchestrateur ansible pour paufiner votre infra as code.
<ul>
	<li><a href="https://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/">Comment se créer une plateforme de test et de dev pour ansible ?</a></li>
	<li><a href="https://xavki.blog/2018/09/28/ansible-comment-installer-un-client-et-un-serveur-ntp/">Comment installer un role ntp avec ansible galaxy ?</a></li>
	<li><a href="https://xavki.blog/2018/10/05/ansible-comment-installer-et-configurer-logrotate-et-trouver-un-role-adapte/">Comment installer un role logrotate ?</a></li>
	<li><a href="https://xavki.blog/2018/09/26/ansible-commencons-simplement-copie-de-fichiers-modification-ecriture-avec-copy-et-lineinfile/">Modules de base : lineinfile et copy</a></li>
	<li><a href="https://xavki.blog/2018/10/03/ansible-lister-les-variables-de-roles-non-documentees-dans-le-readme-md/">Script python pour lister les variables non documentées dans le README</a></li>
</ul>
Mes vidéos ansible :

[youtube https://www.youtube.com/watch?v=videoseries?list=PLn6POgpklwWo2dZBf371MbKLsYiLUHZzn&amp;w=700&amp;h=500]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>812</wp:post_id>
		<wp:post_date>2018-10-07 17:56:53</wp:post_date>
		<wp:post_date_gmt>2018-10-07 16:56:53</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ansible</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/10/07/813/</link>
		<pubDate>Sun, 07 Oct 2018 16:56:54 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/2018/10/07/813/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>813</wp:post_id>
		<wp:post_date>2018-10-07 17:56:54</wp:post_date>
		<wp:post_date_gmt>2018-10-07 16:56:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>813</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[812]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>google</title>
		<link>http://xavki.blog/xavki-blog-googleae3ac147cd6aef1a-html__trashed/</link>
		<pubDate>Mon, 08 Oct 2018 13:38:20 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?page_id=824</guid>
		<description></description>
		<content:encoded><![CDATA[google-site-verification: googleae3ac147cd6aef1a.html]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>824</wp:post_id>
		<wp:post_date>2018-10-08 14:38:20</wp:post_date>
		<wp:post_date_gmt>2018-10-08 13:38:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xavki-blog-googleae3ac147cd6aef1a-html__trashed</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1539006064]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_desired_post_slug</wp:meta_key>
			<wp:meta_value><![CDATA[xavki-blog-googleae3ac147cd6aef1a-html]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xavki.blog/2018/10/08/825/</link>
		<pubDate>Mon, 08 Oct 2018 13:38:20 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/2018/10/08/825/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date>2018-10-08 14:38:20</wp:post_date>
		<wp:post_date_gmt>2018-10-08 13:38:20</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>825</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>11</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[824]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>fiche-arbre</title>
		<link>http://xavki.blog/?attachment_id=830</link>
		<pubDate>Mon, 08 Oct 2018 20:39:39 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/10/fiche-arbre.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>830</wp:post_id>
		<wp:post_date>2018-10-08 21:39:39</wp:post_date>
		<wp:post_date_gmt>2018-10-08 20:39:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fiche-arbre</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>829</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/10/fiche-arbre.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/fiche-arbre.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:640;s:6:"height";i:400;s:4:"file";s:88:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/fiche-arbre.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:25098;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>fiche-cmdb</title>
		<link>http://xavki.blog/?attachment_id=831</link>
		<pubDate>Mon, 08 Oct 2018 20:40:06 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.files.wordpress.com/2018/10/fiche-cmdb.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date>2018-10-08 21:40:06</wp:post_date>
		<wp:post_date_gmt>2018-10-08 20:40:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fiche-cmdb</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>829</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>https://xavki.files.wordpress.com/2018/10/fiche-cmdb.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/fiche-cmdb.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";i:640;s:6:"height";i:400;s:4:"file";s:87:"/home/wpcom/public_html/wp-content/blogs.dir/b63/138758665/files/2018/10/fiche-cmdb.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:8:"filesize";i:18824;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : recenser les ports en écoute sans netstat et LSOF</title>
		<link>http://xavki.blog/?p=268</link>
		<pubDate>Fri, 09 Nov 2018 09:03:53 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[Hier nous avions vu comment lister <a href="https://xavki.wordpress.com/2018/08/14/linux-lister-les-ports-ecoute-sur-une-machine/">les ports en écoute sur une machine en utilisant netstat ou lsof</a>. Aujourd'hui nous allons faire la même chose sans binaire ah ah ah.

Bien sûr c'est nettement moins facile il va falloir fouiller dans les données du système. En l'occurence nous allons fouillé dans /proc/net/tcp car c'est bien le protocole tcp qui nous intéresse.

La difficulté réside simplement dans le fait que les données sont en hexadécimales et il faut donc les convertir en décimale. Voici donc la ligne de commande que je vous propose :
<pre>array=($(tail -n +2 /proc/net/tcp | cut -d ":" -f "3" | cut -d " " -f "1")) &amp;&amp; for port in ${array[@]}; do echo $((0x$port)); done
</pre>
Donc :
<ul>
	<li>on fait un tail pour virer l'entête</li>
	<li>un premier cut avec pour séparaateur ":" et on garde la 3ème colonne</li>
	<li>un deuxième cut avec pour séparateur un espace " " et on garde la première colonne</li>
	<li>pour tous les éléments recueillis on convertit l'hexadécimal en décimal.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date>2018-11-09 10:03:53</wp:post_date>
		<wp:post_date_gmt>2018-11-09 09:03:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-recenser-les-ports-en-ecoute-sans-netstat-et-lsof</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[270]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[MySql] : sauvegarder les bases une à une individuellement</title>
		<link>http://xavki.blog/?p=287</link>
		<pubDate>Thu, 08 Nov 2018 12:51:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=287</guid>
		<description></description>
		<content:encoded><![CDATA[Sauvegarder ses bases de données est essentiel en cas de crash mais aussi pour être en mesure de fournir à tout moment un dump. N'oubliez pas que vous pouvez <a href="https://xavki.blog/databases/">retrouver les autres articles databases sur cette page</a>.

Par contre il existe de nombreuses manière de faire. Mysql fait cela très bien et très facilement. Mais parfois on a des besoins particuliers.

Par exemple, comme les restaurations portent souvent sur une seule base, on ne souhaite pas disposer d'un dump complet. D'ailleurs cela peut aussi éviter de se trimbaler des fichiers trop gros ou encore de gérer la confidentialité de données entre clients.

Comment sauvegarder les bases mysql une à une c'est à dire en ayant un fichier par base ?

C'est assez simple avec une petite boucle :
<pre>for db in $(mysql -e 'show databases' -s --skip-column-names); do mysqldump $db | gzip &gt; "/backups/mysqldump-$(hostname)-$db-$(date +%Y-%m-%d-%H.%M.%S).gz"; done
</pre>
Donc :
<ul>
	<li>on dresse la liste des bases avec un show databases</li>
	<li>on parcourt tout cela avec un for</li>
	<li>pour chaque base on lance un mysqldump</li>
	<li>puis on gzippe chaque fichier généré</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>287</wp:post_id>
		<wp:post_date>2018-11-08 13:51:07</wp:post_date>
		<wp:post_date_gmt>2018-11-08 12:51:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-sauvegarder-les-bases-une-a-une</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[288]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : comment requêter une base mysql avec mysql.connector ?</title>
		<link>http://xavki.blog/?p=419</link>
		<pubDate>Fri, 19 Oct 2018 19:27:05 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=419</guid>
		<description></description>
		<content:encoded><![CDATA[Mysql Connector est le module le plus répandu pour utiliser une base de données mysql à partir de python. Il est relativement facile à utiliser. Nous aurons l'occasion de voir dans d'autres articles des manipulations plus complexes mais il faut bien commencer par... le commencement.

Comment réaliser un simple SELECT et afficher son résultat en Python ? voici comment faire si vous êtes débutant.
<pre>import mysql.connector

madatabase = mysql.connector.connect(
  host="localhost",
  user="nom_utilisateur",
  passwd="mon_password",
  database="mabase"
)

session = mydb.cursor()
sql = "SELECT * FROM matable"
session.execute(sql)

resultat = session.fetchall()

for x in resultat:
  print(x)

session.close()
</pre>
Donc quelles commandes avons nous passé ?
<ul>
	<li>import du module</li>
	<li>création d'une instance madatabase avec les paramètres de connexion. C'est tout à fait classique on retrouve cela avec de nombreux modules de moteurs de bases de données</li>
	<li>ouverture d'une connexionavec l'instanciation de la classe cursor</li>
	<li>la variable sql contient la requête à passer</li>
	<li>on lance la requête avec notre variable</li>
	<li>on récupère tous les résultats (sous forme de liste)</li>
	<li>il ne reste plus qu'à parcourir la liste</li>
	<li>et on oublie pas de dire au revoir et merci au serveur en fermant la session</li>
</ul>
Vous pouvez d'ores et déjà retrouver plus d'infos en ligne sur le site mysql et <a href="https://dev.mysql.com/doc/connector-python/en/">sa rubrique dédiée à ce module Python</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2018-10-19 20:27:05</wp:post_date>
		<wp:post_date_gmt>2018-10-19 19:27:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-requeter-une-base-mysql-avec-mysql-connector</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[509]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : comment rechercher un texte dans plusieurs fichier pdf ?</title>
		<link>http://xavki.blog/?p=459</link>
		<pubDate>Fri, 12 Oct 2018 11:27:27 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=459</guid>
		<description></description>
		<content:encoded><![CDATA[Pdftotext est un binaire bien tuile sur linux. En effet, il permet assez facilement de convertir du texte au format pdf en format texte (comme son nom l'iniduqe ;)). Son petit avantage c'est aussi qu'il est installé de base sur pas mal de version (ubuntu...) et ça on a tendance à l'oublier.

Donc celui-ci possède <a href="https://www.systutorials.com/docs/linux/man/1-pdftotext/">aussi sa page de man officielle</a> et c'est bien pratique pour faire connaissanceavec les options de l'outil.

En guise d'exemple, je vous propose de faire une manip toute bête : chercher un pattern dans vos fichier pdf (je partirai de la racine pour le fun... non faut pas faire ça car ca va durer toute votre vie un truc pareil) :
<pre> find / -name '*.pdf' -exec sh -c 'pdftotext "{}" - \
| grep --with-filename --label="{}" --color "monpattern"' \; 
</pre>
Donc si on rentre dans le détail :
<ul>
	<li>on fait un find ou :
<ul>
	<li>on récupère que les pdf</li>
	<li>on exécute un shell pdftotext sur les fichiers trouvés dans lequel on grep  (en récuprant le nom de fichier et la couleur)</li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2018-10-12 12:27:27</wp:post_date>
		<wp:post_date_gmt>2018-10-12 11:27:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-comment-rechercher-un-texte-dans-plusieurs-fichier-pdf</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sites-outils"><![CDATA[Sites &amp; Outils]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[126]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Awk] : comment lister les ports des vhosts d&#039;un apache ? (gsub, match, substr et regex)</title>
		<link>http://xavki.blog/?p=476</link>
		<pubDate>Mon, 15 Oct 2018 14:29:34 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=476</guid>
		<description></description>
		<content:encoded><![CDATA[Awk c'est un peu mon petit préféré pour fa ire du oneline en manipulant un grand nombre de lignes. Et une fois de plus il est encore bien sympa pour nous lister les ports utilisés pour chaque vhost d'un apache. Bon on se fait un peu plaisir vous allez voir... et c'est pas pour frimer.

En gros, on veut un truc qui nous dise :

nom_du_vhost  =&gt;&gt; numéro_port

y compris si nous avons plusieurs ports (80 et 443).

Et en une ligne, voici le code que j'ai pu écrire :
<pre>awk '/.*:[0-9]{1,3}&gt;/ &amp;&amp; /[^#]/
{match($0,/:[0-9]{1,3}&gt;/);
gsub("/.*/"," ",FILENAME);
print FILENAME"=&gt;&gt;", 
substr($0, RSTART+1, RLENGTH-2)}'
/etc/apache2/*.*</pre>
Explications de cette commande d'une ligne un peu chargée :
<ul>
	<li>1ère ligne : restriction des lignes traitées en limitant aux lignes contenant ":" puis 1 à 3 chiffres allant de 0 à 9 et qui ne contient pas de "#" (pour éviter les lignes de commentaires)</li>
	<li>2ème ligne : capture du pattern du port encadre de ":" et "&gt;"</li>
	<li>3ème ligne : nettoyage du filename en retournant uniquement le nom de fichier</li>
	<li>5ème ligne : récupération du pattern de la regex</li>
</ul>
C'est un peu compliqué mais cela permet surtout de faire un peu de la manipulation pour s'entretenir en awk.

Et vous vous feriez comment pour réaliser ce genre d'opération ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2018-10-15 15:29:34</wp:post_date>
		<wp:post_date_gmt>2018-10-15 14:29:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>awk-comment-lister-les-ports-des-vhosts-dun-apache-gsub-match-substr-et-regex</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="awk"><![CDATA[AWK]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[477]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : top 10 des requêtes consommatrice de temps présentes en cache</title>
		<link>http://xavki.blog/?p=486</link>
		<pubDate>Wed, 17 Oct 2018 08:58:36 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=486</guid>
		<description></description>
		<content:encoded><![CDATA[La gestion du cache au niveau d'une base de données est primordial. Une bonne gestion permet de mettre en cache les requêtes les plus courantes de manière à servir le plus rapidement possible l'utilisateur (ou l'application).

Il est donc important de temps en temps de jeter un oeil pour savoir quelles requêtes sont présentes dans ce cache et surtout celles qui y consomment du temps. Après avoir listé ces requêtes, il peut être intéressant de faire un explain plan et de les analyser pour voir comment elles pourraient être optimisées (par exemple par des index ou en segmentant une table...).

Voici donc une requête sql qui va vous permettre de lister ces top requêtes à retravailler ou à analyser :
<pre>SELECT sql_id,child_number,sql_text, elapsed_time 
  FROM (SELECT sql_id, child_number, sql_text, elapsed_time, cpu_time,
               disk_reads,
               RANK () OVER (ORDER BY elapsed_time DESC) AS elapsed_rank
          FROM v$sql)
 WHERE elapsed_rank &lt;= 10;
</pre>
Une vue dynamique oracle y est intérogée :
<ul>
	<li>v$sql : qui contient les requêteset les informations relatives à celles-ci.</li>
</ul>
V$SQL contient énormément de champs, je vous invite à vous rendre <a href="https://docs.oracle.com/cd/B19306_01/server.102/b14237/dynviews_2113.htm#REFRN30246">sur la page d'oracle prévue à cet effet</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2018-10-17 09:58:36</wp:post_date>
		<wp:post_date_gmt>2018-10-17 08:58:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-top-10-des-requetes-consommatrice-de-temps-presentes-en-cache</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : comment connaître la taille d&#039;un index avant de le créer ? explain plan est ton ami</title>
		<link>http://xavki.blog/?p=525</link>
		<pubDate>Mon, 22 Oct 2018 16:23:20 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=525</guid>
		<description></description>
		<content:encoded><![CDATA[Lorsque l'on réalise un explain plan, on peut en tirer pour conclusion qu'il est nécessaire de créer un index. Attention, je ne dis pas qu'il faut abuser de ces créations d'index car trop d'index ou des index mal placés ou mal constitués peuvent causer au contraire de al consommation de ressources pour rien.

Ce qui peut être intéressant avant de créer cette index c'est d'évaluer sa taille pour voir le volume qu'il prendra au regarde de votre base. Mais comment faire ?

La encore explain plan d'Oracle est notre ami( c'est pas si souvent que Oracle est ton ami c'est pas faux). Et en plus il est gratuit... youpi !

Pour cela nous allons pratiquer un explain plan sur le create index... eh oui c'est possible.

Ainsi :
<pre>#création de l'explain
explain plan for create index monindex on toto_table ( champ_1 );

#consultation du résultat
select * from table(dbms_xplan.display);</pre>
Et voilà le tour est joué.

Pas très compliqué donc. Pour en savoir un peu plus sur les explains planset surtout comment les interpréter, je ne peux que vous recommander de consulter cette vidéo de Maria Colgan, expert de chez Oracle.

https://www.youtube.com/watch?v=WhuufIeGefE]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>525</wp:post_id>
		<wp:post_date>2018-10-22 17:23:20</wp:post_date>
		<wp:post_date_gmt>2018-10-22 16:23:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-comment-connaitre-taille-index-creer</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[515]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : comment simplifier vos switch case avec la fonction lambda ?</title>
		<link>http://xavki.blog/?p=533</link>
		<pubDate>Fri, 26 Oct 2018 12:49:41 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=533</guid>
		<description></description>
		<content:encoded><![CDATA[Lambda, un mot qui peut faire peur pour les débutants en python. Pourtant les fonctions anonymes lambda permettent de simplifier le code et de le rendre plus compact. Certe leur lecture nécessite un peu de pratique mais elles réduisent la longueur de vos scripts.

En voici encore un exemple avec le classique switch/case. Python n'est pas équipé d'outils spécifique comme bash, php ou autres... Du coup il faut passer par le classique "If ... elseif ... else". C'est dommage et je dirais que c'est presque moche non ?

C'est là que labda le vengeur masqué intervient et va nous réduire et embellir tout cela.

Voyons le cas classique dans un premier temps
<pre>def sans_lambda(op, a, b):
    if op == 'addition':
        return a + b
    elif op == 'soustraction':
        return a - b
    elif op == 'multiplication':
        return a * b
    elif op == 'division':
        return a / b
    else:
        return None
</pre>
Et maintenant avec lambda :
<pre>def avec_lambda(op, c, d):
    return {
        'addition': lambda: c + d,
        'soustraction': lambda: c - d,
        'multiplication': lambda: c * d,
        'division': lambda: c / d,
    }.get(op, lambda: None)()
</pre>
Vous le voyez avec lambda c'est mieux. Une lambda pour chaque cas. On intègre directement cela dans le return.]]></content:encoded>
		<excerpt:encoded><![CDATA[#python #linux #100DaysOfCode #developper #lambda

A faire découvrir pour simplifier son code python.

Commetn simplifier  un switch case avec des lambda ?]]></excerpt:encoded>
		<wp:post_id>533</wp:post_id>
		<wp:post_date>2018-10-26 13:49:41</wp:post_date>
		<wp:post_date_gmt>2018-10-26 12:49:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-simplifier-switch-case-lambda</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[431]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Sécurité] : Comment encrypter vos fichiers avec Vim ?</title>
		<link>http://xavki.blog/?p=540</link>
		<pubDate>Wed, 24 Oct 2018 12:20:15 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=540</guid>
		<description></description>
		<content:encoded><![CDATA[Cet article aurait peut être eu simplement sa place dans le top commande de la semaine mais c'est un focus qui parle un peu sécurité et je pense que l'on y fait pas assez attention. J'imagine que sur votre micro vous disposez de fichiers sensibles avec des données perso voir pire avec des mots de passe et des secrets. C'est pas bien lol.

Comment remédier à cela ? en encryptant vos fichiers.

Tout de suite le mot est laché et certains ont les poils qui se dressent. Mais n'ayons pas peur des mots. Encrypter peut se limiter à n'avoir qu'un mot de passe pour consulter vos fichiers. Et c'est ce que Vim permet de faire très simplement avec l'option ":X". Déjà ça rassure un peu de se dire que Vim peut le faire lol.

Comment encrypter avec Vim ?
<ul>
	<li>éditer votre fichier</li>
	<li>lancer ":X" avant de sauvegarder</li>
	<li>rentrer votre mot de passe</li>
</ul>
Et voilà seul Vim peut ouvrir votre fichier et il vous demandera systématiquement votre mot de passe. C'est un premier pas.

Vim propose un simple <a href="https://fr.wikipedia.org/wiki/Cryptographie_sym%C3%A9trique">cryptage symétrique avec mot de passe donc</a>. Mais attention à la méthode que celui-ci utilise. Pour consulter la méthode par défaut faites :
<pre>:setlocal cm?</pre>
Et pour définir une méthode un peu plus fiable vous pouvez définir la méthode blowfish (ou blowfish2 suivant votre version de Vim). Pour cela lancez :
<pre>:setlocal cm=blowfish</pre>
Pour encrypter d'autres fichiers (hors de portée pour Vim comme images...), vous pouvez aussi utiliser :
<ul>
	<li><a href="https://www.nextinpact.com/news/98374-gnupg-creation-votre-premiere-paire-clefs-et-chiffrement-dun-fichier.htm">GPG</a></li>
	<li><a href="https://la-vache-libre.org/mcrypt-un-outil-en-ligne-de-commande-facile-a-utiliser-pour-chiffrer-vos-fichiers-sous-gnulinux/">mCrypt</a></li>
	<li>Archive Manager</li>
</ul>
Et surtout n'oublions pas qu'au minimum pour éviter les problèmes en cas de vol, vous pouvez encrypter facilement votre partition de travail sur Ubuntu si c'est votre distribution.

Par ailleurs, s'il s'agit de stocker des mots de passe tournez vous plutôt vers des outils spécifiques comme <a href="https://keepass.info/">keepass</a> par exemple.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>540</wp:post_id>
		<wp:post_date>2018-10-24 13:20:15</wp:post_date>
		<wp:post_date_gmt>2018-10-24 12:20:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>securite-comment-encrypter-vos-fichiers-avec-vim</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[542]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Git] : visualiser votre branche avec l&#039;outil tig</title>
		<link>http://xavki.blog/?p=550</link>
		<pubDate>Mon, 29 Oct 2018 20:46:54 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=550</guid>
		<description></description>
		<content:encoded><![CDATA[Dernièrement en matière de git je vous avez fourni un modèle de commande git log plutôt pratique. Il s'agissait d'ajouter un certains nombre d'information et d'avoir une belle mise en forme aet avec de la couleur s'il vous plait lol. Effectivement, git log c'est super mais la commande toute simple est souvent insuffisante et moyennement lisible (ce n'est que mon point de vue).

<img class="alignnone size-full wp-image-551" src="https://xavki.files.wordpress.com/2018/08/tig-2.png" alt="tig-2" width="570" height="62" />

Sur le <a href="https://github.com/jonas/tig">github de Jonas</a>, vous pouvez découvrir un outil intitulé tig. Cet outil est une belle amélioration de git log avec un affichage éditeur en couleur. Vous visualisez donc létat de votre branche et les différents commits. Mais pas seulement, vous pouvez sélectionner votre commit et voir son contenu et le git diff correspondant. Et là c'est tout simplement génial.

<img class="alignnone size-full wp-image-552" src="https://xavki.files.wordpress.com/2018/08/tig-1.png" alt="tig-1" width="393" height="403" />

Donc installez-le et testez-le :
<pre>sudo apt-get install tig</pre>
&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>550</wp:post_id>
		<wp:post_date>2018-10-29 21:46:54</wp:post_date>
		<wp:post_date_gmt>2018-10-29 20:46:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-visualiser-votre-branche-avec-loutil-tig</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[552]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[SQL] : créez des constantes et des noms de résultats</title>
		<link>http://xavki.blog/?p=562</link>
		<pubDate>Wed, 31 Oct 2018 14:17:02 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=562</guid>
		<description></description>
		<content:encoded><![CDATA[DBA et développeur, cet article est pour vous... y'en faut pour tous les goûts comme on dit. Voici deux outils peu utilisés dans les bases de données que j'ai pu voir récemment. Et pourtant, ils permettent de simplifier votre script sql et de le rendre plus lisible et plus structuré (génial lol).
<h2>Les constantes en SQL</h2>
Ce n'est pas révolutionnaire mais si vous ne le savez pa déjà, vous pouvez définir un groupe de constante en sql avec la clause "WITH ... AS". Cela vous permettra d'utiliser ces données fixes comme des tables pratiquement.

Par exemple si on définit les constantes de temps :
<pre>WITH timeconstants AS (
SELECT 60 as seconds,
       60 as minutes,
       24 as hours,
       365 as days,
       7 as week,
       ['Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi','Dimanche'] as daysweek,
),</pre>
C'est pas mal mais comment utiliser ces constantes ? comme une requête.
<pre>SELECT seconds, minutes, hours, days FROM timeconstants;</pre>
Enfantin comme dirait l'autre.
<h2>Les noms de résultats</h2>
Je parlerai plutôt d'alias mais souvent en sql on parle d'alias pour les alias de table par exemple et on l'utilise plutôt dans la clause FROM. En totu cas le principe est presque el même sauf qu'il s'agit à la manière d'un vue d'attribuer un alias à une requête entière.

On le fait ainsi :
<pre>myextract AS (
   SELECT
   IF(colonne1 &lt; 10, "little", "big") AS qualified_sale,
   colonne1,   nb_hours,   colonne2 / 10  FROM mytable)</pre>
Et si on combine les deux on retrouve des trucs du genre :
<pre>SELECT nb_hours * minutes * secondes AS timer
FROM mytable, timeconstants;</pre>
Alors je fais un peu n'importe quoi mais c'est un exemple.Ici on utilise les constantes minutes et secondes pour calculer les heures passées en secondes.

L'intérêt vous le voyez c'est que désormais tout possède un nom et que pour appeler les éléments ils doivent être définis à travers le "FROM". Derrière il est beaucoup plus simple de faire de la modélisation et surtout si vos constantes évoluent vous n'avez pas besoin de revoir toutes vos requêtes.

&nbsp;

Pour ces éléments SQL que nous venons de voir, on parle de CTE dans le jargon DBA. CTE pour <a href="https://sqlpro.developpez.com/cours/sqlserver/cte-recursives/">Common Table Expression</a>. Ces petites clauses permettent de jouer sur les "alias" pour créer des pseudos tables qui ne sont pas non plus des vues et qui visent à simplifier le travail de maintenance.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>562</wp:post_id>
		<wp:post_date>2018-10-31 15:17:02</wp:post_date>
		<wp:post_date_gmt>2018-10-31 14:17:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-creez-des-constantes-et-des-noms-de-resultats</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<category domain="category" nicename="postgresql"><![CDATA[Postgresql]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[564]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : quelques minutes avec Tkinter (GUI)</title>
		<link>http://xavki.blog/?p=567</link>
		<pubDate>Fri, 02 Nov 2018 09:53:16 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[Tkinter est un module graphique pour python, un GUI (Graphical User Interface). Bien sûr, cet article intéressera les débutants car il s'agit de découvrir le module le plus simplement possible mais avec un exemple "concret". Je dis concret en double quotes car en fait ce n'est pas si utile que cela mais il faut bien avoir un but pour développer et écrire quelques lignes de codes.

Pour apprendre, je vous propose de réaliser un petit soft qui va avoir deux boutons (un pour quitter, l'autre pour lancer une action). L'action consistera à réaliser la liste des répertoires de ma home "~". Et on affiche tout cela dans une fenêtre spécifique. Comme ceci :

<img class=" size-full wp-image-569 aligncenter" src="https://xavki.files.wordpress.com/2018/08/file_manager.png" alt="file_manager" width="520" height="409" />

Nous utiliserons deux modules :
<ul>
	<li>tkinter pour l'interface graphique</li>
	<li>os : pour lister les répertoires au niveau de notre système</li>
</ul>
<pre>#!/usr/bin/python
#coding: UTF-8
import os
from Tkinter import *

def affichageRepertoires():
    path = os.path.expanduser("~/")
    for f in os.listdir(path):
        cadre2.insert(END, f + "\n")

if __name__ == '__main__':
    principale = Tk()
    cadre1 = LabelFrame(principale, text="FILE MANAGER", font="Arial 14")
    cadre1.grid(row=0, columnspan=2, sticky='E')

    Button(cadre1, text="Afficher répertoire", font="Arial 8", command=affichageRepertoires).grid(row=1, column=1)
    Button(cadre1, text="Quitter", font="Arial 8", command=principale.quit).grid(row=1, column=2)

    cadre2 = Text(master=principale)
    cadre2.grid(row=2, column=1, sticky=NW)
    
    cadre3 = Scrollbar(principale, orient=VERTICAL, command=cadre2.yview)
    cadre3.grid(row=2, column=2, rowspan=15, columnspan=1, sticky=NS)
    cadre2.config(yscrollcommand=cadre3.set, font=('Arial 8'))

    root.mainloop()

</pre>
Les différentes lignes de codes permettent :
<ol>
	<li>codage en UTF8 (pour ne pas avoir de problème avec les accents)</li>
	<li>import des deux modules</li>
	<li>création d'une fonction  affichageRepertoires() :
<ol>
	<li>utilisation de os.path : pour récupérer les chemins</li>
	<li>parcourir la liste obtenue</li>
	<li>afficher les éléments dans le cadre 2 avec un renvoi à la ligne à chaque fois</li>
</ol>
</li>
	<li>le bloc principal :
<ol>
	<li>création de la fenêtre principale</li>
	<li>définition du premier cadre de type Label (avec titre intégré)</li>
	<li>placement du cadre 1 aligné à droite dans la fenêtre et sur la première ligne d'une grille "imaginaire"</li>
	<li>ajout des deux boutons dans le cadre 1 avec le texte qui correspond et surtout la commande qui va avec. Pour le premier la commande lance notre fonction affichageRepertoires() pour le second elle quitte la fenêtre "principale". Attention l'alignement se fait toujours sur notre grille mais en ligne n°1 et colonne 1 puis 2 en fonction du bouton.</li>
	<li>création du cadre 2 dans la fenêtre "principale". Ce cadre sera alimenté par la fonction affichageRepertoires().</li>
	<li>la grille nous permet une fois de plus de placer notre cadre en ligne n°2/colonne n°1 et aligné en haut à gauche (NW : nord ouest)</li>
	<li>le cadre 3 consiste à ajouter la barre de défilement dans la fenêtre "principale" en se basant sur la fenêtre cadre 2 (command)</li>
	<li>Positionnement de cadre 3</li>
	<li>Configuration du cadre 2 avec la barre de défilement de cadre3</li>
</ol>
</li>
</ol>
Tkinter pour python fait partie des modules très bien documentés. Vous pouvez <a href="http://fsincere.free.fr/isn/python/cours_python_tkinter.php">consulter cette page en français</a> et <a href="https://tkdocs.com/tutorial/">pour être plus complet cette page en anglais</a>.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date>2018-11-02 10:53:16</wp:post_date>
		<wp:post_date_gmt>2018-11-02 09:53:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-quelques-minutes-avec-tkinter-gui</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[568]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Python] : Comment mettre en place un padding (retrait) sur votre sortie standard ?</title>
		<link>http://xavki.blog/?p=603</link>
		<pubDate>Tue, 06 Nov 2018 20:56:27 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=603</guid>
		<description></description>
		<content:encoded><![CDATA[Padding, je ne suis pas sûr que le terme soit tout à fait adapter. Mais en même temps je ne sais pas comment expliquer ce que je veux vous montrer.

Concrètement je dirais comment centrer un texte en l'entourant de caractères particuliers (spéciaux souvent) ? voici ce que nous cherchons à obtenir :
<pre>#####Bonjour#####</pre>
Ce genre d'affichage peut être sympa sur la sortie standard lorsque vous exécutez vos scripts. Ainsi vous pouvez faire des blocs et faire des mises en forme plus sympas.

Alors comment faire avec python ?
<pre>&gt;&gt;&gt; text="bonjour"
&gt;&gt;&gt; "{:#^20}".format(text)
'######bonjour#######'</pre>
Une autre ligne de commande fonctionne également :
<pre>&gt;&gt;&gt;format(text, '*^20')</pre>
Le padding centré est incrémenté par le caractère "^".

Pour réaliser un simple padding à gauche (un retrait à gauche), vous devriez passer la commande suivante :
<pre class="chroma"><code class="language-python"><span class="n">&gt;&gt;&gt;format</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="s1">'&gt;20'</span><span class="p">)</span></code></pre>
Et le retrait à droite pour la forme :
<pre class="chroma"><code class="language-python"><span class="n">&gt;&gt;&gt;format</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="s1">'&lt;20'</span><span class="p">)</span></code></pre>
Pour en savoir un peu plus sur ce sujet, <a href="https://docs.python.org/3.7/library/string.html#format-specification-mini-language">consultez la doc officielle python des spécifications des formats sur cette page</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>603</wp:post_id>
		<wp:post_date>2018-11-06 21:56:27</wp:post_date>
		<wp:post_date_gmt>2018-11-06 20:56:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>python-comment-padding-sortie-standard</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[203]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : couper un fichier en plusieurs avec split</title>
		<link>http://xavki.blog/?p=606</link>
		<pubDate>Thu, 11 Oct 2018 13:14:14 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=606</guid>
		<description></description>
		<content:encoded><![CDATA[Fichier trop gros ou besoin de découper votre fichier en parts égales ou splitter toutes les X lignes, c'est possible. Split est un binaire que j'utilise peu mais qui peu s'avérer très efficace. Voyons un peu comment celui-ci fonctionne avec quelques exemples.

Créons tout d'abord un fichier de test :
<pre>└─ $ ▶ for i in {0..100000};do echo "ligne ${i}"&gt;&gt;texte.txt; done</pre>
Avec ceci nous avons donc un fichier texte de 100 000 lignes.

Lançons un split sans option :
<pre>split texte.txt</pre>
Nous obtenons de nombreux fichiers de 1000 lignes chacun.
<pre>└─ $ ▶ wc -l x*
   1000 xaa
   1000 xab
   1000 xac</pre>
Remarquez que tous commence par un x.

Utilisons l'option -l pour définir le nombre de ligne par fichier :
<pre>└─ $ ▶ split -l50000 texte.txt 


└─ $ ▶ wc -l x*
50000 xaa
50000 xab</pre>
De la me manière nous aurions pu découper par taille de fichier en bytes avec l'option -b.

La nomenclature imposé dans le nommage du fichier est pas très fun mais on peut la retoucher en définissant un suffix numérique par exemple avec l'option -d. On a alors des fichiers nomé x01, x02...

Mais ce qui est le plus intéressant c'est de combiner l'utilisation d'un suffix et d'une numérotation numérique. Pour cela utilisons :
<pre>└─ $ ▶ split -d -l50000 texte.txt suffix-
└─ $ ▶ wc -l suffix*
50000 suffix-00
50000 suffix-01</pre>
Jusqu'ici je dirais que ce qui est embêtant c'est de se poser la questionde quel pas pour splitter les fichiers et combien vais-je en obtenir ? et bien au lieu de définir une taille ou un nombre de ligne, on peut définir le nombre de fichiers à la sortie avec l'option -n.
<pre>└─ $ ▶ split -d -n4 texte.txt suffix-
└─ $ ▶ wc -l suffix*
25694 suffix-00
24769 suffix-01
24769 suffix-02
24769 suffix-03</pre>
Comment fusionner tous les fichiers à l'arrivée si on a besoin du fichier d'origine ?
<pre>└─ $ ▶ md5sum texte.txt 
d4da8315d007541dfdcf61e2ea2fbecd texte.txt
└─ $ ▶ cat suffix-* | md5sum
d4da8315d007541dfdcf61e2ea2fbecd -</pre>
Un cat suffit et vous le voyez vous pouvez faire des vérifications sur le contenu avec le fameux md5sum.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2018-10-11 14:14:14</wp:post_date>
		<wp:post_date_gmt>2018-10-11 13:14:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-couper-fichier-avec-split</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[607]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : générez une adresse MAC et changez la votre -&#062; triche wifi</title>
		<link>http://xavki.blog/?p=616</link>
		<pubDate>Tue, 16 Oct 2018 12:25:27 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=616</guid>
		<description></description>
		<content:encoded><![CDATA[Avant de commencer par travailler sur votre adresse MAC, la première chose à faire est de vous créer une sauvegarde pour savoir faire demi-tour. Eh oui on ne change pas son adresse MAC sans filet de secours car elle correspond à votre matériel. J'imagine que vous savez comment faire ?
<pre>14:06:12 - oki @ doki ~ 
└─ $ ▶ ifconfig &gt; backup_ifconfig.txt</pre>
Maintenant on peut commencer à bosser. Comment générer une adresse MAC ?
<pre>14:02:57 - oki @ doki ~ 
└─ $ ▶ openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'</pre>
On utilise donc openssl en mode random et en hexa. Et grâce à sed on ajoute les ":" et on nettoie la variable obtenue.

Maintenant on peut passer à la modification de l'adresse MAC. Petit rappel, l'adresse MAC de votre PC est définie en usine et quoiqu'il arrive vous ne pourrez pas changer cette adresse "physique". Ainsi, avec un reboot de votre PC vous pourrez récupérer la bonne (de toute façon on a notre backup).

Alors pour changer cette adresse il faut que vous déterminiez votre interface principale avec ifconfig.

Ifconfig va aussi vous permettre de la changer de cette manière :
<pre>sudo ifconfig eth0 ether manouvelleadresse</pre>
Attention dans mon cas mon interface principale est eth0. Mais cela peut changer.

Donc si vous souhaitez intégrer la génération de l'adresse MAC et le changement en une ligne, voici la commande :
<pre>sudo ifconfig eth0 ether`openssl rand -hex 6 |\
sed 's/\(..\)/\1:/g; s/.$//'`</pre>
Vous venez de changer votre adresse MAC au niveau système.

Alors cette méthode, si simple, permet parfois de "hacker" ou plutôt tromper certains wifi (pas si courants). La triche se fera dès lors que vous tomberez sur des wifi avec des périodes gratuites (par exemple les 30 premières minutes). Dès le temps écoulé, vous faites un backup et vous lancez la commande et c'est reparti.

N'oubliez pas que vous pouvez récupérer votre adresse intiale en faisant un reboot de votre machine ou encore avec la commande.
<pre>sudo ifconfig eth0 ether votreancienneMAC</pre>
Retrouvez <a href="https://xavki.blog/bash-shell/">d'autres astuces linux et bash sur cette page</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>616</wp:post_id>
		<wp:post_date>2018-10-16 13:25:27</wp:post_date>
		<wp:post_date_gmt>2018-10-16 12:25:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-generez-une-adresse-mac-et-changez-la-votre-triche-wifi</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[619]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Sécurité] : scapy - scanner les réseaux wifi (SSID) et leur adresse MAC</title>
		<link>http://xavki.blog/?p=623</link>
		<pubDate>Thu, 18 Oct 2018 08:33:29 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=623</guid>
		<description></description>
		<content:encoded><![CDATA[Scapy, un mot qui peut faire peur car fait référence à certaines pratiques obscures en matière de sécurité. Effectivement, scapy fait partie des outils de base des hackers... peu importe leur couleur. Retrouvez <a href="https://scapy.readthedocs.io/en/latest/index.html">la documentation en ligne ici</a> et <a href="https://xavki.blog/codes-et-scripts-python/">mes autres post python ici</a>.

<img class="alignnone size-full wp-image-624" src="https://xavki.files.wordpress.com/2018/08/img-3211.jpg" alt="IMG-3211" width="4032" height="3024" />

Scapy permet notamment de faire de nombreuses opérations sur les réseaux comme sniffer, envoyer des paquets, scanner...

Ne vous inquiétez pas je ne suis pas obscure. Il s'agit simplement de l'envie de découvrir cet outil dont on entend si souvent parler. Aujourd'hui j'ai voulu découvrir comment scanner les réseaux wifi autour de moi (à priori rien d'illégale là-dedans... après cela dépend de ce que l'on fait avec le scan).

Première chose à faire installer scapy :
<pre>pip install scapy</pre>
C'est donc un simple module que je peux ajouter à python.

Je me reporte ensuite à <a href="https://linuxsecurityblog.com/2016/02/04/sniffing-access-points-and-its-mac-addresses-using-python/">cet article</a> qui propose de scanner les réseaux wifi. Il me faut donc installer aircrack-ng pour avoir accès à la comande airmon-ng. Aircrack est un binaire qui permet de réaliser de nombreux opérations de pénétrations de réseaux wifi (cracjing de clé...).
<pre>└─ $ ▶ sudo apt-get install aircrack-ng</pre>
Airmon-ng va nous permettre de devenir observateur du réseau (sans action dessus). Je lance donc airmon sur mon interface wifi :
<pre>sudo airmon-ng start wlp3s0</pre>
Voilà pour la première étape donc. Maintenant il faut créer un fichier python qui va utiliser le module scapy (je me reporte à la page citée précédemment... on vera pour faire notre propre script plus tard).

Je créé un fichier scapy_scan.py avec ceci :
<pre>from scapy.a:qll import *
ap_list = []
def packetRecup (pkt) :
    if pkt.haslayer (Dot11) :
        if pkt.type == 0 and pkt.subtype == 8 :
            if pkt.addr2 not in ap_list :
                ap_list.append(pkt.addr2)
                return "Réseau SSID: %s et MAC address: %s " %(pkt.info, pkt.addr2)
sniff(iface = "mon0" , prn = packetRecup)
</pre>
Que contient ce script ?
<ul>
	<li>import de la totalité de scapy</li>
	<li>création d'une liste ap_list</li>
	<li>création de la fonction packetRecup</li>
	<li>si pkt est un paquet sur le 802.11 (dot11) pour <a href="https://thepacketgeek.com/scapy-p-04-looking-at-packets/">en savoir plus sur l'objet paquet rendez-vous ici</a></li>
	<li>ensuite on s'intéresse à l'entête du paquet avec son type et son sous-type (<a href="https://witestlab.poly.edu/blog/802-11-wireless-lan-2/">reportez vous ici pour des rappels sur l'entête de paquet WLAN</a>)</li>
	<li>ajout à la liste l'adresse mac</li>
	<li>puis affichage du résultat en indiquant le SSID et MAC address</li>
</ul>
Conclusion : scapy est un outil qui à l'air simple à utiliser et à apprendre. Bien sûr il faut connaitre python avant toute chose et faire attention de ne pas partir sur des tentatives plus obscures dans l'utilisation de cet outil. Je pense que je me ferais encore quelques tests sur  mon réseau local notamment tenter de sniffer des paquets et de faire des envois car c'est un peu la base de l'outil.

Et vous vous utilisez scapy ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>623</wp:post_id>
		<wp:post_date>2018-10-18 09:33:29</wp:post_date>
		<wp:post_date_gmt>2018-10-18 08:33:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>securite-scapy-scanner-les-reseaux-wifi-ssid-et-leur-adresse-mac</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="securite"><![CDATA[Sécurité]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[624]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Mysql] : comment déconnecter un utilisateur ? (de force)</title>
		<link>http://xavki.blog/?p=640</link>
		<pubDate>Tue, 23 Oct 2018 18:49:13 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=640</guid>
		<description></description>
		<content:encoded><![CDATA[Mysql est un moteur de bdd performant et sympathique à l'utilisation, un peu à l'image de postgres. Si vous utilisez un WAMP ou LAMP pour faire vos développements, vous utilisez donc Mysql. C'est d'ailleurs certainement ce qui a permis la très forte progression de ce moteur ces dernières années.

Retrouvez d'autres articles <a href="https://xavki.blog/databases/">sur la page databases</a>.

Un DBA lorsqu'il doit intervenir sur une base ou un moteur, doit parfois être le seul connecter à la base ou à la machine. Mais certaines applications ne rendent pas la main très facilement. C'est souvent moins le cas des utilisateurs humains mais cela peut aussi être le cas d'une personne réticente ou encore mieux le DBA a besoin d'y aller comme un gros bourin et décide de reprendre la main de force.

Bref c'est dans ces derniers cas que l'on peut s'intéresser à vouloir déconnecter un user par la force (en lui coupant son processus).

Comment fait-on ?

La première chose à faire c'est de lister les processus en cours et les users et bases correspondants.

Voici la commande :
<pre>mysql&gt; show processlist;</pre>
le résultat prend la forme suivante :
<pre> +-----+------+-----------+---------+---------+-------+-------+------------------+
    | Id  | User | Host      | db      | Command | Time  | State | Info             |
    +-----+------+-----------+---------+---------+-------+-------+------------------+
    | 235 | appli1 | 192.20.1.2 | mydb | Query   | 28619 |       | NULL             |
    | 238 | owner | localhost | mydb | Query   |   853 |       | NULL             |
    | 241 | owner | localhost | NULL    | Query   |     0 | NULL  | show processlist |
    +-----+------+-----------+---------+---------+-------+-------+------------------+
    3 rows in set (0.00 sec)
</pre>
Dans notre cas nous voulons déconnecter appli1. Pour cela il suffit de repérer l'Id de la session (soit 235). Puis lancer :
<pre>mysql&gt; kill 235
</pre>
Et voilà le user appli1 est déconnecté.

N'hésitez pas en commentaire à partager vos pratiques sur mysql.

<img class="alignnone size-full wp-image-509" src="https://xavki.files.wordpress.com/2018/08/mysql-svg.png" alt="MySQL.svg" width="1280" height="662" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>640</wp:post_id>
		<wp:post_date>2018-10-23 19:49:13</wp:post_date>
		<wp:post_date_gmt>2018-10-23 18:49:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-comment-deconnecter-un-utilisateur-de-force</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[509]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Mysql] : comment générer le sql pour recréer un table ?</title>
		<link>http://xavki.blog/?p=643</link>
		<pubDate>Tue, 30 Oct 2018 20:29:38 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=643</guid>
		<description></description>
		<content:encoded><![CDATA[C'est un article similaire à celui que j'ai déjà pu faire pour oracle mais vous allez vous rendre compte qu'avec mysql c'est plus simple. Eh oui pas de dbms et autres trucs tordus de ce genre un simple "show" suffit.

Ah oui, j'allais oublier qu'avant de faire  ce genre de manip par un "show" je passais par des manips sur les dumps... autant dire que ce n'était pas léger et que cela a des limites très vite atteintes.

Alors comment récupérer le sql d'une table avec la commande "show" ? Facile
<pre>mysql&gt; show create table matable;
+---------+-------------------------------------------------------------------------------------------------------------------------------------+
| Table | Create Table |
+---------+-------------------------------------------------------------------------------------------------------------------------------------+
| matable | CREATE TABLE `matable` (
`id` int(11) DEFAULT NULL,
`monchamp` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 |
+---------+-------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0,00 sec)
</pre>
C'est facile donc et très efficace. Et vous comment pratiquez vous mysql et quelle version ?

<img class="alignnone size-full wp-image-644" src="https://xavki.files.wordpress.com/2018/08/mysql-recreate-table.jpeg" alt="mysql-recreate-table" width="2048" height="1536" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>643</wp:post_id>
		<wp:post_date>2018-10-30 21:29:38</wp:post_date>
		<wp:post_date_gmt>2018-10-30 20:29:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-comment-generer-le-sql-pour-recreer-un-table</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[644]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Mysql] : comment merger deux tables en une ?</title>
		<link>http://xavki.blog/?p=646</link>
		<pubDate>Thu, 25 Oct 2018 20:01:55 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=646</guid>
		<description></description>
		<content:encoded><![CDATA[Merger des tables sur mysql c'est possible. En effet, vous pouvez faire des associations de table assez facilement. Personnellement je ne suis pas un fan de cette solution nous allons voir pourquoi un peu plus loin. Commençons par créer deux tables similaires au niveau de la structure :
<pre>mysql&gt; create table tab3 (f1 varchar(255)) ENGINE=MyISAM;
Query OK, 0 rows affected (0,08 sec)

mysql&gt; create table tab4 (f2 varchar(255)) ENGINE=MyISAM;
Query OK, 0 rows affected (0,08 sec)</pre>
Puis insérons des données dans ces tables :
<pre>mysql&gt; insert into tab4 values ('table 2');
Query OK, 1 row affected (0,00 sec)

mysql&gt; insert into tab4 values ('table 2');
Query OK, 1 row affected (0,00 sec)</pre>
Maintenant créons la table de merge :
<pre>mysql&gt; create table fusion (f1 varchar(255)) ENGINE=MERGE UNION=(tab3,tab4) INSERT_METHOD=LAST;
Query OK, 0 rows affected (0,07 sec)</pre>
Et voici maintenant son contenu :
<pre>mysql&gt; select * from fusion;
+---------+
| f1 |
+---------+
| table 1 |
| table 1 |
| table 2 |
| table 2 |
+---------+
4 rows in set (0,01 sec)</pre>
Mais supprimons une des tables composant la table de merge et procédons à un nouveau SELECT :

mysql&gt; drop table tab3;
Query OK, 0 rows affected (0,00 sec)
<pre>mysql&gt; select * from fusion;
ERROR 1168 (HY000): Unable to open underlying table which is differently defined or of non-MyISAM type or doesn't exist</pre>
Et voilà mysql nous jette car nous venons de casser un des éléments constitutif de la table de merge. Pas terrible. Vous comprenez donc pourquoi il vaut mieux éviter de créer des tables de merge.

Et vous utilisez vous des tables de ce type ? avez vous rencontré des problèmes avec ?

<img class="alignnone size-full wp-image-647" src="https://xavki.files.wordpress.com/2018/08/mysql_table_merge.jpeg" alt="mysql_table_merge" width="2048" height="1536" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>646</wp:post_id>
		<wp:post_date>2018-10-25 21:01:55</wp:post_date>
		<wp:post_date_gmt>2018-10-25 20:01:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql-comment-merger-deux-tables-en-une</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[Mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[647]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : comment remettre en place le bashrc ou le bash_profile par défaut ?</title>
		<link>http://xavki.blog/?p=671</link>
		<pubDate>Wed, 07 Nov 2018 19:32:14 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=671</guid>
		<description></description>
		<content:encoded><![CDATA[Un article très court aujourd'hui pour revenir sur une situation qui m'est déjà arrivée. Tout heureux d'avoir trouvé une nouvelle fonction à mettre en place dans mon bahsrc, je décide de modifier celui-ci. Donc je faic un vim sur mon fichier favori et je le source.

Et là paff le chien. Mon bashrc ne fonctionne plus donc je reste bloqué sur mon terminal. Et là ce cas est assez facile pour revenir dessus car je sais quelles modifications j'ai fait. Mais cela peut arriver avec des comptes d'exploitation que l'on pousse sur un parc de serveur. Et alors imaginez cela sur un bastion c'est un peu balot.

Parfois on peut avoir besoin de restaurer un bashrc fonctionnel très rapidement. Dans ce cas la solution est de restaurer le bashrc par défaut à partir des squelettes à votre disposition dans /etc/skel :

<pre>
20:33:33 - oki @ doki /etc/skel
└─ $ ▶ ls -larth
total 28K
-rw-r--r-- 1 root root 3,7K sept. 1 2015 .bashrc
-rw-r--r-- 1 root root 220 sept. 1 2015 .bash_logout
-rw-r--r-- 1 root root 655 mai 16 2017 .profile
cp /etc/skel/.bashrc ~/</pre>
Une fois ce copier/coller réalisé, vous devez sourcer le fichier si vous volez :
<pre>source ~/.bashrc</pre>
 

[caption id="attachment_672" align="alignnone" width="1733"]<img class="alignnone size-full wp-image-672" src="https://xavki.files.wordpress.com/2018/08/pexels-photo-277052.jpeg" alt="board game business challenge chess" width="1733" height="1300" /> Photo by Pixabay on <a href="https://www.pexels.com/photo/board-game-business-challenge-chess-277052/" rel="nofollow">Pexels.com</a>[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>671</wp:post_id>
		<wp:post_date>2018-11-07 20:32:14</wp:post_date>
		<wp:post_date_gmt>2018-11-07 19:32:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-comment-remettre-en-place-le-bashrc-par-defaut</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[672]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : rsync - entre deux machines en définissant le port à utiliser</title>
		<link>http://xavki.blog/?p=243</link>
		<pubDate>Fri, 23 Nov 2018 06:51:33 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[Rsync est un super outil qui permet comme son nom le laisse deviner, de synchroniser des fichiers ou des répertoires. Il permet notamment de gagner du temps pour ne synchroniser que le nécessaire si une modification intervient. Bref une brave bête ce rsync.

Comment synchroniser un fichier ou un répertoire entre 2 machines en fixant un port particulier ?
<pre>rsync -avz -e "ssh -p $portutilise" utilisateur@serveur2:/chemin/source/ /chemin/destination/
</pre>
Donc :
<ul>
	<li>rsync -avz : mode archive (a), mode compressé (z) et verbose</li>
	<li>-e pour lancer une commande en l'occurence la connexion ssh</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2018-11-23 07:51:33</wp:post_date>
		<wp:post_date_gmt>2018-11-23 06:51:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-rsync-entre-deux-machines-en-definissant-le-port-a-utiliser</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<category domain="category" nicename="trucs-et-astuces"><![CDATA[Trucs et astuces]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[126]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Docker] : mettre à jour toutes les images en une seule ligne de commande</title>
		<link>http://xavki.blog/?p=292</link>
		<pubDate>Wed, 14 Nov 2018 14:05:35 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[Potentiellement, un serveur docker peut faire appel à de nombreuses images. Il arrive un moment où on peut être intéressé pour faire une mise à jour globale de ces images. Pourquoi pas automatiser cela si les images ne sont pas risquées en terme de modification ?

Cette commande est donc à lancer avec des pincettes et lorsque l'on a bien conscience de ce que l'on fait (ça vaut toujours le coup de le rappeler).
<pre>docker images | grep -v REPOSITORY | awk '{print $1}' | xargs -L1 docker pull
</pre>
Donc :
<ul>
	<li>on liste les images</li>
	<li>on vire la première ligne avec un grep</li>
	<li>on garde la première colonne avec un awk</li>
	<li>on utilise xargs pour passer un docker pull sur les noms des images.<img class="alignnone size-full wp-image-293" src="https://xavki.files.wordpress.com/2018/07/vignette_docker.jpg" alt="vignette_docker" width="702" height="336" /></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2018-11-14 15:05:35</wp:post_date>
		<wp:post_date_gmt>2018-11-14 14:05:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-mettre-a-jour-toutes-les-images-en-une-seule-ligne-de-commande</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[293]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] : pdftk pour fusionner des pdf  et d&#039;autres actions</title>
		<link>http://xavki.blog/?p=317</link>
		<pubDate>Fri, 16 Nov 2018 09:22:59 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[J'aime beaucoup les petits outils linux qui une fois installés permettent en une ligne de faire pas mal de trucs. Souvent on peut ensuite les enchainer avec d'autres outils et le tout fait des trucs sur-puissants sur quelque sligne ou même une seule.

pdftk fait partie de ces outils pratiques. Il permet de faire des actions sur des fichiers pdf, notamment la fusion de pdf.

Ainsi avec :
<pre>pdftk fichier1.pdf fichier2.pdf fichier3.pdf cat output fusion.pdf</pre>
Donc on merge 3 fichiers pdf en un seul.

On peut aussi supprimer des pages :
<pre>pdftk fichier1.pdf cat 1-4 6-end output fusion.pdf</pre>
avec cela on supprime la page 5.

Pratiquer une rotation de 90 degrés :
<pre>pdftk fichier1.pdf cat 1east 2-end output fusion.pdf</pre>
Extraire les metadata d'un fichier pdf :
<pre>pdftk fichier1.pdf dump_data output metadata.txt</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2018-11-16 10:22:59</wp:post_date>
		<wp:post_date_gmt>2018-11-16 09:22:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-pdftk-pour-fusionner-des-pdf-et-dautres-actions</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[318]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux][Sécurité] : nmap : comment scanner les ports d&#039;un serveur ?</title>
		<link>http://xavki.blog/?p=392</link>
		<pubDate>Thu, 22 Nov 2018 05:32:08 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">https://xavki.wordpress.com/?p=392</guid>
		<description></description>
		<content:encoded><![CDATA[Avec nmap, il est temps de parler un peu réseau. En tout cas, un sysadmin se doit de savoir faire un bon scan de ports sur une machine ou une adresse (derrière laquelle il y a une machine). Et nmap est l'outil le plus facile à utiliser et à installer pour faire ce genre de travail.

N'oubliez pas vous aussi de partager en commentaire vos commandes. Je suis preneur.

Comment scanner un site ?
<pre>#installation
sudo apt-get install nmap

└─ $ ▶ sudo nmap -v google.fr

Starting Nmap 7.01 ( https://nmap.org ) at 2018-08-05 21:32 CEST
Initiating Ping Scan at 21:32
Scanning google.fr (216.58.206.227) [4 ports]
Completed Ping Scan at 21:32, 0.21s elapsed (1 total hosts)
Initiating Parallel DNS resolution of 1 host. at 21:32
Completed Parallel DNS resolution of 1 host. at 21:32, 3.63s elapsed
Initiating SYN Stealth Scan at 21:32
Scanning google.fr (216.58.206.227) [1000 ports]
Discovered open port 1723/tcp on 216.58.206.227
Discovered open port 53/tcp on 216.58.206.227
Discovered open port 21/tcp on 216.58.206.227
Discovered open port 443/tcp on 216.58.206.227
Discovered open port 554/tcp on 216.58.206.227
Discovered open port 80/tcp on 216.58.206.227
Discovered open port 8080/tcp on 216.58.206.227
Completed SYN Stealth Scan at 21:33, 9.83s elapsed (1000 total ports)
Nmap scan report for google.fr (216.58.206.227)
Host is up (0.035s latency).
Other addresses for google.fr (not scanned): 2a00:1450:4007:817::2003
rDNS record for 216.58.206.227: par10s34-in-f3.1e100.net
Not shown: 993 filtered ports
PORT     STATE SERVICE
21/tcp   open  ftp
53/tcp   open  domain
80/tcp   open  http
443/tcp  open  https
554/tcp  open  rtsp
1723/tcp open  pptp
8080/tcp open  http-proxy

</pre>
On peut donc voir les ports ouverts et le type de service ui correspond. C'est déjà bien sympa non ?

Comment scanner les ports d'une machine ?
<pre># scan de la machine 172.20.10.2
nmap -T4 -A -v -oG - 1725.20.10.2

# résultat
# Nmap 7.01 scan initiated Sun Aug  5 18:16:21 2018 as: nmap -T4 -A -v -oG - 172.20.10.2
# Ports scanned: TCP(1000;1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5431-5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389) UDP(0;) SCTP(0;) PROTOCOLS(0;)
Host: 172.20.10.2 ()	Status: Up
Host: 172.20.10.2 ()	Ports: 22/open/tcp//ssh//OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)/	Ignored State: closed (999)
# Nmap done at Sun Aug  5 18:16:26 2018 -- 1 IP address (1 host up) scanned in 4.79 seconds
</pre>
Donc ça crache du log, j'ai hésitez à couper mais bon c'est pour vous dire que vous risquez pas de passer à côté d'un port non testé.

Donc pour les options :
<ul>
	<li>-oG : sortie output grepable</li>
	<li>-T4 : l'agressivité (pour scanner plus ou moins vite)</li>
	<li>-v : verbeux</li>
	<li>-A : détection de la version et OS</li>
</ul>
Le plus important c'est l'avant dernière ligne :
<pre>Host: 172.20.10.2 ()	Ports: 22/open/tcp//ssh//OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)/	Ignored State: closed (999)
</pre>
On y apprend donc que les ports et leurs status sont :
<ul>
	<li style="list-style-type:none;">
<ul>
	<li>22 : pour le ssh et il est fermé</li>
	<li>... et c'est tout(j'ai pas de postgres et autres trucs sur cette machine. Autant vous dire que l'on ne pentest pas celle-ci facilement.</li>
</ul>
</li>
</ul>
Vous comprenez donc pourquoi cette commande est quasi fétiche chez les hackers. En effet, ça donne des idées par où entrer. Eux vont d'embler chercher les ports OPEN.

Vous pouvez aussi utiliser nmap pour scanner un réseau (lan ou vlan) et ainsi connaître les ip déjà utilisé et up. Voici comment faire :
<pre>└─ $ ▶ sudo nmap -sP 172.20.10.* 
Starting Nmap 7.01 ( https://nmap.org ) at 2018-08-05 21:20 CEST
Nmap scan report for 172.20.10.1
Host is up (0.34s latency).
MAC Address: xx:xx:xx:xx:xx:xx (Unknown)
Nmap scan report for 172.20.10.2
Host is up (0.00045s latency).
MAC Address: xx:xx:xx:xx:xx:xx (Oracle VirtualBox virtual NIC)
Nmap scan report for 172.20.10.3
Host is up.
</pre>
On a donc 3 ip up : 172.20.10.1 / 172.20.10.2 / 172.20.10.3

De cette manière, vous pouvez aussi récupérer les adresses mac... et faire des usurpation d'adresse lol. Je déconne c'est pas le but. Faudrait aller vers ceci :
<pre>nmap --spoof-mac xx:xx:xx:xx:xx:xx 127.0.0.1
</pre>
Bon le but n'est pas de devenir un hacker, pour aller plus loin <a href="https://nmap.org/">rendez vous sur le site de nmap</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>392</wp:post_id>
		<wp:post_date>2018-11-22 06:32:08</wp:post_date>
		<wp:post_date_gmt>2018-11-22 05:32:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linuxsecurite-nmap-comment-scanner-les-ports-dun-serveur</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[393]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Linux] comment activer son wifi en ligne de commande ?</title>
		<link>http://xavki.blog/?p=511</link>
		<pubDate>Thu, 15 Nov 2018 13:10:00 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=511</guid>
		<description></description>
		<content:encoded><![CDATA[Fichu WIFI, parfois il s'active bien, d'autres fois je me galère pour le lancer. Du coup, je me préfère le gérer en ligne de commande. A terme cela peut permettre d'aboutir à un script si vraiment j'en ai raz le bol.
<h2>Vérifiez les paramètres de votre interface wiki</h2>
Pour cela on utilise le binaire "iw"
<pre>└─ $ ▶ /sbin/iw dev
phy#0
Interface <strong>wlp3s0</strong>
ifindex 3
wdev 0x1
addr xx:xx:xx:xx:xx:xx
type managed</pre>
Ainsi vous pouvez retenir le nom de votre interface.
<h2>Vérifiez si l'interface wifi est UP</h2>
On utilise le binaire "ip" comme ceci
<pre>└─ $ ▶ ip link show wlan0
Device "wlan0" does not exist.</pre>
Et là confirmation, je n'ai pas de wifi.
<h2>Montez votre interface</h2>
<pre>Toujours avec IP on tente de monter la carte.

└─ $ ▶ sudo ip link set wlp3s0 up 
RTNETLINK answers: Operation not possible due to RF-kill</pre>
Mais là on a un message d'erreur. On ne peut pas remonter la carte car il y a un verrou. Donc on va le lever.
<pre>└─ $ ▶ rfkill list all
0: tpacpi_bluetooth_sw: Bluetooth
Soft blocked: yes
Hard blocked: no
1: tpacpi_wwan_sw: Wireless WAN
Soft blocked: no
Hard blocked: no
2: phy0: Wireless LAN
Soft blocked: yes
Hard blocked: no</pre>
Bon pour simplifier on va tous les délockés.
<pre><code>sudo rfkill unblock all</code></pre>
et ensuite on retente de monter notre wlp3s0
<pre>└─ $ ▶ sudo ip link set wlp3s0 up
└─ $ ▶ ip link show wlp3s0
3: wlp3s0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000
    link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff

</pre>
et là pas de souci.
<h2>Vérification et connexion</h2>
Maintenant vérifions si nous avons du wifi de connecter dessus.
<pre>└─ $ ▶ sudo /sbin/iw wlp3s0 link
Not connected.</pre>
Donc rien pour l'instant. Alors on lance un scan des réseaux wifi à disposition.
<pre>└─ $ ▶ sudo /sbin/iw wlp3s0 scan
BSS xx:xx:xx:xx:xx:xx (on wlp3s0)
	TSF: 4058009 usec (0d, 00:00:04)
	freq: 2462
	beacon interval: 100 TUs
	capability: ESS Privacy SpectrumMgmt ShortSlotTime RadioMeasure (0x1511)
	signal: -6.00 dBm
	last seen: 88 ms ago
	Information elements from Probe Response frame:
	<strong>SSID: iPhone</strong>
	Supported rates: 1.0* 2.0* 5.5* 11.0* 18.0 24.0 36.0 54.0 
	DS Parameter set: channel 11
	Country: FR	Environment: Indoor/Outdoor
		Channels [1 - 13] @ 20 dBm
	Power constraint: 0 dB
	TPC report: TX power: 15 dBm
	ERP: &lt;no flags&gt;
	Extended supported rates: 6.0 9.0 12.0 48.0 
	RSN:	 * Version: 1
		 * Group cipher: CCMP
		 * Pairwise ciphers: CCMP
		 * Authentication suites: PSK
		 * Capabilities: 16-PTKSA-RC 1-GTKSA-RC (0x000c)

</pre>
Puis connexion au wpa/wpa2
<pre>sudo wpa_supplicant -B -D wext -i wlp3s0 -D nl80211 -c /etc/wpa_supplicant.conf

/sbin/iw wlp3s0 link
Connected to xx:xx:xx:xx:xx:xx</pre>
Utiliser DHCP pour obtenir une adresse IP
<pre class="text">sudo dhclient wlp3s0</pre>
Et voilà, vous n'avez plus qu'à faire quelques ping pour tester.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>511</wp:post_id>
		<wp:post_date>2018-11-15 14:10:00</wp:post_date>
		<wp:post_date_gmt>2018-11-15 13:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-comment-activer-son-wifi-en-ligne-de-commande</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Bash] : le bloc note de Wget</title>
		<link>http://xavki.blog/?p=710</link>
		<pubDate>Tue, 13 Nov 2018 13:05:08 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=710</guid>
		<description></description>
		<content:encoded><![CDATA[Un article pour retenir l'essentiel dans la commande wget. C'est une commande que l'on utilise souvent mais trop rarement on s'y intéresse en détails.

Quelques essentiels :
<ul>
	<li>Télécharger simplement un fichier</li>
</ul>
<pre>wget http://google.fr</pre>
<ul>
	<li>Pour savoir où vous en êtes en cas de crash lors du téléchargement</li>
</ul>
<pre>wget -c http://google.fr</pre>
<ul>
	<li>Télécharger en arrière plan</li>
</ul>
<pre>wget -b http://google.fr</pre>
<ul>
	<li>Limiter la vitesse de téléchargement</li>
</ul>
<pre>wget --limit-rate=200k http://google.fr</pre>
<ul>
	<li>Télécharger à partir d'un fichier contenant une liste d'url</li>
</ul>
<pre>wget -i liste.txt</pre>
<ul>
	<li>Aspirer la totalité d'un site</li>
</ul>
<pre>wget --mirror -p --convert-links -P ./madestination/ https://xavki.blog</pre>
<ul>
	<li>Aspirer un ftp avec user/password</li>
</ul>
<pre>wget --ftp-user=user --ftp-password=motdepasse ftp://url</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2018-11-13 14:05:08</wp:post_date>
		<wp:post_date_gmt>2018-11-13 13:05:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash-le-bloc-note-de-wget</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[711]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Oracle] : comment lister les tables lockées et les dévérouiller ?</title>
		<link>http://xavki.blog/?p=752</link>
		<pubDate>Tue, 20 Nov 2018 08:30:07 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=752</guid>
		<description></description>
		<content:encoded><![CDATA[Un article oracle, cela faisait longtemps il me semble. Lorsqu'un moteur de base de donnée travaille, il est parfois nécessaire pour lui de vérouiller (locker) certains éléments notamment des tables.

Vous pouvez retrouver d'autres articles de ce type <a href="https://xavki.blog/databases/">sur la page databases</a>.

L'inconvénient c'est que suivant les cas vous ne pouvez plus y accéder. Attention, généralement un lock a toujours une bonne raison d'être posé (sauvegarde en cours, modifications, plantage, processus en attente...). Bien que chaque moteur est conçu pour limiter au maximum ces verrous cela arrive encore (les verrous se trouvent maintenant plus au niveau des lignes que sur des tables entières et <a href="https://vladmihalcea.com/how-does-mvcc-multi-version-concurrency-control-work/">le mvcc intervient</a> également). Mais des moteurs comme mysql myisam ne savent pas fonctionner autrement (au profit d'autres intérêts : performance notamment).

Bref, pour oracle, et pour d'autres moteurs avant d'intervenir vous devez identifier pourquoi les tables sont lockées (parfois cela vient de connexions qui bouclent, de sauvegardes en cours qui buggent...). Bref comment lister les tables en question ?

A l'aide d'une requête sur la vue oracle v$locked :
<pre>&gt; sqlplus '/ as sysdba'
&gt; select
obj.owner, obj.object_name, obj.object_type,
sess.sid, sess.serial#, sess.status, sess.osuser, sess.machine
from
v$locked_object lock, v$session sess, dba_objects obj
where
sess.sid = lock.session_id and lock.object_id = obj.object_id;</pre>
Vous voyez aussi l'intérêt d'appeler aussi la table dba_objects et la vues v$session car vous pouvez plus facilement identifier la session et le user à l'origine du lock. Remarquez aussi que des locks peuvent être posés sur d'autres objets que des tables.

Mais que faire ensuite ? déverrouiller pardi lol !

Et là c'est simple.
<pre>&gt; sqlplus '/ as sysdba'&gt; alter table nom_de_table disable table lock;</pre>
Voilà je pense que nous avez fait le tour sur cette petite manip que l'on peut demander à un dba oracle.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>752</wp:post_id>
		<wp:post_date>2018-11-20 09:30:07</wp:post_date>
		<wp:post_date_gmt>2018-11-20 08:30:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oracle-comment-lister-les-tables-lockees-et-les-deverouiller</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[515]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Docker] : Comment prendre en compte un proxy pour puller/pusher et comment le passer dans un conteneur ?</title>
		<link>http://xavki.blog/?p=785</link>
		<pubDate>Wed, 21 Nov 2018 12:52:19 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=785</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

Docker, c'est un sujet que j'ai l'occasion de creuser un peu en ce moment. Les pros de docker comme les devops savent faire cela les doigts dans le nez mais pour les débutants c'est un petit moment de recherche.

Lorsque l'on parle de docker et de proxy, deux questions reviennent souvent :
<ul>
	<li>Comment prendre en compte un proxy sur la machine host pour puller/pusher des images ?</li>
	<li>Comment faire pour que mon conteneur utilise un proxy ?</li>
</ul>
<h2>1. Utilisation d'un proxy sur la machine host de docker</h2>
Pour prendre en compte un proxy et éviter d'y revenir, il est nécessaire d'éditer la configuration de docker. Ainsi, comme si vous paramétiez votre proxy pour une utilisation par apt, vous allez vous rendre dans /etc/systemd/system/docker.service.d/ et créer un fichier de conf.

Par exemple, nous allons créer un fichier intitulé https-proxy.conf. Et nous allons ajouter dedans l'adresse de notre proxy en variable d'environnement (pour le service docker donc) :
<pre>[Service]
Environment="HTTPS_PROXY=http://monproxy:sonport"</pre>
Une fois ceci réalisé, le premier réflexe est de redémarrer le service docker... C'est pas faux mais dans notre cas on vient de modifier la conf de docker au niveau de systemd. donc il faut tout d'abord redémarrer le démond :
<pre>systemctl daemon-reload
service docker restart</pre>
Et voilà pour la première partie, vous pouvez utiliser votre proxy avec docker pour faire des pull et des push vers votre repository (dockerhub ou autre). Mais attention si vous être sur votre laptop, il se peut que vous ayez besoin de switcher (avec ou sans proxy), je vous invite donc à faire les fonctions qui vont bien ou alias pour vous faciliter la vie. L'idée c'est d'utiliser :
<pre>echo "Environment=\"HTTP_PROXY=http://monproxy:monport\"" | 
sudo tee --append /etc/systemd/system/docker.service.d/http-proxy.conf</pre>
<h2>2. Passer la conf de votre proxy dans un conteneur</h2>
C'est indispensable si vous êtes derrière un proxy sinon pas d'update ou d'installation possible sur le conteneur.

Et là docker est tout simplement génial car il permet de passer des variables d'environnement dans le conteneur à son lancement (son run). Remarque : si cela est plus durable vous pouvez faire cela directement dans votre Dockerfile.

Comment passer votre variable de proxy ? comme ceci :
<pre>docker run -tid -e http_proxy="http://monproxymonport" 
--name nom_conteneur nom_image</pre>
Et le tour est joué. Vous pouvez aussi passer un serveur dns avec --dns="monipdns".

Si vous voulez que votre image contienne toujours cette variable, vous devez la builder avec cette variable. Là encore c'est pas compliqué à ajouter dans le dockerfile :
<pre>ENV http_proxy="http://monproxymonport"</pre>
Vous pouvez consulter <a href="https://vsupalov.com/docker-build-pass-environment-variables/">ce bon article sur les variables docker</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>785</wp:post_id>
		<wp:post_date>2018-11-21 13:52:19</wp:post_date>
		<wp:post_date_gmt>2018-11-21 12:52:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-comment-prendre-en-compte-un-proxy-pour-puller-pusher-et-comment-le-passer-dans-un-conteneur</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[293]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Ansible] - comment utiliser les gather_facts et tenir à jour un début de cmdb ?</title>
		<link>http://xavki.blog/?p=829</link>
		<pubDate>Mon, 26 Nov 2018 09:41:56 +0000</pubDate>
		<dc:creator>xavki</dc:creator>
		<guid isPermaLink="false">http://xavki.blog/?p=829</guid>
		<description></description>
		<content:encoded><![CDATA[Ansible regorge d'astuces qu'il faut engranger pour pouvoir aller plus loin et ne pas simplement installer des paquets sur des machines distantes. Par exemple, nous allons voir aujourd'hui une valorisation des gather_facts de ansible. Sur puppet, je crois que la même chose est réalisable avec facter.

Gather_facts c'est la possibilité d'utiliser des variables d'environnement ansible. Ce sont principalement des caractéristiques de la machine (interface, os...). Ces données vous vous en doutez seraient bien utiles dans une cmdb (centralisation d'informations de votre parc de machine).

Pour commencer cette démos nous allons commencer par créer quelques machines à l'aide de <a href="https://xavki.blog/2018/09/21/dockeransible-comment-se-creer-un-mini-datacenter-de-test-sans-vm-parc-de-conteneurs/">mon script maison</a> (vous pouvez <a href="https://www.youtube.com/watch?v=zd_Ch0W3RAM">aussi le découvrir en vidéo désormais</a>). Dans mon cas, j'ai 2 vm debian qui fonctionnent avec du ssh (merci docker).
<pre>└─ $ ▶ ./deploy-centre-sans-proxy-v2.sh --infos
#### Récap des conteneurs de tests ####
=&gt; /oki-deb-vmparc3 - 172.17.0.3 - Utilisteur : oki / mdp:password
=&gt; /oki-deb-vmparc2 - 172.17.0.2 - Utilisteur : oki / mdp:password</pre>
Maintenant nous allons configurer notre inventory hosts.yml très simplement :
<pre>all:  hosts:    172.17.0.2:    172.17.0.3:</pre>
<h2>Objectif ?</h2>
Notre souhait c'est d'utiliser les gather_facts et faire en sorte que ansible centralise tout cela sous forme de fichiers.html. Ainsi nous pourrons faire de la datavisualisation avec un apache installé localement (attention c'est pour la démo, c'est très moyen d'installer un serveur web sur une machine qui a la main sur tout votre parc).

Enfin, grâce à notre apache on pourra afficher dans un navigateur web. Et vous verrez ce qui compte c'est le principe car derrière c'est assez facile d'avoir des idées pour compléter tout cela pour avoir un bon début de cmdb.
<h2>Comment lister les gather_facts à notre dispostion ?</h2>
Les gather_facts sont accessibles via le module setup de ansible. Donc pour consulter toutes ces variables voici la commande à réaliser :
<pre>ansible all - i hosts.yml -u oki -m "setup"</pre>
La liste est assez longue et c'est plutôt une bonne nouvelle.

Faisons nos courses et retenons les variables :
<ul>
	<li>inventory_hostname</li>
	<li>ansible_default_ipv4.alias</li>
	<li>ansible_architecture</li>
	<li>ansible_distribution</li>
	<li>ansible_distribution_version</li>
</ul>
Et on met tout cela en forme dans un template jinja2 pour générer à terme un fichier html :
<pre>&lt;h1&gt;Machine : {{ inventory_hostname }}&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Interfaces : {{ ansible_default_ipv4.alias }}&lt;/li&gt;
&lt;li&gt;Architecture : {{ ansible_architecture }}&lt;/li&gt;
&lt;li&gt;OS : {{ ansible_distribution }}&lt;/li&gt;
&lt;li&gt;Version : {{ ansible_distribution_version }}&lt;/li&gt;
&lt;/ul&gt;</pre>
<h2>Maintenant le playbook !</h2>
Voici le contenu de notre répertoire :
<pre>.
├── hosts.yml
├── playbook-cmdb.yml
└── templates
└── listing_ipv4.html.j2</pre>
Editons donc le playbook-cmdb.yml de la manière suivante :
<pre>---
- name: "[IP v4 listing]"
  hosts: all
  gather_facts: yes
  tasks:
    - name: "[IP v4 listing] - generate html"
      template:
        src: listing_ipv4.html.j2
        dest: "/var/www/html/{{ inventory_hostname }}.html"
      connection: local</pre>
Première chose on spécifie l'utilisation des gather_acts. Ensuite on utilise le module template pour faire appel au fichier jinja2. Puis on indique comme destination le répertoire de notre apache /var/www/html/ (de la machine master host). C'est aussi pour cela que nous spécifions connection : local.

Maintenant lançons la commande ansible-playbook :
<pre>ansible-playbook -i hosts.yml -u oki playbook-cmdb.yml</pre>
Et bingo :
<pre>PLAY [[IP v4 listing]] *******************************

TASK [Gathering Facts] *******************************
ok: [172.17.0.3]
ok: [172.17.0.2]

TASK [[IP v4 listing] - generate html] ***************
changed: [172.17.0.3]
changed: [172.17.0.2]

PLAY RECAP *******************************************
172.17.0.2 : ok=2 changed=1 unreachable=0 failed=0 
172.17.0.3 : ok=2 changed=1 unreachable=0 failed=0</pre>
Supprimons l'index de notre apache local : rm -f /var/www/html/index.html

Remarque : j'ai confié les droits de ce réprtoire à oki pour cet exercice

Et voici le résultat, une fiche par machine :

<img class="alignnone size-full wp-image-830" src="https://xavki.files.wordpress.com/2018/10/fiche-arbre.png" alt="fiche-arbre" width="640" height="400" />

Puis la fiche de la machine :

<img class="alignnone size-full wp-image-831" src="https://xavki.files.wordpress.com/2018/10/fiche-cmdb.png" alt="fiche-cmdb.png" width="640" height="400" />

C'est bon tout ça non ? On comprend mieux l'intérêt des facts avec ce genre d'outils d'orchestration. Et ne vous inquiétez pas vous pouvez aisément pousser les fichier vers une autre machine qui portera un service apache de manière isolée.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>829</wp:post_id>
		<wp:post_date>2018-11-26 10:41:56</wp:post_date>
		<wp:post_date_gmt>2018-11-26 09:41:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ansible-comment-utiliser-les-gather_facts-et-tenir-a-jour-un-debut-de-cmdb</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ansible"><![CDATA[Ansible]]></category>
		<wp:postmeta>
			<wp:meta_key>_rest_api_published</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_rest_api_client_id</wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[831]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
